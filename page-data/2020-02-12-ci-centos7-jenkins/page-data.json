{"componentChunkName":"component---src-templates-blog-template-js","path":"/2020-02-12-ci-centos7-jenkins/","result":{"data":{"cur":{"id":"8bcdb6b6-82ce-54a7-b46e-bdaf31f29106","html":"<h3 id=\"global-tool-configuration\" style=\"position:relative;\"><a href=\"#global-tool-configuration\" aria-label=\"global tool configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Global Tool Configuration</h3>\n<ol>\n<li>Jenkins 관리 > Global Tool Configuration 이동</li>\n<li>JDK<br>\nUncheck Install automatically<br>\nName : jdk1.8<br>\nJAVA_HOME : /usr/local/java</li>\n<li>MAVEN<br>\nUncheck Install automatically<br>\nName : maven3.5.2<br>\nJAVA_HOME : /usr/local/maven</li>\n<li>NodeJS (nvm 사용시)<br>\nUncheck Install automatically<br>\nName : nodejs12.16.0<br>\nInstallation directory : /home/whitexozu/.nvm/versions/node/v12.16.0</li>\n</ol>\n<h3 id=\"build-설정-springboot\" style=\"position:relative;\"><a href=\"#build-%EC%84%A4%EC%A0%95-springboot\" aria-label=\"build 설정 springboot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Build 설정 (springboot)</h3>\n<ol>\n<li>새로운 Item 클릭</li>\n<li>이름 및 타입 입력<br>\nEnter an item name 입력 (ex:build)<br>\nitem 타입 선택 (Freestyle project)</li>\n<li>\n<p>build 설정</p>\n<ol>\n<li>General<br>\nGitHub project 선택<br>\nProject url : <a href=\"https://github.com/whitexozu/Springboot-Example.git\">https://github.com/whitexozu/Springboot-Example.git</a></li>\n<li>소스 코드 관리<br>\nGit 선택<br>\nRepositories > Credentials 의 Add 에서 Jenkins 선택 후 본인 github의 username/password 입력<br>\nRepositories > Repository URL : <a href=\"https://github.com/whitexozu/Springboot-Example.git\">https://github.com/whitexozu/Springboot-Example.git</a><br>\nRepositories > Credentials : whitexozu/<strong>**</strong><br>\nRepository browser : githubweb 선택<br>\nRepository browser > URL : <a href=\"https://github.com/whitexozu/Springboot-Example.git\">https://github.com/whitexozu/Springboot-Example.git</a></li>\n<li>\n<p>빌드유발</p>\n<blockquote>\n<p><a href=\"https://kutar37.tistory.com/entry/Jenkins-Github-%EC%97%B0%EB%8F%99-%EC%9E%90%EB%8F%99%EB%B0%B0%ED%8F%AC-3\">https://kutar37.tistory.com/entry/Jenkins-Github-%EC%97%B0%EB%8F%99-%EC%9E%90%EB%8F%99%EB%B0%B0%ED%8F%AC-3</a></p>\n</blockquote>\n</li>\n<li>\n<p>Build<br>\nkill spring boot tomcat of local server > make jar > run spring boot tomcat 총 3단계로 진행</p>\n<ol>\n<li>\n<p>shell 파일 생성<br>\n/var/lib/jenkins/workspace/springboot-test/start.sh</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"> <span class=\"token comment\">#!/bin/sh</span>\n\n <span class=\"token assign-left variable\">BUILD_ID</span><span class=\"token operator\">=</span>dontKillMe <span class=\"token function\">nohup</span> /usr/local/java/bin/java -jar /var/lib/jenkins/workspace/springboot-test/Springboot-Swagger2/target/springboot-swagger2-0.0.1-SNAPSHOT.jar -server <span class=\"token operator\">></span> /var/lib/jenkins/workspace/springboot-test/logs/springboot-swagger2.log <span class=\"token operator\">&amp;</span>\n <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'springboot-swagger2 is running on the server...'</span></code></pre></div>\n<p><em>로컬 서버에서 서버기동시 정상적으로 작동하지 않는 이슈가 발생, 원인은 젠킨스 빌드 종료시 진행중인 프로세스가 모두 종료되어 nohup 같은 명령어가 정상적으로 작동하지않는 문제가 있다, 그래서 기동 명령에 BUILD</em>ID=dontKillMe 를 붙여 주어야 한다._</p>\n<blockquote>\n<p><a href=\"https://jang8584.tistory.com/248\">https://jang8584.tistory.com/248</a></p>\n</blockquote>\n<p>/var/lib/jenkins/workspace/springboot-test/stop.sh</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"> <span class=\"token comment\">#!/bin/sh</span>\n\n <span class=\"token function\">kill</span> -15 <span class=\"token variable\"><span class=\"token variable\">`</span> <span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> springboot-swagger2 <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v <span class=\"token function\">grep</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v <span class=\"token function\">tail</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ print $2 }'</span><span class=\"token variable\">`</span></span>\n <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"springboot-swagger2 has been shutdown...\"</span></code></pre></div>\n</li>\n<li>\n<p>build 명령어 등록</p>\n<ol>\n<li>Add build step > Execute shell 선택<br>\nCommand : /var/lib/jenkins/workspace/springboot-test/start.sh</li>\n<li>Add build step > Invork top-level Maven targets 선택<br>\nInvork top-level Maven targets > Maven Version : Global Tool Configuration 에서 입력한 maven name 선택<br>\nGoals : -f /var/lib/jenkins/workspace/springboot-test/Springboot-Swagger2 spring-boot:run</li>\n<li>Add build step > Execute shell 선택<br>\nCommand : /var/lib/jenkins/workspace/springboot-test/stop.sh</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"build-설정-nodejs\" style=\"position:relative;\"><a href=\"#build-%EC%84%A4%EC%A0%95-nodejs\" aria-label=\"build 설정 nodejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Build 설정 (nodejs)</h3>\n<ol>\n<li>새로운 Item 클릭</li>\n<li>이름 및 타입 입력<br>\nEnter an item name 입력 (ex:NodeJS-Build)<br>\nitem 타입 선택 (Pipline)</li>\n<li>\n<p>build 설정</p>\n<ol>\n<li>General<br>\nGitHub project 선택<br>\nProject url : <a href=\"https://github.com/whitexozu/Vue3-Koa-Scaffold.git\">https://github.com/whitexozu/Vue3-Koa-Scaffold.git</a></li>\n<li>\n<p>Pipeline</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pipeline {\nagent any\n\ntools {\n    // Global Tool Configuration 에서 입력한 NodeJs 이름을 입력하면 npm 명령어 사용 가능\n    nodejs \"nodejs12.16.0\"\n}\n\nstages {\n    stage('Build') {\n      steps {\n          // Kill process\n          //   pid 를 검색하여 kill 하는 경우 pid 가 있으면 괜찮으나 없는경우 에러 발생으로 이후 진행이 되지않음\n          //   - 2>&amp;1 표준 출력으로 변경해도 해결 되지 않음\n          //     sh label: '', script: 'kill -15 $(ps aux | grep \\'Koa-Backend\\'| grep -v grep | grep -v tail | awk \\'{print $2}\\') > /dev/null 2>&amp;1'\n          //   그래서 pid 가 있는 경우 kill 되록 처리\n          //   shell 작성 후 변경은 Pipeline Syntax 버튼을 클릭하여 Generate 하면 편하다\n          sh label: '', script: '''pname=\\'Koa-Backend\\'\n          pid=`ps -ef | grep $pname | grep -v grep | grep -v tail | awk \\'{print $2}\\'`\n          if [ $pid ];then\n            echo \"process is running\"\n            kill -15 $pid\n            echo \"${pname} has been shutdown\"\n          else\n            echo \"process is not running\"\n          fi'''\n          echo \"Koa-Backend has been shutdown...\"\n\n          // Get some code from a GitHub repository\n          git credentialsId: 'a02dc8c1-d07f-43c9-a225-844410db9031', url: 'https://github.com/whitexozu/Vue3-Koa-Scaffold.git'\n\n          // Run npm install\n          sh \"cd Koa-Backend &amp;&amp; npm i\"\n          sh \"cd Vue3-Frontend &amp;&amp; npm i\"\n\n          // Run npm build\n          sh \"cd Vue3-Frontend &amp;&amp; npm run build\"\n\n          // Run npm serve\n          // 실패\n          //   jenkins가 설치된 서버에서 nodejs 서버 기등하는 방법을 찾을수가 없었음\n          //   - 외부 shell 파일을 실행해도 실패\n          //     sh \"/var/lib/jenkins/workspace/start-nodejs.sh\"\n          //   - BUILD_ID=dontKillMe 와 nohup 을 적용해도 실패\n          //     sh \"BUILD_ID=dontKillMe cd Koa-Backend &amp;&amp; BUILD_ID=dontKillMe nohup npm run serve > ../logs/Koa-Backend.log &amp;\"\n          //   - forever package 를 적용해도 실패\n          //     sh \"cd Koa-Backend &amp;&amp; forever start -a -l ../logs/forever.log -o ../logs/output.log -e ../logs/error.log src\"\n          // echo \"Koa-Backend is running on the server...\"\n\n      }\n    }\n}\n}</code></pre></div>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"build-실행\" style=\"position:relative;\"><a href=\"#build-%EC%8B%A4%ED%96%89\" aria-label=\"build 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Build 실행</h3>\n<ol>\n<li>My Views 클릭</li>\n<li>목록의 아이탬 클릭</li>\n<li>Build Now 클릭</li>\n<li>좌측 하단의 #num, 프로그래스바 클릭으로 Console Output 로그 확인</li>\n</ol>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#global-tool-configuration\">Global Tool Configuration</a></li>\n<li><a href=\"#build-%EC%84%A4%EC%A0%95-springboot\">Build 설정 (springboot)</a></li>\n<li><a href=\"#build-%EC%84%A4%EC%A0%95-nodejs\">Build 설정 (nodejs)</a></li>\n<li><a href=\"#build-%EC%8B%A4%ED%96%89\">Build 실행</a></li>\n</ul>\n</div>","excerpt":"Global Tool Configuration Jenkins 관리 > Global Tool Configuration 이동 JDK Uncheck Install automatically Name : jdk1.8 JAVA_HOME : /usr/local/java MAVEN Uncheck Install automatically Name : maven3.5.2 JAVA_HOME : /usr/local/maven NodeJS (nvm 사용시) Uncheck Install automatically Name : nodejs12.16.0 Installation directory : /home/whitexozu/.nvm/versions/node/v12.16.0 Build 설정 (springboot) 새로운 Item 클릭 이름 및 타입 입력 Enter an item name 입력 (ex:build) item 타입 선택 (Freestyle project) build 설정 General GitHub pr…","frontmatter":{"date":"February 12, 2020","title":"[Jenkins] CentOS7 Jenkins 설정","categories":"CI","author":"TMM","emoji":null},"fields":{"slug":"/2020-02-12-ci-centos7-jenkins/"}},"next":{"id":"77bdd55e-8826-5e97-9e9d-361a5b846f8d","html":"<p>스웨거 참 좋은것 같습니다.</p>\n<h2 id=\"maven-dependency-추가\" style=\"position:relative;\"><a href=\"#maven-dependency-%EC%B6%94%EA%B0%80\" aria-label=\"maven dependency 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>maven dependency 추가</h2>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.springfox<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>springfox-swagger2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.9.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.springfox<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>springfox-swagger-ui<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.9.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"javacofnig-생성\" style=\"position:relative;\"><a href=\"#javacofnig-%EC%83%9D%EC%84%B1\" aria-label=\"javacofnig 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>javacofnig 생성</h2>\n<ul>\n<li>/src/main/java/com/example/swagger/config/SwaggerConfig.java</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PathSelectors</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestHandlerSelectors</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>spi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DocumentationType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Docket</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>swagger2<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableSwagger2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@EnableSwagger2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SwaggerConfig</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Docket</span> <span class=\"token function\">api</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Docket</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DocumentationType</span><span class=\"token punctuation\">.</span>SWAGGER_2<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">apis</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestHandlerSelectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">// .apis(RequestHandlerSelectors.basePackage(\"java.com.example.swagger.controller\"))</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">paths</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PathSelectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"test-controller-생성\" style=\"position:relative;\"><a href=\"#test-controller-%EC%83%9D%EC%84%B1\" aria-label=\"test controller 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>test controller 생성</h2>\n<ul>\n<li>/src/main/java/com/example/swagger/controller/BoardController.java</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiImplicitParam</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiImplicitParams</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiOperation</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BoardController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"전체 게시판 조회\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/board\"</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> <span class=\"token punctuation\">></span></span> <span class=\"token function\">selectListBoard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value 1234\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"해당 게시판 조회\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ApiImplicitParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token annotation punctuation\">@ApiImplicitParam</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> value <span class=\"token operator\">=</span> <span class=\"token string\">\"게시판 고유키\"</span><span class=\"token punctuation\">,</span> required <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> dataType <span class=\"token operator\">=</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span> paramType <span class=\"token operator\">=</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">,</span> defaultValue <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/board/{id}\"</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> <span class=\"token punctuation\">></span></span> <span class=\"token function\">selectOneBoard</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"확인\" style=\"position:relative;\"><a href=\"#%ED%99%95%EC%9D%B8\" aria-label=\"확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>확인</h2>\n<p><a href=\"http://localhost:8080/swagger-ui.html\">http://localhost:8080/swagger-ui.html</a></p>\n<h2 id=\"annotation-설명\" style=\"position:relative;\"><a href=\"#annotation-%EC%84%A4%EB%AA%85\" aria-label=\"annotation 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>annotation 설명</h2>\n<ul>\n<li>@Api : 컨트롤러에 설명을 추가</li>\n<li>@ApiOperation : API에 설명을 추가</li>\n<li>@ApiParam : API의 파라미터에 설명을 추가</li>\n<li>@ApiModel : 모델에 설명을 추가</li>\n<li>@ApiModelProperty : 모델의 요소에 설명을 추가</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#maven-dependency-%EC%B6%94%EA%B0%80\">maven dependency 추가</a></li>\n<li><a href=\"#javacofnig-%EC%83%9D%EC%84%B1\">javacofnig 생성</a></li>\n<li><a href=\"#test-controller-%EC%83%9D%EC%84%B1\">test controller 생성</a></li>\n<li><a href=\"#%ED%99%95%EC%9D%B8\">확인</a></li>\n<li><a href=\"#annotation-%EC%84%A4%EB%AA%85\">annotation 설명</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 11, 2020","title":"[Swagger] Springboot + swagger","categories":"Framework","author":"TMM","emoji":null},"fields":{"slug":"/2020-02-11-framework-springboot-swagger/"}},"prev":{"id":"1556ed1c-fcd2-58bc-aff2-f0ab6f87d8f4","html":"<h2 id=\"naver-developers--application--application-등록\" style=\"position:relative;\"><a href=\"#naver-developers--application--application-%EB%93%B1%EB%A1%9D\" aria-label=\"naver developers  application  application 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Naver developers > Application > Application 등록</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1.  어플리케이션 이름 입력 : naver_sign_in\n2.  사용 API 선택 : 네아로\n3.  사용 API 전부 선택\n4.  로그인 오픈 API 서비스 환경 : PC웹\n5.  서비스 URL 입력 : [http://localhost:8080/oauth/signin](http://localhost:8080/oauth/signin)\n6.  Callback URL 입력 : [http://localhost:8080/oauth/callback](http://localhost:8080/oauth/callback)\n7.  등록하기 버튼 클릭\n8.  애플리 케이션 정보 확인\n    -   Client ID : **********\n    -   Client Secret : **********</code></pre></div>\n<h2 id=\"소스-작성\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4-%EC%9E%91%EC%84%B1\" aria-label=\"소스 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스 작성</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. navem project 생성\n2.  pom.xml\n    ```xml\n    &lt;!-- jstl -->\n    &lt;dependency>\n     &lt;groupId>javax.servlet&lt;/groupId>\n     &lt;artifactId>jstl&lt;/artifactId>\n     &lt;version>1.2&lt;/version>\n    &lt;/dependency>\n\n    &lt;!-- jsp -->\n    &lt;dependency>\n     &lt;groupId>org.apache.tomcat.embed&lt;/groupId>\n     &lt;artifactId>tomcat-embed-jasper&lt;/artifactId>\n    &lt;/dependency>\n\n    &lt;!-- 제이슨 파싱 -->\n    &lt;dependency>\n     &lt;groupId>com.googlecode.json-simple&lt;/groupId>\n     &lt;artifactId>json-simple&lt;/artifactId>\n     &lt;version>1.1.1&lt;/version>\n    &lt;/dependency>\n\n    &lt;!-- oauth -->\n    &lt;dependency>\n     &lt;groupId>com.github.scribejava&lt;/groupId>\n     &lt;artifactId>scribejava-core&lt;/artifactId>\n     &lt;version>2.8.1&lt;/version>\n    &lt;/dependency>\n    ```\n\n3.  java/com/example/oauth/config/NaverSigninApi.java\n    ```java\n    package com.example.oauth.config;\n    import com.github.scribejava.core.builder.api.DefaultApi20;\n\n    public class NaverSigninApi extends DefaultApi20 {\n     protected NaverSigninApi() {}\n     private static class InstanceHolder {\n         private static final NaverSigninApi INSTANCE = new NaverSigninApi();\n     }\n     public static NaverSigninApi instance() {\n         return InstanceHolder.INSTANCE;\n     }\n     @Override\n     public String getAccessTokenEndpoint() {\n         return \"https://nid.naver.com/oauth2.0/token?grant_type=authorization_code\";\n     }\n     @Override\n     protected String getAuthorizationBaseUrl() {\n         return \"https://nid.naver.com/oauth2.0/authorize\";\n     }\n    }\n    ```\n\n4.  java/com/example/oauth/config/NaverSigninBo.java\n    ```java\n    package com.example.oauth.config;\n\n    import java.io.IOException;\n    import java.util.UUID;\n    import javax.servlet.http.HttpSession;\n    import org.springframework.util.StringUtils;\n    import com.github.scribejava.core.builder.ServiceBuilder;\n    import com.github.scribejava.core.model.OAuth2AccessToken;\n    import com.github.scribejava.core.model.OAuthRequest;\n    import com.github.scribejava.core.model.Response;\n    import com.github.scribejava.core.model.Verb;\n    import com.github.scribejava.core.oauth.OAuth20Service;\n\n    import org.springframework.stereotype.Component;\n\n    @Component\n    public class NaverSigninBO {\n     /* 인증 요청문을 구성하는 파라미터 */\n     //client_id: 애플리케이션 등록 후 발급받은 클라이언트 아이디\n     //response_type: 인증 과정에 대한 구분값. code로 값이 고정돼 있습니다.\n     //redirect_uri: 네이버 로그인 인증의 결과를 전달받을 콜백 URL(URL 인코딩). 애플리케이션을 등록할 때 Callback URL에 설정한 정보입니다.\n     //state: 애플리케이션이 생성한 상태 토큰\n     private final static String CLIENT_ID = \"cI_EDT7R0b9SHI5xV8pp\";\n     private final static String CLIENT_SECRET = \"xEzetWVT1b\";\n     private final static String REDIRECT_URI = \"http://localhost:8080/oauth/naver/callback\";\n     private final static String SESSION_STATE = \"oauth_state\";\n     /* 프로필 조회 API URL */\n     private final static String PROFILE_API_URL = \"https://openapi.naver.com/v1/nid/me\";\n     /* 네이버 아이디로 인증 URL 생성 Method */\n     public String getAuthorizationUrl(HttpSession session) {\n         /* 세션 유효성 검증을 위하여 난수를 생성 */\n         String state = generateRandomString();\n         /* 생성한 난수 값을 session에 저장 */\n         setSession(session, state);\n         /* Scribe에서 제공하는 인증 URL 생성 기능을 이용하여 네아로 인증 URL 생성 */\n         OAuth20Service oauthService = new ServiceBuilder()\n             .apiKey(CLIENT_ID)\n             .apiSecret(CLIENT_SECRET)\n             .callback(REDIRECT_URI)\n             .state(state) //앞서 생성한 난수값을 인증 URL생성시 사용함\n             .build(NaverSigninApi.instance());\n         return oauthService.getAuthorizationUrl();\n     }\n     /* 네이버아이디로 Callback 처리 및 AccessToken 획득 Method */\n     public OAuth2AccessToken getAccessToken(HttpSession session, String code, String state) throws IOException {\n         /* Callback으로 전달받은 세선검증용 난수값과 세션에 저장되어있는 값이 일치하는지 확인 */\n         String sessionState = getSession(session);\n         if (StringUtils.pathEquals(sessionState, state)) {\n             OAuth20Service oauthService = new ServiceBuilder()\n                 .apiKey(CLIENT_ID)\n                 .apiSecret(CLIENT_SECRET)\n                 .callback(REDIRECT_URI)\n                 .state(state)\n                 .build(NaverSigninApi.instance());\n             /* Scribe에서 제공하는 AccessToken 획득 기능으로 네아로 Access Token을 획득 */\n             OAuth2AccessToken accessToken = oauthService.getAccessToken(code);\n             return accessToken;\n         }\n         return null;\n     }\n     /* 세션 유효성 검증을 위한 난수 생성기 */\n     private String generateRandomString() {\n         return UUID.randomUUID().toString();\n     }\n     /* http session에 데이터 저장 */\n     private void setSession(HttpSession session, String state) {\n         session.setAttribute(SESSION_STATE, state);\n     }\n     /* http session에서 데이터 가져오기 */\n     private String getSession(HttpSession session) {\n         return (String) session.getAttribute(SESSION_STATE);\n     }\n     /* Access Token을 이용하여 네이버 사용자 프로필 API를 호출 */\n     public String getUserProfile(OAuth2AccessToken oauthToken) throws IOException {\n         OAuth20Service oauthService = new ServiceBuilder()\n             .apiKey(CLIENT_ID)\n             .apiSecret(CLIENT_SECRET)\n             .callback(REDIRECT_URI).build(NaverSigninApi.instance());\n         OAuthRequest request = new OAuthRequest(Verb.GET, PROFILE_API_URL, oauthService);\n         oauthService.signRequest(oauthToken, request);\n         Response response = request.send();\n         return response.getBody();\n     }\n    }\n    ```\n\n5.  java/com/example/oauth/sign/SignController.java\n    ```java\n    package com.example.oauth.sign;\n\n    import java.io.IOException;\n    import javax.servlet.http.HttpSession;\n    import org.json.simple.JSONObject;\n    import org.json.simple.parser.JSONParser;\n    import org.json.simple.parser.ParseException;\n    import org.springframework.beans.factory.annotation.Autowired;\n    import org.springframework.stereotype.Controller;\n    import org.springframework.ui.Model;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RequestMethod;\n    import org.springframework.web.bind.annotation.RequestParam;\n    import com.github.scribejava.core.model.OAuth2AccessToken;\n\n    import com.example.oauth.config.NaverSigninBO;\n\n    /**\n    * Handles requests for the application home page.\n    */\n    @Controller\n    public class SigninController {\n\n     @Autowired\n     private NaverSigninBO naverSigninBO;\n     private String apiResult = null;\n\n     //로그인 첫 화면 요청 메소드\n     @RequestMapping(value = \"/oauth/signin\", method = {\n         RequestMethod.GET,\n         RequestMethod.POST\n     })\n     public String signin(Model model, HttpSession session) {\n         /* 네이버아이디로 인증 URL을 생성하기 위하여 naverSigninBO클래스의 getAuthorizationUrl메소드 호출 */\n         String naverAuthUrl = naverSigninBO.getAuthorizationUrl(session);\n         //https://nid.naver.com/oauth2.0/authorize?response_type=code&amp;client_id=sE***************&amp;\n         //redirect_uri=http%3A%2F%2F211.63.89.90%3A8090%2Fsignin_project%2Fcallback&amp;state=e68c269c-5ba9-4c31-85da-54c16c658125\n         System.out.println(\"네이버:\" + naverAuthUrl);\n         //네이버\n         model.addAttribute(\"url\", naverAuthUrl);\n         return \"signin\";\n     }\n     //네이버 로그인 성공시 callback호출 메소드\n     @RequestMapping(value = \"/oauth/naver/callback\", method = {\n         RequestMethod.GET,\n         RequestMethod.POST\n     })\n     public String callback(Model model, @RequestParam String code, @RequestParam String state, HttpSession session) throws IOException, ParseException {\n         System.out.println(\"여기는 callback\");\n         OAuth2AccessToken oauthToken;\n         oauthToken = naverSigninBO.getAccessToken(session, code, state);\n         System.out.println(\"oauthToken : \" + oauthToken);\n         //1. 로그인 사용자 정보를 읽어온다.\n         apiResult = naverSigninBO.getUserProfile(oauthToken); //String형식의 json데이터\n         System.out.println(\"apiResult : \" + apiResult);\n         /** apiResult json 구조\n         {\"resultcode\":\"00\",\n         \"message\":\"success\",\n         \"response\":{\"id\":\"33666449\",\"nickname\":\"shinn****\",\"age\":\"20-29\",\"gender\":\"M\",\"email\":\"sh@naver.com\",\"name\":\"\\uc2e0\\ubc94\\ud638\"}}\n         **/\n         //2. String형식인 apiResult를 json형태로 바꿈\n         JSONParser parser = new JSONParser();\n         Object obj = parser.parse(apiResult);\n         JSONObject jsonObj = (JSONObject) obj;\n         //3. 데이터 파싱\n         //Top레벨 단계 _response 파싱\n         JSONObject response_obj = (JSONObject) jsonObj.get(\"response\");\n         //response의 nickname값 파싱\n         String nickname = (String) response_obj.get(\"nickname\");\n         System.out.println(nickname);\n         //4.파싱 닉네임 세션으로 저장\n         session.setAttribute(\"sessionId\", nickname); //세션 생성\n         model.addAttribute(\"result\", apiResult);\n         return \"signin\";\n     }\n     //로그아웃\n     @RequestMapping(value = \"/oauth/logout\", method = {\n         RequestMethod.GET,\n         RequestMethod.POST\n     })\n     public String logout(HttpSession session) throws IOException {\n         System.out.println(\"여기는 logout\");\n         session.invalidate();\n         return \"redirect:/\";\n     }\n    }\n    ```\n\n6.  webapp/WEB-INF/views/index.jsp\n    ```jsp\n    &lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n    &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n    &lt;html>\n\n    &lt;head>\n     &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n     &lt;title>NAVER LOGIN TEST&lt;/title>\n    &lt;/head>\n\n    &lt;body>\n     &lt;h1>메인 페이지 입니다.&lt;/h1>\n     &lt;hr>\n     &lt;br>\n     &lt;a href=\"/oauth/signin\">로그인 하러 가기 &lt;/a>\n     &lt;hr>\n    &lt;/body>\n\n    &lt;/html>\n    ```\n\n7.  webapp/WEB-INF/views/signin.jsp\n    ```jsp\n    &lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n    &lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%>\n    &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n    &lt;html>\n\n    &lt;head>\n     &lt;title>NAVER LOGIN TEST&lt;/title>\n    &lt;/head>\n\n    &lt;body>\n     &lt;h1>Login Form&lt;/h1>\n     &lt;hr>\n     &lt;br>\n     &lt;center>\n         &lt;c:choose>\n             &lt;c:when test=\"${sessionId != null}\">\n                 &lt;h2> 네이버 아이디 로그인 성공하셨습니다!! &lt;/h2>\n                 &lt;h3>'${sessionId}' 님 환영합니다! &lt;/h3>\n                 &lt;h3>&lt;a href=\"/oauth/logout\">로그아웃&lt;/a>&lt;/h3>\n             &lt;/c:when>\n             &lt;c:otherwise>\n                 &lt;form action=\"login.userdo\" method=\"post\" name=\"frm\" style=\"width:470px;\">\n                     &lt;h2>로그인&lt;/h2>\n                     &lt;input type=\"text\" name=\"id\" id=\"id\" class=\"w3-input w3-border\" placeholder=\"아이디\" value=\"${id}\">\n                     &lt;br>\n                     &lt;input type=\"password\" id=\"pwd\" name=\"pwd\" class=\"w3-input w3-border\" placeholder=\"비밀번호\"> &lt;br>\n                     &lt;input type=\"submit\" value=\"로그인\" onclick=\"#\"> &lt;br>\n                 &lt;/form>\n                 &lt;br>\n                 &lt;!-- 네이버 로그인 창으로 이동 -->\n                 &lt;div id=\"naver_id_login\" style=\"text-align:center\">&lt;a href=\"${url}\">\n                         &lt;img width=\"223\"\n                             src=\"https://developers.naver.com/doc/review_201802/CK_bEFnWMeEBjXpQ5o8N_20180202_7aot50.png\" />&lt;/a>\n                 &lt;/div>\n                 &lt;br>\n             &lt;/c:otherwise>\n         &lt;/c:choose>\n     &lt;/center>\n    &lt;/body>\n\n    &lt;/html>\n    ```\n\n8.  application.properties\n    ```\n    server.port=8080\n\n    spring.mvc.view.prefix=/WEB-INF/views/\n    spring.mvc.view.suffix=.jsp\n    ```</code></pre></div>\n<blockquote>\n<p><a href=\"https://developers.naver.com/main/\">https://developers.naver.com/main/</a><br>\n<a href=\"https://bumcrush.tistory.com/151\">https://bumcrush.tistory.com/151</a><br>\n<a href=\"https://4urdev.tistory.com/47\">https://4urdev.tistory.com/47</a></p>\n</blockquote>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#naver-developers--application--application-%EB%93%B1%EB%A1%9D\">Naver developers > Application > Application 등록</a></li>\n<li><a href=\"#%EC%86%8C%EC%8A%A4-%EC%9E%91%EC%84%B1\">소스 작성</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 19, 2020","title":"[OAuth2] Springboot + naver + jsp","categories":"Framework","author":"TMM","emoji":null},"fields":{"slug":"/2020-02-19-framework-oauth2-springboot-naver-jsp/"}},"site":{"siteMetadata":{"siteUrl":"https://whitexozu.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/2020-02-12-ci-centos7-jenkins/","nextSlug":"/2020-02-11-framework-springboot-swagger/","prevSlug":"/2020-02-19-framework-oauth2-springboot-naver-jsp/"}},"staticQueryHashes":["1073350324","2938748437"]}