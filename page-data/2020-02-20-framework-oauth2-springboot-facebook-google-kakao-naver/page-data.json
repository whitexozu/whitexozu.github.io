{"componentChunkName":"component---src-templates-blog-template-js","path":"/2020-02-20-framework-oauth2-springboot-facebook-google-kakao-naver/","result":{"data":{"cur":{"id":"144fa325-7acc-5e20-9988-3742961d4a5a","html":"<h2 id=\"facebook-클라이언트-등록\" style=\"position:relative;\"><a href=\"#facebook-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EB%93%B1%EB%A1%9D\" aria-label=\"facebook 클라이언트 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>facebook 클라이언트 등록</h2>\n<p><a href=\"https://engkimbs.tistory.com/849\">https://engkimbs.tistory.com/849</a></p>\n<h2 id=\"google-클라이언트-등록\" style=\"position:relative;\"><a href=\"#google-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EB%93%B1%EB%A1%9D\" aria-label=\"google 클라이언트 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>google 클라이언트 등록</h2>\n<p><a href=\"https://engkimbs.tistory.com/849\">https://engkimbs.tistory.com/849</a></p>\n<h2 id=\"kakao-클라이언트-등록\" style=\"position:relative;\"><a href=\"#kakao-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EB%93%B1%EB%A1%9D\" aria-label=\"kakao 클라이언트 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kakao 클라이언트 등록</h2>\n<p><a href=\"https://galid1.tistory.com/582\">https://galid1.tistory.com/582</a></p>\n<h2 id=\"naver-클라이언트-등록\" style=\"position:relative;\"><a href=\"#naver-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EB%93%B1%EB%A1%9D\" aria-label=\"naver 클라이언트 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>naver 클라이언트 등록</h2>\n<p><a href=\"https://engkimbs.tistory.com/849\">https://engkimbs.tistory.com/849</a></p>\n<h2 id=\"oauth2-설정\" style=\"position:relative;\"><a href=\"#oauth2-%EC%84%A4%EC%A0%95\" aria-label=\"oauth2 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OAuth2 설정</h2>\n<h3 id=\"applicationyml\" style=\"position:relative;\"><a href=\"#applicationyml\" aria-label=\"applicationyml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>application.yml</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">thymeleaf</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">security</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">oauth2</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">client</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">registration</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">google</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">client-id</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>google id<span class=\"token punctuation\">]</span>\n            <span class=\"token key atrule\">client-secret</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>google secret<span class=\"token punctuation\">]</span>\n          <span class=\"token key atrule\">facebook</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">client-id</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>facebook id<span class=\"token punctuation\">]</span>\n            <span class=\"token key atrule\">client-secret</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>facebook secret<span class=\"token punctuation\">]</span>\n<span class=\"token key atrule\">custom</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">oauth2</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">kakao</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">client-id</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>kakao id<span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">client-secret</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>kakao secret<span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">naver</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">client-id</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>naver id<span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">client-secret</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>naver secret<span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"securityconfigjava\" style=\"position:relative;\"><a href=\"#securityconfigjava\" aria-label=\"securityconfigjava permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SecurityConfig.java</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>security</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CustomOAuth2UserService</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Value</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OAuth2ClientProperties</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpSecurity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableWebSecurity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebSecurityConfigurerAdapter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CommonOAuth2Provider</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>registration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClientRegistration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>registration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClientRegistrationRepository</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>registration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InMemoryClientRegistrationRepository</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>authentication<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LoginUrlAuthenticationEntryPoint</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SocialType</span><span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@EnableWebSecurity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecurityConfig</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WebSecurityConfigurerAdapter</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> httpSecurity<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        httpSecurity<span class=\"token punctuation\">.</span><span class=\"token function\">authorizeRequests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/oauth2/**\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/login/**\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/css/**\"</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token string\">\"/images/**\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/js/**\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/console/**\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/favicon.ico/**\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/facebook\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasAuthority</span><span class=\"token punctuation\">(</span>FACEBOOK<span class=\"token punctuation\">.</span><span class=\"token function\">getRoleType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/google\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasAuthority</span><span class=\"token punctuation\">(</span>GOOGLE<span class=\"token punctuation\">.</span><span class=\"token function\">getRoleType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/kakao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasAuthority</span><span class=\"token punctuation\">(</span>KAKAO<span class=\"token punctuation\">.</span><span class=\"token function\">getRoleType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/naver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasAuthority</span><span class=\"token punctuation\">(</span>NAVER<span class=\"token punctuation\">.</span><span class=\"token function\">getRoleType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">anyRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">oauth2Login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">userInfoEndpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">userService</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomOAuth2UserService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">defaultSuccessUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/loginSuccess\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">failureUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/loginFailure\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">exceptionHandling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">authenticationEntryPoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LoginUrlAuthenticationEntryPoint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ClientRegistrationRepository</span> <span class=\"token function\">clientRegistrationRepository</span><span class=\"token punctuation\">(</span>\n            <span class=\"token class-name\">OAuth2ClientProperties</span> oAuth2ClientProperties<span class=\"token punctuation\">,</span>\n            <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${custom.oauth2.kakao.client-id}\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> kakaoClientId<span class=\"token punctuation\">,</span>\n            <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${custom.oauth2.kakao.client-secret}\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> kakaoClientSecret<span class=\"token punctuation\">,</span>\n            <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${custom.oauth2.naver.client-id}\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> naverClientId<span class=\"token punctuation\">,</span>\n            <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${custom.oauth2.naver.client-secret}\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> naverClientSecret<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ClientRegistration</span><span class=\"token punctuation\">></span></span> registrations <span class=\"token operator\">=</span> oAuth2ClientProperties\n                <span class=\"token punctuation\">.</span><span class=\"token function\">getRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">-></span> <span class=\"token function\">getRegistration</span><span class=\"token punctuation\">(</span>oAuth2ClientProperties<span class=\"token punctuation\">,</span> client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token operator\">::</span><span class=\"token function\">nonNull</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        registrations<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CustomOAuth2Provider</span><span class=\"token punctuation\">.</span>KAKAO<span class=\"token punctuation\">.</span><span class=\"token function\">getBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kakao\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">clientId</span><span class=\"token punctuation\">(</span>kakaoClientId<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">clientSecret</span><span class=\"token punctuation\">(</span>kakaoClientSecret<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">jwkSetUri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"temp\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        registrations<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CustomOAuth2Provider</span><span class=\"token punctuation\">.</span>NAVER<span class=\"token punctuation\">.</span><span class=\"token function\">getBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"naver\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">clientId</span><span class=\"token punctuation\">(</span>naverClientId<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">clientSecret</span><span class=\"token punctuation\">(</span>naverClientSecret<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">jwkSetUri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"temp\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InMemoryClientRegistrationRepository</span><span class=\"token punctuation\">(</span>registrations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ClientRegistration</span> <span class=\"token function\">getRegistration</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OAuth2ClientProperties</span> clientProperties<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"google\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">OAuth2ClientProperties<span class=\"token punctuation\">.</span>Registration</span> registration <span class=\"token operator\">=</span> clientProperties<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"google\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">CommonOAuth2Provider</span><span class=\"token punctuation\">.</span>GOOGLE<span class=\"token punctuation\">.</span><span class=\"token function\">getBuilder</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">clientId</span><span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span><span class=\"token function\">getClientId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">clientSecret</span><span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span><span class=\"token function\">getClientSecret</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"profile\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"facebook\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">OAuth2ClientProperties<span class=\"token punctuation\">.</span>Registration</span> registration <span class=\"token operator\">=</span> clientProperties<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"facebook\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">CommonOAuth2Provider</span><span class=\"token punctuation\">.</span>FACEBOOK<span class=\"token punctuation\">.</span><span class=\"token function\">getBuilder</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">clientId</span><span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span><span class=\"token function\">getClientId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">clientSecret</span><span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span><span class=\"token function\">getClientSecret</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">userInfoUri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://graph.facebook.com/me?fields=id,name,email,link\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>OAuth2의 인증 설징시 WebSecurityConfigurerAdapter클래스를 상속받으면 <code class=\"language-text\">@Bean</code>으로 ClientRegistrationRepository 메소드를 작성해야 합니다. 그러면 OAuth2 서비스를 제공하는 업체 facebook, google, kakao, naver의 인증에 필요한 정보를 InMemoryClientRegistrationRepository로 반환합니다.</li>\n</ul>\n<h3 id=\"customoauth2providerjava\" style=\"position:relative;\"><a href=\"#customoauth2providerjava\" aria-label=\"customoauth2providerjava permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CustomOAuth2Provider.java</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>security</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>registration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClientRegistration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthorizationGrantType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClientAuthenticationMethod</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">CustomOAuth2Provider</span> <span class=\"token punctuation\">{</span>\n\n    KAKAO <span class=\"token punctuation\">{</span>\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">ClientRegistration<span class=\"token punctuation\">.</span>Builder</span> <span class=\"token function\">getBuilder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> registrationId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">ClientRegistration<span class=\"token punctuation\">.</span>Builder</span> builder <span class=\"token operator\">=</span> <span class=\"token function\">getBuilder</span><span class=\"token punctuation\">(</span>registrationId<span class=\"token punctuation\">,</span>\n                    <span class=\"token class-name\">ClientAuthenticationMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">,</span> DEFAULT_LOGIN_REDIRECT_URL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"profile\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">authorizationUri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://kauth.kakao.com/oauth/authorize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">tokenUri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://kauth.kakao.com/oauth/token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">userInfoUri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://kapi.kakao.com/v2/user/me\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">userNameAttributeName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">clientName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kakao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> builder<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    NAVER <span class=\"token punctuation\">{</span>\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">ClientRegistration<span class=\"token punctuation\">.</span>Builder</span> <span class=\"token function\">getBuilder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> registrationId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">ClientRegistration<span class=\"token punctuation\">.</span>Builder</span> builder <span class=\"token operator\">=</span> <span class=\"token function\">getBuilder</span><span class=\"token punctuation\">(</span>registrationId<span class=\"token punctuation\">,</span>\n                    <span class=\"token class-name\">ClientAuthenticationMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">,</span> DEFAULT_LOGIN_REDIRECT_URL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"profile\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">authorizationUri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://nid.naver.com/oauth2.0/authorize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">tokenUri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://nid.naver.com/oauth2.0/token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">userInfoUri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://openapi.naver.com/v1/nid/me\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">userNameAttributeName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">clientName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Naver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> builder<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> DEFAULT_LOGIN_REDIRECT_URL <span class=\"token operator\">=</span> <span class=\"token string\">\"{baseUrl}/login/oauth2/code/{registrationId}\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ClientRegistration<span class=\"token punctuation\">.</span>Builder</span> <span class=\"token function\">getBuilder</span><span class=\"token punctuation\">(</span>\n            <span class=\"token class-name\">String</span> registrationId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ClientAuthenticationMethod</span> method<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> redirectUri<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ClientRegistration<span class=\"token punctuation\">.</span>Builder</span> builder <span class=\"token operator\">=</span> <span class=\"token class-name\">ClientRegistration</span><span class=\"token punctuation\">.</span><span class=\"token function\">withRegistrationId</span><span class=\"token punctuation\">(</span>registrationId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        builder<span class=\"token punctuation\">.</span><span class=\"token function\">clientAuthenticationMethod</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        builder<span class=\"token punctuation\">.</span><span class=\"token function\">authorizationGrantType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthorizationGrantType</span><span class=\"token punctuation\">.</span>AUTHORIZATION_CODE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        builder<span class=\"token punctuation\">.</span><span class=\"token function\">redirectUriTemplate</span><span class=\"token punctuation\">(</span>redirectUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> builder<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token class-name\">ClientRegistration<span class=\"token punctuation\">.</span>Builder</span> <span class=\"token function\">getBuilder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> registrationId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>국내 기업의 인증에 필요한 정보는 별도의 관리가 필요합니다. 관리에 편의성을 위해 enum으로 관리합니다. enum 데이터에서 추상화를 사용하는걸 보실수 있습니다.(저는 처음 봅니다)</li>\n</ul>\n<h3 id=\"customoauth2userservicejava\" style=\"position:relative;\"><a href=\"#customoauth2userservicejava\" aria-label=\"customoauth2userservicejava permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CustomOAuth2UserService.java</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>service</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ParameterizedTypeReference</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">.</span>converter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Converter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GrantedAuthority</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>authority<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SimpleGrantedAuthority</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OAuth2ErrorResponseErrorHandler</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>userinfo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultOAuth2UserService</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>userinfo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OAuth2UserRequest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>userinfo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OAuth2UserRequestEntityConverter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OAuth2AccessToken</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OAuth2AuthenticationException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OAuth2AuthorizationException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OAuth2Error</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultOAuth2User</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OAuth2User</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>oauth2<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OAuth2UserAuthority</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assert</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestClientException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestOperations</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestTemplate</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedHashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedHashSet</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Log</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomOAuth2UserService</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DefaultOAuth2UserService</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> MISSING_USER_INFO_URI_ERROR_CODE <span class=\"token operator\">=</span> <span class=\"token string\">\"missing_user_info_uri\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> MISSING_USER_NAME_ATTRIBUTE_ERROR_CODE <span class=\"token operator\">=</span> <span class=\"token string\">\"missing_user_name_attribute\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> INVALID_USER_INFO_RESPONSE_ERROR_CODE <span class=\"token operator\">=</span> <span class=\"token string\">\"invalid_user_info_response\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ParameterizedTypeReference</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> PARAMETERIZED_RESPONSE_TYPE <span class=\"token operator\">=</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">ParameterizedTypeReference</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Converter</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OAuth2UserRequest</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestEntity</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> requestEntityConverter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2UserRequestEntityConverter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RestOperations</span> restOperations<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CustomOAuth2UserService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">RestTemplate</span> restTemplate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RestTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">setErrorHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2ErrorResponseErrorHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>restOperations <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">OAuth2User</span> <span class=\"token function\">loadUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OAuth2UserRequest</span> userRequest<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">OAuth2AuthenticationException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">notNull</span><span class=\"token punctuation\">(</span>userRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"userRequest cannot be null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasText</span><span class=\"token punctuation\">(</span>userRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getClientRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProviderDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUserInfoEndpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUri</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">OAuth2Error</span> oauth2Error <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2Error</span><span class=\"token punctuation\">(</span>\n                    MISSING_USER_INFO_URI_ERROR_CODE<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: \"</span> <span class=\"token operator\">+</span>\n                            userRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getClientRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegistrationId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">null</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2AuthenticationException</span><span class=\"token punctuation\">(</span>oauth2Error<span class=\"token punctuation\">,</span> oauth2Error<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">String</span> userNameAttributeName <span class=\"token operator\">=</span> userRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getClientRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProviderDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">getUserInfoEndpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUserNameAttributeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasText</span><span class=\"token punctuation\">(</span>userNameAttributeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">OAuth2Error</span> oauth2Error <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2Error</span><span class=\"token punctuation\">(</span>\n                    MISSING_USER_NAME_ATTRIBUTE_ERROR_CODE<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"Missing required \\\"user name\\\" attribute name in UserInfoEndpoint for Client Registration: \"</span> <span class=\"token operator\">+</span>\n                            userRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getClientRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegistrationId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">null</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2AuthenticationException</span><span class=\"token punctuation\">(</span>oauth2Error<span class=\"token punctuation\">,</span> oauth2Error<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">RequestEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>requestEntityConverter<span class=\"token punctuation\">.</span><span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>userRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> response<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\">>>>>> request : \"</span> <span class=\"token operator\">+</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\">>>>>> userNameAttributeName : \"</span> <span class=\"token operator\">+</span> userNameAttributeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\">>>>>> userRequest : \"</span> <span class=\"token operator\">+</span> userRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getClientRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProviderDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUserInfoEndpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\">>>>>> userRequest : \"</span> <span class=\"token operator\">+</span> userRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getClientRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProviderDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUserInfoEndpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUri</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            response <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>restOperations<span class=\"token punctuation\">.</span><span class=\"token function\">exchange</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> PARAMETERIZED_RESPONSE_TYPE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OAuth2AuthorizationException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">OAuth2Error</span> oauth2Error <span class=\"token operator\">=</span> ex<span class=\"token punctuation\">.</span><span class=\"token function\">getError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StringBuilder</span> errorDetails <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            errorDetails<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error details: [\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            errorDetails<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UserInfo Uri: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>\n                    userRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getClientRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProviderDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUserInfoEndpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUri</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            errorDetails<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", Error Code: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>oauth2Error<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oauth2Error<span class=\"token punctuation\">.</span><span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                errorDetails<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", Error Description: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>oauth2Error<span class=\"token punctuation\">.</span><span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            errorDetails<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            oauth2Error <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2Error</span><span class=\"token punctuation\">(</span>INVALID_USER_INFO_RESPONSE_ERROR_CODE<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"An error occurred while attempting to retrieve the UserInfo Resource: \"</span> <span class=\"token operator\">+</span> errorDetails<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2AuthenticationException</span><span class=\"token punctuation\">(</span>oauth2Error<span class=\"token punctuation\">,</span> oauth2Error<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">RestClientException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">OAuth2Error</span> oauth2Error <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2Error</span><span class=\"token punctuation\">(</span>INVALID_USER_INFO_RESPONSE_ERROR_CODE<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"An error occurred while attempting to retrieve the UserInfo Resource: \"</span> <span class=\"token operator\">+</span> ex<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2AuthenticationException</span><span class=\"token punctuation\">(</span>oauth2Error<span class=\"token punctuation\">,</span> oauth2Error<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> userAttributes <span class=\"token operator\">=</span> <span class=\"token function\">getUserAttributes</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GrantedAuthority</span><span class=\"token punctuation\">></span></span> authorities <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        authorities<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2UserAuthority</span><span class=\"token punctuation\">(</span>userAttributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">OAuth2AccessToken</span> token <span class=\"token operator\">=</span> userRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> authority <span class=\"token operator\">:</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">getScopes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            authorities<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleGrantedAuthority</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SCOPE_\"</span> <span class=\"token operator\">+</span> authority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultOAuth2User</span><span class=\"token punctuation\">(</span>authorities<span class=\"token punctuation\">,</span> userAttributes<span class=\"token punctuation\">,</span> userNameAttributeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 네이버는 HTTP response body에 response 안에 id 값을 포함한 유저정보를 넣어주므로 유저정보를 빼내기 위한 작업을 함</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getUserAttributes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> userAttributes <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>userAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">LinkedHashMap</span> responseData <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">LinkedHashMap</span><span class=\"token punctuation\">)</span>userAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            userAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">putAll</span><span class=\"token punctuation\">(</span>responseData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            userAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span> <span class=\"token operator\">+</span> userAttributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> userAttributes<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>획득한 인가 정보를 처리하는 곳입니다.</li>\n</ul>\n<h2 id=\"예제-소스\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%86%8C%EC%8A%A4\" aria-label=\"예제 소스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 소스</h2>\n<p><a href=\"https://github.com/whitexozu/Springboot-Example\">Github</a>{:target=”_blank”}</p>\n<h2 id=\"참고사이트\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-label=\"참고사이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고사이트</h2>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">facebook<span class=\"token punctuation\">,</span> google 가입<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">소스설명</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//engkimbs.tistory.com/849\n<span class=\"token key atrule\">소스설명</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//m.blog.naver.com/PostView.nhn<span class=\"token punctuation\">?</span>blogId=varkiry05<span class=\"token important\">&amp;logNo=221313073382&amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F</span>\nkakao 가입 상세<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">소스 설명 상세</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//galid1.tistory.com/582\n<span class=\"token key atrule\">SPA OAuth2(implicit grant)</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//www.daleseo.com/google<span class=\"token punctuation\">-</span>oauth/</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#facebook-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EB%93%B1%EB%A1%9D\">facebook 클라이언트 등록</a></li>\n<li><a href=\"#google-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EB%93%B1%EB%A1%9D\">google 클라이언트 등록</a></li>\n<li><a href=\"#kakao-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EB%93%B1%EB%A1%9D\">kakao 클라이언트 등록</a></li>\n<li><a href=\"#naver-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EB%93%B1%EB%A1%9D\">naver 클라이언트 등록</a></li>\n<li>\n<p><a href=\"#oauth2-%EC%84%A4%EC%A0%95\">OAuth2 설정</a></p>\n<ul>\n<li><a href=\"#applicationyml\">application.yml</a></li>\n<li><a href=\"#securityconfigjava\">SecurityConfig.java</a></li>\n<li><a href=\"#customoauth2providerjava\">CustomOAuth2Provider.java</a></li>\n<li><a href=\"#customoauth2userservicejava\">CustomOAuth2UserService.java</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%98%88%EC%A0%9C-%EC%86%8C%EC%8A%A4\">예제 소스</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EC%82%AC%EC%9D%B4%ED%8A%B8\">참고사이트</a></li>\n</ul>\n</div>","excerpt":"facebook 클라이언트 등록 https://engkimbs.tistory.com/849 google 클라이언트 등록 https://engkimbs.tistory.com/849 kakao 클라이언트 등록 https://galid1.tistory.com/582 naver 클라이언트 등록 https://engkimbs.tistory.com/849 OAuth2 설정 application.yml SecurityConfig.java OAuth2의 인증 설징시 WebSecurityConfigurerAdapter클래스를 상속받으면 으로 ClientRegistrationRepository 메소드를 작성해야 합니다. 그러면 OAuth2 서비스를 제공하는 업체 facebook, google, kakao, naver의 인증에 필요한 정보를 InMemoryClientRegistrationRepository로 반환합니다. CustomOAuth2Provider.java 국내 기업의 인증에 필요한 정보는 …","frontmatter":{"date":"February 20, 2020","title":"[OAuth2] Springboot + Facebook, Google, kakao, naver ","categories":"Framework","author":"TMM","emoji":null},"fields":{"slug":"/2020-02-20-framework-oauth2-springboot-facebook-google-kakao-naver/"}},"next":{"id":"1556ed1c-fcd2-58bc-aff2-f0ab6f87d8f4","html":"<h2 id=\"naver-developers--application--application-등록\" style=\"position:relative;\"><a href=\"#naver-developers--application--application-%EB%93%B1%EB%A1%9D\" aria-label=\"naver developers  application  application 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Naver developers > Application > Application 등록</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1.  어플리케이션 이름 입력 : naver_sign_in\n2.  사용 API 선택 : 네아로\n3.  사용 API 전부 선택\n4.  로그인 오픈 API 서비스 환경 : PC웹\n5.  서비스 URL 입력 : [http://localhost:8080/oauth/signin](http://localhost:8080/oauth/signin)\n6.  Callback URL 입력 : [http://localhost:8080/oauth/callback](http://localhost:8080/oauth/callback)\n7.  등록하기 버튼 클릭\n8.  애플리 케이션 정보 확인\n    -   Client ID : **********\n    -   Client Secret : **********</code></pre></div>\n<h2 id=\"소스-작성\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4-%EC%9E%91%EC%84%B1\" aria-label=\"소스 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스 작성</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. navem project 생성\n2.  pom.xml\n    ```xml\n    &lt;!-- jstl -->\n    &lt;dependency>\n     &lt;groupId>javax.servlet&lt;/groupId>\n     &lt;artifactId>jstl&lt;/artifactId>\n     &lt;version>1.2&lt;/version>\n    &lt;/dependency>\n\n    &lt;!-- jsp -->\n    &lt;dependency>\n     &lt;groupId>org.apache.tomcat.embed&lt;/groupId>\n     &lt;artifactId>tomcat-embed-jasper&lt;/artifactId>\n    &lt;/dependency>\n\n    &lt;!-- 제이슨 파싱 -->\n    &lt;dependency>\n     &lt;groupId>com.googlecode.json-simple&lt;/groupId>\n     &lt;artifactId>json-simple&lt;/artifactId>\n     &lt;version>1.1.1&lt;/version>\n    &lt;/dependency>\n\n    &lt;!-- oauth -->\n    &lt;dependency>\n     &lt;groupId>com.github.scribejava&lt;/groupId>\n     &lt;artifactId>scribejava-core&lt;/artifactId>\n     &lt;version>2.8.1&lt;/version>\n    &lt;/dependency>\n    ```\n\n3.  java/com/example/oauth/config/NaverSigninApi.java\n    ```java\n    package com.example.oauth.config;\n    import com.github.scribejava.core.builder.api.DefaultApi20;\n\n    public class NaverSigninApi extends DefaultApi20 {\n     protected NaverSigninApi() {}\n     private static class InstanceHolder {\n         private static final NaverSigninApi INSTANCE = new NaverSigninApi();\n     }\n     public static NaverSigninApi instance() {\n         return InstanceHolder.INSTANCE;\n     }\n     @Override\n     public String getAccessTokenEndpoint() {\n         return \"https://nid.naver.com/oauth2.0/token?grant_type=authorization_code\";\n     }\n     @Override\n     protected String getAuthorizationBaseUrl() {\n         return \"https://nid.naver.com/oauth2.0/authorize\";\n     }\n    }\n    ```\n\n4.  java/com/example/oauth/config/NaverSigninBo.java\n    ```java\n    package com.example.oauth.config;\n\n    import java.io.IOException;\n    import java.util.UUID;\n    import javax.servlet.http.HttpSession;\n    import org.springframework.util.StringUtils;\n    import com.github.scribejava.core.builder.ServiceBuilder;\n    import com.github.scribejava.core.model.OAuth2AccessToken;\n    import com.github.scribejava.core.model.OAuthRequest;\n    import com.github.scribejava.core.model.Response;\n    import com.github.scribejava.core.model.Verb;\n    import com.github.scribejava.core.oauth.OAuth20Service;\n\n    import org.springframework.stereotype.Component;\n\n    @Component\n    public class NaverSigninBO {\n     /* 인증 요청문을 구성하는 파라미터 */\n     //client_id: 애플리케이션 등록 후 발급받은 클라이언트 아이디\n     //response_type: 인증 과정에 대한 구분값. code로 값이 고정돼 있습니다.\n     //redirect_uri: 네이버 로그인 인증의 결과를 전달받을 콜백 URL(URL 인코딩). 애플리케이션을 등록할 때 Callback URL에 설정한 정보입니다.\n     //state: 애플리케이션이 생성한 상태 토큰\n     private final static String CLIENT_ID = \"cI_EDT7R0b9SHI5xV8pp\";\n     private final static String CLIENT_SECRET = \"xEzetWVT1b\";\n     private final static String REDIRECT_URI = \"http://localhost:8080/oauth/naver/callback\";\n     private final static String SESSION_STATE = \"oauth_state\";\n     /* 프로필 조회 API URL */\n     private final static String PROFILE_API_URL = \"https://openapi.naver.com/v1/nid/me\";\n     /* 네이버 아이디로 인증 URL 생성 Method */\n     public String getAuthorizationUrl(HttpSession session) {\n         /* 세션 유효성 검증을 위하여 난수를 생성 */\n         String state = generateRandomString();\n         /* 생성한 난수 값을 session에 저장 */\n         setSession(session, state);\n         /* Scribe에서 제공하는 인증 URL 생성 기능을 이용하여 네아로 인증 URL 생성 */\n         OAuth20Service oauthService = new ServiceBuilder()\n             .apiKey(CLIENT_ID)\n             .apiSecret(CLIENT_SECRET)\n             .callback(REDIRECT_URI)\n             .state(state) //앞서 생성한 난수값을 인증 URL생성시 사용함\n             .build(NaverSigninApi.instance());\n         return oauthService.getAuthorizationUrl();\n     }\n     /* 네이버아이디로 Callback 처리 및 AccessToken 획득 Method */\n     public OAuth2AccessToken getAccessToken(HttpSession session, String code, String state) throws IOException {\n         /* Callback으로 전달받은 세선검증용 난수값과 세션에 저장되어있는 값이 일치하는지 확인 */\n         String sessionState = getSession(session);\n         if (StringUtils.pathEquals(sessionState, state)) {\n             OAuth20Service oauthService = new ServiceBuilder()\n                 .apiKey(CLIENT_ID)\n                 .apiSecret(CLIENT_SECRET)\n                 .callback(REDIRECT_URI)\n                 .state(state)\n                 .build(NaverSigninApi.instance());\n             /* Scribe에서 제공하는 AccessToken 획득 기능으로 네아로 Access Token을 획득 */\n             OAuth2AccessToken accessToken = oauthService.getAccessToken(code);\n             return accessToken;\n         }\n         return null;\n     }\n     /* 세션 유효성 검증을 위한 난수 생성기 */\n     private String generateRandomString() {\n         return UUID.randomUUID().toString();\n     }\n     /* http session에 데이터 저장 */\n     private void setSession(HttpSession session, String state) {\n         session.setAttribute(SESSION_STATE, state);\n     }\n     /* http session에서 데이터 가져오기 */\n     private String getSession(HttpSession session) {\n         return (String) session.getAttribute(SESSION_STATE);\n     }\n     /* Access Token을 이용하여 네이버 사용자 프로필 API를 호출 */\n     public String getUserProfile(OAuth2AccessToken oauthToken) throws IOException {\n         OAuth20Service oauthService = new ServiceBuilder()\n             .apiKey(CLIENT_ID)\n             .apiSecret(CLIENT_SECRET)\n             .callback(REDIRECT_URI).build(NaverSigninApi.instance());\n         OAuthRequest request = new OAuthRequest(Verb.GET, PROFILE_API_URL, oauthService);\n         oauthService.signRequest(oauthToken, request);\n         Response response = request.send();\n         return response.getBody();\n     }\n    }\n    ```\n\n5.  java/com/example/oauth/sign/SignController.java\n    ```java\n    package com.example.oauth.sign;\n\n    import java.io.IOException;\n    import javax.servlet.http.HttpSession;\n    import org.json.simple.JSONObject;\n    import org.json.simple.parser.JSONParser;\n    import org.json.simple.parser.ParseException;\n    import org.springframework.beans.factory.annotation.Autowired;\n    import org.springframework.stereotype.Controller;\n    import org.springframework.ui.Model;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RequestMethod;\n    import org.springframework.web.bind.annotation.RequestParam;\n    import com.github.scribejava.core.model.OAuth2AccessToken;\n\n    import com.example.oauth.config.NaverSigninBO;\n\n    /**\n    * Handles requests for the application home page.\n    */\n    @Controller\n    public class SigninController {\n\n     @Autowired\n     private NaverSigninBO naverSigninBO;\n     private String apiResult = null;\n\n     //로그인 첫 화면 요청 메소드\n     @RequestMapping(value = \"/oauth/signin\", method = {\n         RequestMethod.GET,\n         RequestMethod.POST\n     })\n     public String signin(Model model, HttpSession session) {\n         /* 네이버아이디로 인증 URL을 생성하기 위하여 naverSigninBO클래스의 getAuthorizationUrl메소드 호출 */\n         String naverAuthUrl = naverSigninBO.getAuthorizationUrl(session);\n         //https://nid.naver.com/oauth2.0/authorize?response_type=code&amp;client_id=sE***************&amp;\n         //redirect_uri=http%3A%2F%2F211.63.89.90%3A8090%2Fsignin_project%2Fcallback&amp;state=e68c269c-5ba9-4c31-85da-54c16c658125\n         System.out.println(\"네이버:\" + naverAuthUrl);\n         //네이버\n         model.addAttribute(\"url\", naverAuthUrl);\n         return \"signin\";\n     }\n     //네이버 로그인 성공시 callback호출 메소드\n     @RequestMapping(value = \"/oauth/naver/callback\", method = {\n         RequestMethod.GET,\n         RequestMethod.POST\n     })\n     public String callback(Model model, @RequestParam String code, @RequestParam String state, HttpSession session) throws IOException, ParseException {\n         System.out.println(\"여기는 callback\");\n         OAuth2AccessToken oauthToken;\n         oauthToken = naverSigninBO.getAccessToken(session, code, state);\n         System.out.println(\"oauthToken : \" + oauthToken);\n         //1. 로그인 사용자 정보를 읽어온다.\n         apiResult = naverSigninBO.getUserProfile(oauthToken); //String형식의 json데이터\n         System.out.println(\"apiResult : \" + apiResult);\n         /** apiResult json 구조\n         {\"resultcode\":\"00\",\n         \"message\":\"success\",\n         \"response\":{\"id\":\"33666449\",\"nickname\":\"shinn****\",\"age\":\"20-29\",\"gender\":\"M\",\"email\":\"sh@naver.com\",\"name\":\"\\uc2e0\\ubc94\\ud638\"}}\n         **/\n         //2. String형식인 apiResult를 json형태로 바꿈\n         JSONParser parser = new JSONParser();\n         Object obj = parser.parse(apiResult);\n         JSONObject jsonObj = (JSONObject) obj;\n         //3. 데이터 파싱\n         //Top레벨 단계 _response 파싱\n         JSONObject response_obj = (JSONObject) jsonObj.get(\"response\");\n         //response의 nickname값 파싱\n         String nickname = (String) response_obj.get(\"nickname\");\n         System.out.println(nickname);\n         //4.파싱 닉네임 세션으로 저장\n         session.setAttribute(\"sessionId\", nickname); //세션 생성\n         model.addAttribute(\"result\", apiResult);\n         return \"signin\";\n     }\n     //로그아웃\n     @RequestMapping(value = \"/oauth/logout\", method = {\n         RequestMethod.GET,\n         RequestMethod.POST\n     })\n     public String logout(HttpSession session) throws IOException {\n         System.out.println(\"여기는 logout\");\n         session.invalidate();\n         return \"redirect:/\";\n     }\n    }\n    ```\n\n6.  webapp/WEB-INF/views/index.jsp\n    ```jsp\n    &lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n    &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n    &lt;html>\n\n    &lt;head>\n     &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n     &lt;title>NAVER LOGIN TEST&lt;/title>\n    &lt;/head>\n\n    &lt;body>\n     &lt;h1>메인 페이지 입니다.&lt;/h1>\n     &lt;hr>\n     &lt;br>\n     &lt;a href=\"/oauth/signin\">로그인 하러 가기 &lt;/a>\n     &lt;hr>\n    &lt;/body>\n\n    &lt;/html>\n    ```\n\n7.  webapp/WEB-INF/views/signin.jsp\n    ```jsp\n    &lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n    &lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%>\n    &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n    &lt;html>\n\n    &lt;head>\n     &lt;title>NAVER LOGIN TEST&lt;/title>\n    &lt;/head>\n\n    &lt;body>\n     &lt;h1>Login Form&lt;/h1>\n     &lt;hr>\n     &lt;br>\n     &lt;center>\n         &lt;c:choose>\n             &lt;c:when test=\"${sessionId != null}\">\n                 &lt;h2> 네이버 아이디 로그인 성공하셨습니다!! &lt;/h2>\n                 &lt;h3>'${sessionId}' 님 환영합니다! &lt;/h3>\n                 &lt;h3>&lt;a href=\"/oauth/logout\">로그아웃&lt;/a>&lt;/h3>\n             &lt;/c:when>\n             &lt;c:otherwise>\n                 &lt;form action=\"login.userdo\" method=\"post\" name=\"frm\" style=\"width:470px;\">\n                     &lt;h2>로그인&lt;/h2>\n                     &lt;input type=\"text\" name=\"id\" id=\"id\" class=\"w3-input w3-border\" placeholder=\"아이디\" value=\"${id}\">\n                     &lt;br>\n                     &lt;input type=\"password\" id=\"pwd\" name=\"pwd\" class=\"w3-input w3-border\" placeholder=\"비밀번호\"> &lt;br>\n                     &lt;input type=\"submit\" value=\"로그인\" onclick=\"#\"> &lt;br>\n                 &lt;/form>\n                 &lt;br>\n                 &lt;!-- 네이버 로그인 창으로 이동 -->\n                 &lt;div id=\"naver_id_login\" style=\"text-align:center\">&lt;a href=\"${url}\">\n                         &lt;img width=\"223\"\n                             src=\"https://developers.naver.com/doc/review_201802/CK_bEFnWMeEBjXpQ5o8N_20180202_7aot50.png\" />&lt;/a>\n                 &lt;/div>\n                 &lt;br>\n             &lt;/c:otherwise>\n         &lt;/c:choose>\n     &lt;/center>\n    &lt;/body>\n\n    &lt;/html>\n    ```\n\n8.  application.properties\n    ```\n    server.port=8080\n\n    spring.mvc.view.prefix=/WEB-INF/views/\n    spring.mvc.view.suffix=.jsp\n    ```</code></pre></div>\n<blockquote>\n<p><a href=\"https://developers.naver.com/main/\">https://developers.naver.com/main/</a><br>\n<a href=\"https://bumcrush.tistory.com/151\">https://bumcrush.tistory.com/151</a><br>\n<a href=\"https://4urdev.tistory.com/47\">https://4urdev.tistory.com/47</a></p>\n</blockquote>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#naver-developers--application--application-%EB%93%B1%EB%A1%9D\">Naver developers > Application > Application 등록</a></li>\n<li><a href=\"#%EC%86%8C%EC%8A%A4-%EC%9E%91%EC%84%B1\">소스 작성</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 19, 2020","title":"[OAuth2] Springboot + naver + jsp","categories":"Framework","author":"TMM","emoji":null},"fields":{"slug":"/2020-02-19-framework-oauth2-springboot-naver-jsp/"}},"prev":{"id":"30749887-67a5-5149-b332-306550276253","html":"<p>Tistory 에서 블로그 관리가 편하지 않네요. 미루고 미루던 일을 이제 해볼까 합니다. GitHub에 Jekyll과 minimal-mistakes 테마를 활용하여 블러그를 만들도록 하겠습니다.</p>\n<h2 id=\"os--app\" style=\"position:relative;\"><a href=\"#os--app\" aria-label=\"os  app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OS &#x26; App</h2>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">macOS Catalina 10.15.3\nRuby 2.6.3: 루비는 마츠모토 유키히로가 개발한 동적 객체 지향 스크립트 프로그래밍 언어입니다.\ngem 3.0.8: RubyGems는 Ruby 프로그램 및 라이브러리 배포를위한 표준 형식, gem 설치를 쉽게 관리하도록 설계된 도구 및 배포 용 서버를 제공하는 Ruby 프로그래밍 언어의 패키지 관리자입니다.\njekyll 4.0.0: Jekyll은 개인, 프로젝트 또는 조직 사이트를위한 간단한 블로그 인식 정적 사이트 생성기입니다.</code></pre></div>\n<h2 id=\"install\" style=\"position:relative;\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<ol>\n<li>\n<p>GitHub 에 Repository 생성 및 Clone</p>\n<ol>\n<li>github 에서 New Repository 클릭</li>\n<li>Repository name : [username].github.io</li>\n<li>Public 으로 생성</li>\n<li>git clone <a href=\"https://github.com/%5Busername%5D/%5Busername%5D.github.io.git\">https://github.com/[username]/[username].github.io.git</a></li>\n</ol>\n</li>\n<li>\n<p>Ruby Version Manager 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -sSL https://get.rvm.io <span class=\"token operator\">|</span> <span class=\"token function\">bash</span> -s stable --ruby</code></pre></div>\n</li>\n<li>Teminal 재실행</li>\n<li>\n<p>Ruby 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ rvm list\n<span class=\"token operator\">=</span> ruby-2.6.3 <span class=\"token punctuation\">[</span> x86_64 <span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># => - current</span>\n<span class=\"token comment\"># =* - current &amp;&amp; default</span>\n<span class=\"token comment\">#  * - default</span>\n\n$ rvm use <span class=\"token number\">2.6</span>.3 --default\n$ ruby -v\nruby <span class=\"token number\">2.6</span>.3p62 <span class=\"token punctuation\">(</span><span class=\"token number\">2019</span>-04-16 revision <span class=\"token number\">67580</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>x86_64-darwin19<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p>Jekyll 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ gem <span class=\"token function\">install</span> jekyll bundler\n$ jekyll -v\njekyll <span class=\"token number\">4.0</span>.0</code></pre></div>\n</li>\n<li>\n<p>Jekyll default site 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io.git\n$ jekyll new ./\n$ bundle\n$ bundle <span class=\"token builtin class-name\">exec</span> jekyll serve\n<span class=\"token punctuation\">..</span>.\nServer address: http://127.0.0.1:4000/\nServer running<span class=\"token punctuation\">..</span>. press ctrl-c to stop.\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n</li>\n<li>\n<p>GitHub 에 반영</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"first commit\"</span>\n$ <span class=\"token function\">git</span> push origin master</code></pre></div>\n</li>\n<li>\n<p>web site 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://[username].github.io/</code></pre></div>\n</li>\n</ol>\n<p><strong>Note:</strong><br />\n위의 내용으로 <code class=\"language-text\">GitHub [username].github.io</code> 에 반영하면 깔끔하게 잘 나옵니다.<br />\n그러나 이후 테마가 적용된 소스를 GitHub 에 커밋하면 404 페이지가 나옵니다.<br />\n원인은 불확실하나 처리 방법은 테마 적용후 Jekyll 서버를 기동하면 컴파일된 소스들이 <code class=\"language-text\">_site</code> 폴더에 생성되는데 생성된 파일을 <code class=\"language-text\">GitHub [username].github.io master</code> 에 올리면 정상적으로 페이지가 나옵니다.<br />\n그래서 소스 파일 관리는 <code class=\"language-text\">GitHub [username].github.source</code> Repository 에서, 배포는 <code class=\"language-text\">GitHub [username].github.io</code> Repository 에 하도록 하겠습니다.\n{: .notice—info}</p>\n<h2 id=\"apply-theme\" style=\"position:relative;\"><a href=\"#apply-theme\" aria-label=\"apply theme permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Apply theme</h2>\n<ol>\n<li>\n<p>GitHub 에 Repository 생성 및 Clone</p>\n<ol>\n<li>github 에서 New Repository 클릭</li>\n<li>Repository name : [username].github.source</li>\n<li>git clone <a href=\"https://github.com/%5Busername%5D/%5Busername%5D.github.source.git\">https://github.com/[username]/[username].github.source.git</a></li>\n</ol>\n</li>\n<li>\n<p>GitHub 에서 테마 다운로드</p>\n<ul>\n<li>Jekyll theme 중 가장 많이 다운받는 <a href=\"https://github.com/mmistakes/minimal-mistakes\">minimal-mistakes</a> 에서 압축파일을 다운받아 풀고 <strong>[username].github.source</strong> 폴더에 복사합니다.</li>\n</ul>\n</li>\n<li>\n<p>커스터마이징</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">_config.yml: 파일에는 테마 스킨, locale 선택, 블로그 정보, 사용자 정보, 검색 등의 정보를 설정 합니다.\n_data/navigation.yml: 네이게이션, 사이드바 정보를 설정 합니다.\n_posts: 블로그 게시글들 입니다.</code></pre></div>\n</li>\n<li>\n<p>중요 폴더 복사</p>\n<ul>\n<li><code class=\"language-text\">docs/_pages</code> 폴더를 최상위 폴더로 복사합니다. 그럼 게시글들을 year, categorise, tags 단위로 그룹지어서 볼수있습니다.</li>\n<li><code class=\"language-text\">docs/_posts</code> 에 글들을 참고하여 최상위 폴더인 <code class=\"language-text\">_posts</code> 에 파일을 생성합니다. 파일 생성시에는 규칙이 있으며 생성된 파일들이 블로그의 게시글들이 됩니다. 자세한 내용은 링크를 참고바랍니다. 설명할게 너무 많아요.</li>\n</ul>\n</li>\n<li>\n<p>불필요한 폴더 목록</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/docs\n/test</code></pre></div>\n</li>\n<li>\n<p>자동 배포</p>\n<ul>\n<li><code class=\"language-text\">[username].github.source</code> 의 <code class=\"language-text\">_site</code> 파일들을 <code class=\"language-text\">[username].github.io</code> 폴더로 복사후 GitHub 에 커밋까지 하려면 명령어를 조금 많이 입력해야 합니다. 귀찮습니다. 그래서 shell 파일을 만들려 합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.source\n\n$ bundle <span class=\"token builtin class-name\">exec</span> jekyll serve\nCtrl + c\n\n$ <span class=\"token function\">vi</span> publish.sh\n\n   <span class=\"token comment\">#!/bin/bash</span>\n\n   <span class=\"token function\">rm</span> -rf <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/*\n   <span class=\"token function\">cp</span> -r _site/* <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/\n   <span class=\"token function\">git</span> --git-dir <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/.git --work-tree<span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io status\n   <span class=\"token function\">git</span> --git-dir <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/.git --work-tree<span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n   <span class=\"token function\">git</span> --git-dir <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/.git --work-tree<span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io commit -m <span class=\"token string\">\"...\"</span>\n   <span class=\"token function\">git</span> --git-dir <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/.git --work-tree<span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io push origin master\n\n$ <span class=\"token function\">chmod</span> <span class=\"token number\">755</span> publish.sh\n$ ./publish.sh</code></pre></div>\n</li>\n<li>\n<p>web site 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://[username].github.io/</code></pre></div>\n</li>\n</ol>\n<p><strong>Note:</strong><br />\n<code class=\"language-text\">git filter-branch --subdirectory-filter _site/ -f</code> 명령어로 하나의 Repository 에서 관리를 할 수 있다고하는데 저는 잘 적용되지 않았습니다.<br />\n혹시 이글을 보시는 분이 있다면 한번 도전해 보시기 바랍니다.<br />\n참고했던 링크는 <a href=\"https://rainsound-k.github.io/jekyll-blog/2018/05/02/apply-custom-plugin.html\">여기</a>입니다.\n{: .notice—info}</p>\n<blockquote>\n<p><a href=\"https://poiemaweb.com/jekyll-basics\">https://poiemaweb.com/jekyll-basics</a> > <a href=\"https://junhobaik.github.io/jekyll-apply-theme/\">https://junhobaik.github.io/jekyll-apply-theme/</a> > <a href=\"https://rainsound-k.github.io/jekyll-blog/2018/05/02/apply-custom-plugin.html\">https://rainsound-k.github.io/jekyll-blog/2018/05/02/apply-custom-plugin.html</a> > <a href=\"https://jetalog.net/86\">https://jetalog.net/86</a></p>\n</blockquote>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#os--app\">OS &#x26; App</a></li>\n<li><a href=\"#install\">Install</a></li>\n<li><a href=\"#apply-theme\">Apply theme</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 25, 2020","title":"[Blog] GitHub에 blog 생성","categories":"SCM","author":"TMM","emoji":null},"fields":{"slug":"/2020-02-25-scm-create-github-blog/"}},"site":{"siteMetadata":{"siteUrl":"https://whitexozu.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/2020-02-20-framework-oauth2-springboot-facebook-google-kakao-naver/","nextSlug":"/2020-02-19-framework-oauth2-springboot-naver-jsp/","prevSlug":"/2020-02-25-scm-create-github-blog/"}},"staticQueryHashes":["1073350324","2938748437"]}