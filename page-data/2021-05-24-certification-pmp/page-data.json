{"componentChunkName":"component---src-templates-blog-template-js","path":"/2021-05-24-certification-pmp/","result":{"data":{"cur":{"id":"39cbc1ea-2f59-51bd-bb74-637491beacc6","html":"<p><em>배우고 생각하지 않으면 체계가 없이 막연하고 생각만 하면 위태로우니라</em>\n<br />\n프로젝트가 유려하게 진행될 때가 있습니다. 능력있는 PM을 만났을 때입니다. 그러나 대부분 반대의 경우가 더 많았습니다.\n<br />\n그럼 제가 끝내주는 PM이 되면 되겠죠. 근데 전 PM이 되기 싫습니다. 다만 무엇을 어떻게 해야하는지 알고 흔들리지 않을 정도의 지식 습득을 위해 PMP 공부를 해보겠습니다.</p>\n<h2 id=\"프로젝트-관리-개요\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B4%80%EB%A6%AC-%EA%B0%9C%EC%9A%94\" aria-label=\"프로젝트 관리 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 관리 개요</h2>\n<ol>\n<li>프로젝트 관리일반</li>\n<li>비즈니스 가치와 비즈니스 문서들</li>\n<li>프로젝트 생명주기</li>\n<li>프로젝트 관리 프로세스</li>\n</ol>\n<h2 id=\"프로젝트-운영-환경\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9A%B4%EC%98%81-%ED%99%98%EA%B2%BD\" aria-label=\"프로젝트 운영 환경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 운영 환경</h2>\n<ol>\n<li>프로젝트 운영 환경</li>\n<li>기업 환경 요인</li>\n<li>조직 프로세스 자산</li>\n<li>조직 시스템</li>\n</ol>\n<h2 id=\"프로젝트-관리자-역할\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B4%80%EB%A6%AC%EC%9E%90-%EC%97%AD%ED%95%A0\" aria-label=\"프로젝트 관리자 역할 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 관리자 역할</h2>\n<ol>\n<li>프로젝트 관리자 역할</li>\n<li>프로젝트 관리자 영향력의 영역</li>\n<li>프로젝트 관리자 역량</li>\n<li>통합 수행</li>\n</ol>\n<h2 id=\"프로젝트-통합-관리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%ED%86%B5%ED%95%A9-%EA%B4%80%EB%A6%AC\" aria-label=\"프로젝트 통합 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 통합 관리</h2>\n<ol>\n<li>\n<p>프로젝트 헌장 개발</p>\n<ul>\n<li>프로젝트의 시작과 프로젝트 수행을 위한 조직자원을 적용하기 위하여, 공식적인 권한을 프로젝트 관리자에게 제공하기 위한 문서를 개발하는 프로세스</li>\n<li>프로젝트 헌장(Charter)은 프로젝트 자원, 예산, 목표를 부여하기 위해 권한을 가진 관리자로 부터 승인 받은 문서이며, 이 문서의 승인을 통하여 프로젝트 관리자는 조직의 자원과 프로젝트 활동을 수행할 권한이 공식적으로 프로젝트 관리자에게 주어진다.</li>\n</ul>\n</li>\n<li>\n<p>포로젝트 관리 계획서 개발</p>\n<ul>\n<li>모든 보조적인 계획서를 정의하고, 작성 및 조율해서 하나의 종합적인 관리계획 서에 통합하는 프로세스</li>\n</ul>\n</li>\n<li>프로젝트 작업 지시 및 관리</li>\n<li>프로젝트 지식 관리</li>\n<li>프로젝트 작업 감시 및 통제</li>\n<li>통합 변경 통제 수행</li>\n<li>프로젝트 종료 또는 단계 종료</li>\n</ol>\n<h2 id=\"프로젝트-범위-관리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B2%94%EC%9C%84-%EA%B4%80%EB%A6%AC\" aria-label=\"프로젝트 범위 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 범위 관리</h2>\n<ol>\n<li>범위 관리 계획 수립</li>\n<li>요구사항 수집</li>\n<li>범위 정의</li>\n<li>WBS 작성</li>\n<li>범위 확인</li>\n<li>범위 통제</li>\n</ol>\n<h2 id=\"프로젝트-일정-관리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9D%BC%EC%A0%95-%EA%B4%80%EB%A6%AC\" aria-label=\"프로젝트 일정 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 일정 관리</h2>\n<ol>\n<li>일정 관리 계획 수립</li>\n<li>활동 정의</li>\n<li>활동 순서 배열</li>\n<li>활동 기간 산정</li>\n<li>일정 개발</li>\n<li>일정 통제</li>\n</ol>\n<h2 id=\"프로젝트-원가관리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9B%90%EA%B0%80%EA%B4%80%EB%A6%AC\" aria-label=\"프로젝트 원가관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 원가관리</h2>\n<ul>\n<li>\n<p>주요단어</p>\n<ul>\n<li>EST(Earned Schedule Theory): 획득 일정 이론</li>\n<li>AT(Actual Time): 실제 시간</li>\n<li>ES(Earned Schedule): 획득 일정</li>\n<li>SPI: 일정 성과 지수 = ES / AT</li>\n</ul>\n</li>\n<li>\n<p>원가 관리 계획수립</p>\n<ul>\n<li>원가를 어떻게 관리하고 가이드하고 지시하는지를 제공</li>\n</ul>\n<p>O : 원가 관리 계획서</p>\n</li>\n<li>원가 산정</li>\n<li>\n<p>예산 결정</p>\n<ul>\n<li>예산 결정은 개별적인 활동, 작업 패키지의 산정된 원가를 수집하여, 승인된 원가 기준선을 만들기 위한 프로세스이다.</li>\n</ul>\n</li>\n<li>\n<p>원가 통제</p>\n<ul>\n<li>원가 통제는 원가 기준선의 변경을 관리하고, 프로젝트 원가를 갱신하기 위해, 프로젝트 상태를 감시하는 프로세스</li>\n<li>EVM(Earned Value Analysis/Method): 획득 가치 분석/관리</li>\n<li>\n<p>측정 요소 - 획득 가치 분석(EVA)</p>\n<ul>\n<li>PV(Planned Value): 계획 가치</li>\n<li>EV(Earned Value): 획득 가치</li>\n<li>AC(Actual Cost): 실제 원가</li>\n<li>BAC(Budget At Completion): 완료시점예산</li>\n</ul>\n</li>\n<li>\n<p>분석 요소 - 차이분석(Variance Analysis)</p>\n<ul>\n<li>SV(Schedule Variance): 프로젝트에 대한 일정 성과를 측정하는 척도</li>\n<li>CV(Cost Variance): 원가 성과를 측정하는 척도</li>\n<li>SPI(Schedule Performance Index): 일정 성과 지수</li>\n<li>CPI(Cost Performance Index): 원가 성과지수</li>\n</ul>\n</li>\n<li>\n<p>예측 요소 - 추세 분석(Trend Analysis) <em>비정형적인, 정형적인 분석 두가지 방법으로 분석 가능</em></p>\n<ul>\n<li>ETC(Estimate To Complete): 잔여분산정치</li>\n<li>EAC(Estimate At Completion): 완료시점산정치</li>\n<li>VAC(Variance At Completion): 프로젝트 완료 시점의 원가 차이</li>\n<li>TCPI(To Complete Performance Index): BAC, EAC 등과 같이 지정된 관리 목표를 충족하기 위하여 잔여 작업에서 발휘해야 할 효율</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"프로젝트-품질-관리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%ED%92%88%EC%A7%88-%EA%B4%80%EB%A6%AC\" aria-label=\"프로젝트 품질 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 품질 관리</h2>\n<ul>\n<li>품질 통계, 품질 검삼 목록 및 종료 기준 등은 품질 계획에서 정의되어야 함</li>\n<li>\n<p>프로젝트 품질 관리의 주요 핵심 개념(Key Concepts)</p>\n<ul>\n<li>프로젝트의 품질 관리는 프로젝트 관리와 인도물 관리에 목적에 맞춰 있다</li>\n<li>예방(Prevention)이 검사(Inspection)보다 더 좋다</li>\n</ul>\n</li>\n<li>\n<p>품질 관리 계획 수립</p>\n<ul>\n<li>프로젝트 품질 관리 계획은 프로젝트, 산출물과 품질 요구사항이 어떻게 동작하는지 관련된 사항을 문서화하는 기준</li>\n</ul>\n</li>\n<li>\n<h2 id=\"품질-관리\" style=\"position:relative;\"><a href=\"#%ED%92%88%EC%A7%88-%EA%B4%80%EB%A6%AC\" aria-label=\"품질 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>품질 관리</h2>\n</li>\n<li>\n<p>품질 통제</p>\n<ul>\n<li>성과를 평가하기 위하여, 수행한 품질관리 활동 결과를 감시하고 기록하는 프로세스</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"프로젝트-자원-관리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9E%90%EC%9B%90-%EA%B4%80%EB%A6%AC\" aria-label=\"프로젝트 자원 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 자원 관리</h2>\n<ol>\n<li>\n<p>자원 관리 계획 수립</p>\n<ul>\n<li>자원 관리 계획수립은 프로젝트 어떻게 팀과 물적 자원을 산정하고, 획득하고, 관리하고 사용하는지를 정의</li>\n</ul>\n</li>\n<li>\n<p>활동 자원 산정</p>\n<ul>\n<li>프로젝트 작업을 수행하기 위해 필요한 팀 자원, 재료, 장비, 공급품의 타입, 수량을 산정하는 프로세스</li>\n</ul>\n</li>\n<li>자원 확보</li>\n<li>\n<p>팀 개발</p>\n<ul>\n<li>프로젝트 성과를 향상시키기 위해 팀원들의 역량과 팀원간 협력, 전반적인 팀 분위기를 개선하는 프로세스</li>\n</ul>\n</li>\n<li>\n<p>팀 관리</p>\n<ul>\n<li>프로젝트 성과를 최적화 하기 위하여 팀원의 성과를 추적하고, 피드백을 제공하고, 이슈를 해결하고, 팀 변경을 관리하는 프로세스</li>\n</ul>\n</li>\n<li>\n<p>자원 통제</p>\n<ul>\n<li>물적인 자원과 계획대로 프로젝트에 유용하고, 계획 대비 자원이 활용률을 감시하고, 필요에 따라 조치 활동을 수행하는 확인 프로세스</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"프로젝트-의사소통-관리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9D%98%EC%82%AC%EC%86%8C%ED%86%B5-%EA%B4%80%EB%A6%AC\" aria-label=\"프로젝트 의사소통 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 의사소통 관리</h2>\n<ol>\n<li>\n<p>의사소통 관리 계획 수립</p>\n<ul>\n<li>프로젝트 이해 관계자, 그룹, 가용한 조직의 자산, 프로젝트에 필요로 하는 정보의 필요성을 바탕으로 프로젝트 의사소통 활동에 대한 적절한 접근과 계획을 개발 수립하는 프로세스</li>\n<li>이해관계자 식별 과정과 프로젝트관리계획서 개발 과정 처럼 초기에 수행</li>\n</ul>\n</li>\n<li>\n<p>의사소통 관리</p>\n<ul>\n<li>프로젝트 정보를 적시에 적절하게 수집, 생성, 배포, 저장, 검색, 관리 및 감시하게 하여, 최종 처리하는 실행 프로세스</li>\n</ul>\n</li>\n<li>\n<p>의사소통 감시</p>\n<ul>\n<li>프로젝트와 프로젝트의 이해관계자의 정보 요구사항을 충족하는지 확인하기 위한 프로세스</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"프로젝트-위험-관리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9C%84%ED%97%98-%EA%B4%80%EB%A6%AC\" aria-label=\"프로젝트 위험 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 위험 관리</h2>\n<ul>\n<li>\n<p>주요 용어</p>\n<ul>\n<li>위험 유형(Risk Category): 위험의 원인에 따라 기술, 조직 특성, 프로젝트 환경, 관리 상 등 다양한 범주로 분류한 기준</li>\n<li>위험 허용 수준(Risk Tolerances): 조직과 이해관계자가 감내할 수 있고 수용할 수 있는 위험의 크기 및 허용 정도(양 또는 크기를 의미함)</li>\n<li>위험 영향(Risk Impact): 위험이 발행하였을 경우 미치는 영향</li>\n<li>위험 발생가능성(Risk Probability): 위험이 실제 일어날 수 있는 가능성</li>\n<li>위험 한계선(Risk Thresholds): 위험한계선 아래에 있는 위험은 조직에서 수용, 넘은 위험은 허용 안함. 해당 선(Level)</li>\n<li>위험 유발요인(Risk Trigger): 위험이 발생할 것임을 알려주는 신호, 경계 지표, 계기 위험이 현실에서 일어나게 되는 시점</li>\n<li>이슈(Issue): 발생한 부정적인 프로젝트 리스크는 이슈로 간주한다. 즉, 분쟁 또는 쟁점을 말함.</li>\n<li>Risk Appetite(애피타이트): 위험을 줄이기 위해, 조직이 기꺼이 감내할 수 있는 정도(Degree)(이 정도는 내가 프로젝트 목적을 위해 떠안을 수 있음)</li>\n</ul>\n</li>\n<li>\n<p>위험 관리 목적</p>\n<ul>\n<li>프로젝트 성공할 확률을 증가 시키는 것: 긍정적 위험 확률 증가, 부정적 위험은 확률과 영향을 줄이는 목적</li>\n</ul>\n</li>\n<li>\n<p>위험은 2개 수준(Level)으로 존재 ★★</p>\n<ul>\n<li>개별적 프로젝트 위험</li>\n<li>Individual Project Risk</li>\n<li>긍정적 위험 혹은 부정적 위험에 영향을 미치는 불확실한 이벤트 혹은 조건 2개 모두</li>\n<li>포괄적/전반적 프로젝트 위험</li>\n<li>Overall Project Risk</li>\n<li>위험이 개별적 위험 및 프로젝트에서 불확실성이 여러 곳(원인)에서 출현 하거나, 이해관계자가 프로젝트의 결과에 대해 영향의 변화(Implications of variations)가 어떻게 노출될지 불확실한 경우</li>\n<li>이 경우는 부정적 부분을 줄이고, 긍정적 부분을 향상 시킬 필요가 있음. 허용 범위(Acceptable range)로 유지</li>\n</ul>\n</li>\n<li>\n<p>위험 관리 계획 수립</p>\n<ul>\n<li>프로젝트 진행 중 위험관리 활동을 어떻게 할 것인지 정의하고 계획하는 프로세스</li>\n</ul>\n</li>\n<li>\n<p>위험 식별</p>\n<ul>\n<li>개별 프로젝트 위험과 포괄적 프로젝트 위험원을 식별하고, 해당 위험의 특성을 문서 화하는 프로세스</li>\n</ul>\n</li>\n<li>\n<p>정성적 위험 분석 수행</p>\n<ul>\n<li>위험의 발생확률과 영향, 특징을 평가하여 대응과 분석을 위한 개별 프로젝트 위험의 우선 순위를 결정하는 프로세스</li>\n<li>리스크 식별이 마무리 된 후 리스크의 발생 확률과 영향을 평가하여 리스크의 우선순위를 지정하는 정성적 리스크 분석 수행</li>\n<li>적절한 위험 대응 계획 수립 및 구현을 담당할 각 위험의 책임을 가져갈 담당자(Owner)를 식별</li>\n</ul>\n</li>\n<li>\n<p>정량적 위험 분석 수행</p>\n<ul>\n<li>식별된 개별 프로젝트 위험과 기타 불확실한 원인이 전체 프로젝트 목표에 미치는 영향을 수치적으로 분석하는 프로세스</li>\n<li>정성적 분석의 경우 해당 위험이 원가와 일정에 미치는 영향을 수치화하기 어렵기 때문에 정량적 분석을 통해 발생 가능성과 영향의 정도를 수학적 모델을 이용하여 계산한다.</li>\n<li>이로 인한, 시간과 비용도 추가로 들어간다</li>\n<li>따라서, 모든 프로젝트에 정량적 위험 분석을 수행할 필요는 없다.</li>\n</ul>\n</li>\n<li>\n<p>위험 대응 계획 수립</p>\n<ul>\n<li>개별 프로젝트 위험을 다루고, 포괄적 프로젝트 위험 노출(도)를 낮추기 위해, 옵션을 만들고, 전략을 선택하고, 대응 조치에 대해 합의를 동의시키는 프로세스</li>\n<li>프로젝트 목표에 대한 긍정적 위험은 증대시키고 부정적인 위험은 줄이기 위한 대안과 처리방안을 개발하는 프로세스</li>\n</ul>\n</li>\n<li>\n<p>위험 대응 실행</p>\n<ul>\n<li>서로 동의된 위험 대응 계획 수립한 것을 실행(구축/실천)하는 프로세스</li>\n</ul>\n</li>\n<li>\n<p>위험 감시</p>\n<ul>\n<li>프로젝트 처음부터 끝까지 동의된 위험 계획 수립, 식별된 위험 추적, 새로운 위험을 식별 및 분석, 위험 프로세스가 효과적인지 평가, 실행된 것을 감시하는 프로세스</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"프로젝트-조달-관리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A1%B0%EB%8B%AC-%EA%B4%80%EB%A6%AC\" aria-label=\"프로젝트 조달 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 조달 관리</h2>\n<ol>\n<li>조달 관리 계획 수립</li>\n<li>조달 수행</li>\n<li>조달 통제</li>\n</ol>\n<h2 id=\"프로젝트-이해관계자-관리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9D%B4%ED%95%B4%EA%B4%80%EA%B3%84%EC%9E%90-%EA%B4%80%EB%A6%AC\" aria-label=\"프로젝트 이해관계자 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 이해관계자 관리</h2>\n<ol>\n<li>\n<p>이해관계자 식별</p>\n<ul>\n<li>프로젝트 성공을 위해, 정기적으로 프로젝트 이해관계자들을 식별해서, 그들의 목적, 참여도, 상호의존, 영향력과 잠재적인 영향을 분석, 문서화하는 프로세스</li>\n<li>식별 프로세스는 프로젝트 전반에 걸쳐 필요에 따라, 주기적으로 수행</li>\n</ul>\n</li>\n<li>\n<p>이해관계자 참여 계획 수립</p>\n<ul>\n<li>이해관계자들의 니즈, 관심사항, 잠재적인 영향을 기반으로 이해관계자들을 끌어들이는(involve; 참여시키는) 접근 방법을 개발하는 프로세스</li>\n</ul>\n</li>\n<li>\n<p>이해관계자 참여 관리</p>\n<ul>\n<li>이해관계자들이 필요로 하는 목표와 기대치에 도달하기 위해, 이해 관계자들과 의사소통하고 함께 협력하는 프로세스</li>\n<li>이해관계자들의 지지 확보</li>\n<li>이해관계자들의 저항을 최소화</li>\n</ul>\n</li>\n<li>\n<p>이해관계자 참여 감시</p>\n<ul>\n<li>이해관계자들의 참여 전략과 계획 수정을 통하여, 참여하는 이해관계 자들에 대한 전략을 조정하고, 이해관계자들 관계를 감시하는 프로세스</li>\n</ul>\n</li>\n</ol>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B4%80%EB%A6%AC-%EA%B0%9C%EC%9A%94\">프로젝트 관리 개요</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9A%B4%EC%98%81-%ED%99%98%EA%B2%BD\">프로젝트 운영 환경</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B4%80%EB%A6%AC%EC%9E%90-%EC%97%AD%ED%95%A0\">프로젝트 관리자 역할</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%ED%86%B5%ED%95%A9-%EA%B4%80%EB%A6%AC\">프로젝트 통합 관리</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B2%94%EC%9C%84-%EA%B4%80%EB%A6%AC\">프로젝트 범위 관리</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9D%BC%EC%A0%95-%EA%B4%80%EB%A6%AC\">프로젝트 일정 관리</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9B%90%EA%B0%80%EA%B4%80%EB%A6%AC\">프로젝트 원가관리</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%ED%92%88%EC%A7%88-%EA%B4%80%EB%A6%AC\">프로젝트 품질 관리</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9E%90%EC%9B%90-%EA%B4%80%EB%A6%AC\">프로젝트 자원 관리</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9D%98%EC%82%AC%EC%86%8C%ED%86%B5-%EA%B4%80%EB%A6%AC\">프로젝트 의사소통 관리</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9C%84%ED%97%98-%EA%B4%80%EB%A6%AC\">프로젝트 위험 관리</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A1%B0%EB%8B%AC-%EA%B4%80%EB%A6%AC\">프로젝트 조달 관리</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9D%B4%ED%95%B4%EA%B4%80%EA%B3%84%EC%9E%90-%EA%B4%80%EB%A6%AC\">프로젝트 이해관계자 관리</a></li>\n</ul>\n</div>","excerpt":"배우고 생각하지 않으면 체계가 없이 막연하고 생각만 하면 위태로우니라\n\n프로젝트가 유려하게 진행될 때가 있습니다. 능력있는 PM을 만났을 때입니다. 그러나 대부분 반대의 경우가 더 많았습니다.\n\n그럼 제가 끝내주는 PM이 되면 되겠죠. 근데 전 PM이 되기 싫습니다. 다만 무엇을 어떻게 해야하는지 알고 흔들리지 않을 정도의 지식 습득을 위해 PMP 공부를 해보겠습니다. 프로젝트 관리 개요 프로젝트 관리일반 비즈니스 가치와 비즈니스 문서들 프로젝트 생명주기 프로젝트 관리 프로세스 프로젝트 운영 환경 프로젝트 운영 환경 기업 환경 요인 조직 프로세스 자산 조직 시스템 프로젝트 관리자 역할 프로젝트 관리자 역할 프로젝트 관리자 영향력의 영역 프로젝트 관리자 역량 통합 수행 프로젝트 통합 관리 프로젝트 헌장 개발 프로젝트의 시작과 프로젝트 수행을 위한 조직자원을 적용하기 위하여, 공식적인 권한을 프로젝트 관리자에게 제공하기 위한 문서를 개발하는 프로세스 프로젝트 헌장(Charter)은 프…","frontmatter":{"date":"May 25, 2021","title":"[작성중][PMP] PMP 해설서 요약","categories":"Certification","author":"TMM","emoji":null},"fields":{"slug":"/2021-05-24-certification-pmp/"}},"next":{"id":"8ac46fb8-1c8b-56fb-bd2c-fa7b5068fddc","html":"<p>spring-boot으로 서비스 중인 서버에 대량의 메시지 발송 API 연동이 필요하게 되었습니다. 그래서 RabbitMQ를 사용해 보기로 했습니다.\n<br />\n최종 목적은 spring-boot으로 메시지 큐에 등록 후 python daemon으로 처리되도록 하겠습니다.</p>\n<h2 id=\"install\" style=\"position:relative;\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>install</h2>\n<h3 id=\"window\" style=\"position:relative;\"><a href=\"#window\" aria-label=\"window permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>window</h3>\n<ol>\n<li>\n<p>설치</p>\n<ol>\n<li><a href=\"https://www.rabbitmq.com/install-windows.html\">https://www.rabbitmq.com/install-windows.html</a> 이동</li>\n<li>Direct Download 에 있는 링크를 클릭하여 다운로드</li>\n<li>저는 <em>rabbitmq-server-3.8.14.exe</em> 으로 받았습니다.</li>\n<li>다운받은 파일을 실행하면 <strong>Erlang could not be detected</strong> 라는 메시지가 나옵니다. PC에 Erlang을 설치해야 합니다. “예(Y)” 를 눌러줍니다.</li>\n<li>Erlang 다운로드 페이지에서 <em>OTP 23.1 windowns 64-bit Binary Fil</em>을 다운받아 설치합니다.</li>\n<li>다시 RabbitMQ Install File을 눌러 설치합니다.</li>\n</ol>\n</li>\n<li>\n<p>시스템 변수 확인</p>\n<ul>\n<li>ERLANG_HOME: :\\Program Files\\erl-23.3</li>\n</ul>\n</li>\n<li>\n<p>시스템 변수 등록</p>\n<ul>\n<li>환경 변수 등록 창의 사용자 변수 Path에 <em>C:\\Program Files\\RabbitMQ Server\\rabbitmq</em>server-3.8.14\\sbin_ 추가합니다.</li>\n</ul>\n</li>\n<li>\n<p>명령어</p>\n<ul>\n<li>상태 확인</li>\n<li><code class=\"language-text\">rabbitmqctl status</code></li>\n<li>Port 확인</li>\n<li><code class=\"language-text\">netstat -ano | findstr 5672</code></li>\n<li>플러그인 설치</li>\n<li><code class=\"language-text\">rabbitmq-plugins enable rabbitmq_management</code></li>\n<li>플러그인 설치 확인</li>\n<li><code class=\"language-text\">rabbitmq-plugins list</code></li>\n<li>사용자 추가</li>\n<li><code class=\"language-text\">rabbitmqctl add_user admin p@ssWord</code></li>\n<li>사용자 태그 설정</li>\n<li><code class=\"language-text\">rabbitmqctl set_user_tags admin administrator</code></li>\n<li>사용자 목록 확인</li>\n<li><code class=\"language-text\">rabbitmqctl list_users</code></li>\n<li>사용자 삭제</li>\n<li><code class=\"language-text\">rabbitmqctl delete_user rabbitmq</code></li>\n<li>사용자 권한 설정</li>\n<li><code class=\"language-text\">rabbitmqctl set_permissions [-p &lt;vhostpath>] &lt;user> &lt;conf> &lt;write> &lt;read></code></li>\n<li><code class=\"language-text\">rabbitmqctl set_permissions -p / \"admin\" \".*\" \".*\" \".*\"</code></li>\n<li>사용자 권한 목록 확인</li>\n<li><code class=\"language-text\">rabbitmqctl list_permissions</code></li>\n</ul>\n</li>\n<li>\n<p>관리 페이지 접속</p>\n<ul>\n<li><a href=\"http://localhost:15672/\">http://localhost:15672/</a></li>\n<li>admin/p@ssWord</li>\n</ul>\n</li>\n<li>\n<p>config 및 log 파일 위치</p>\n<ul>\n<li>C:\\Users&#x3C;사용자명>\\AppData\\Roaming\\RabbitMQ</li>\n</ul>\n</li>\n<li>\n<p>사용자 변수 등록 (confing 및 log 파일 위치 변경)</p>\n<ul>\n<li>RABBITMQ_BASE : D:\\dev\\application\\rabbitmq</li>\n</ul>\n</li>\n<li>\n<p>설치 후 에러 발생시</p>\n<ul>\n<li>서비스 삭제</li>\n<li><code class=\"language-text\">rabbitmq-service.bat remove</code></li>\n<li>서비스 생성</li>\n<li><code class=\"language-text\">rabbitmq-service.bat install</code></li>\n<li>실행</li>\n<li><code class=\"language-text\">rabbitmq-server.bat -detached</code></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"ubuntu-16\" style=\"position:relative;\"><a href=\"#ubuntu-16\" aria-label=\"ubuntu 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ubuntu 16</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ apt-key adv --keyserver <span class=\"token string\">\"hkps.pool.sks-keyservers.net\"</span> --recv-keys <span class=\"token string\">\"0x6B73A36E6026DFCA\"</span>\n<span class=\"token punctuation\">..</span>.\n\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/bintray.rabbitmq.list <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\ndeb &lt;https://dl.bintray.com/rabbitmq-erlang/debian> xenial erlang\ndeb &lt;https://dl.bintray.com/rabbitmq/debian> xenial main\nEOF</span>\n\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token punctuation\">..</span>.\n\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> rabbitmq-server\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n</li>\n<li>\n<p>서버 시작</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">service</span> rabbitmq-server start\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span> AUTHENTICATING FOR org.freedesktop.systemd1.manage-units <span class=\"token operator\">==</span><span class=\"token operator\">=</span>\nAuthentication is required to start <span class=\"token string\">'rabbitmq-server.service'</span><span class=\"token builtin class-name\">.</span>\nAuthenticating as: root\nPassword:\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n</li>\n<li>\n<p>플러그인 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> rabbitmq-plugins <span class=\"token builtin class-name\">enable</span> rabbitmq_management\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n</li>\n<li>\n<p>사용자 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> rabbitmqctl add_user admin password\n$ <span class=\"token function\">sudo</span> rabbitmqctl set_user_tags admin administrator\n$ <span class=\"token function\">sudo</span> rabbitmqctl set_permissions -p / <span class=\"token string\">\"admin\"</span> <span class=\"token string\">\".*\"</span> <span class=\"token string\">\".*\"</span> <span class=\"token string\">\".*\"</span>\n$ <span class=\"token function\">sudo</span> rabbitmqctl list_users\n$ <span class=\"token function\">sudo</span> rabbitmqctl list_permissions</code></pre></div>\n</li>\n<li>\n<p>관리 페이지 접속</p>\n<ul>\n<li><a href=\"http://localhost:15672/\">http://localhost:15672/</a></li>\n<li>admin/p@ssWord</li>\n</ul>\n</li>\n<li>\n<p>로그위치</p>\n<ul>\n<li>/var/log/rabbitmq</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"개념\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%85%90\" aria-label=\"개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개념</h2>\n<h3 id=\"rabbitmq란\" style=\"position:relative;\"><a href=\"#rabbitmq%EB%9E%80\" aria-label=\"rabbitmq란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RabbitMQ란</h3>\n<ul>\n<li>RabbitMQ 는 얼랭(Erlang)으로 AMQP를 구현한 메시지 브로커 시스템입니다.</li>\n</ul>\n<h3 id=\"ampq\" style=\"position:relative;\"><a href=\"#ampq\" aria-label=\"ampq permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AMPQ</h3>\n<ul>\n<li>클라이언트가 메시지 미들웨어 브로커와 통신할 수 있게 해주는 메세징 프로토콜입니다.</li>\n<li>Producers -> Broker [Exchange -> Binding -> Queue] -> Consumers</li>\n<li>메시지를 발행하는 Producer에서 Broker의 Exchange로 메시지를 전달하면, Binding 이라는 규칙에 의해 연결된 Queue로 메시지가 참조 복사됩니다.</li>\n<li>메시지를 받아가는 Consumer에서는 브로커의 Queue를 통해 메시지를 받아가서 처리합니다.</li>\n</ul>\n<h2 id=\"예제-소스\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%86%8C%EC%8A%A4\" aria-label=\"예제 소스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 소스</h2>\n<h3 id=\"spring-boot\" style=\"position:relative;\"><a href=\"#spring-boot\" aria-label=\"spring boot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring-boot</h3>\n<h4 id=\"producer\" style=\"position:relative;\"><a href=\"#producer\" aria-label=\"producer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Producer</h4>\n<ol>\n<li>\n<p>pom.xml</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-amqp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.amqp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-rabbit-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n...</code></pre></div>\n</li>\n<li>\n<p>application.yml</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span>\n   <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> localhost\n   <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> admin\n   <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> p@ssWord</code></pre></div>\n</li>\n<li>\n<p>Sender.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RabbitMessagingTemplate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Sender</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token annotation punctuation\">@Autowired</span>\n   <span class=\"token class-name\">RabbitMessagingTemplate</span> template<span class=\"token punctuation\">;</span>\n\n   <span class=\"token annotation punctuation\">@Bean</span>\n   <span class=\"token class-name\">Queue</span> <span class=\"token function\">queue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello_queue\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       template<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello_queue\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>Controller.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n   <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/send\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sendNaverworks</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">MsgDTO</span> userDomain<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n           sender<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>userDomain<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token keyword\">return</span> <span class=\"token string\">\"success\"</span>\n       <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n           <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token keyword\">return</span> <span class=\"token string\">\"fail\"</span>\n       <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n</ol>\n<h3 id=\"python-36\" style=\"position:relative;\"><a href=\"#python-36\" aria-label=\"python 36 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python 3.6</h3>\n<h4 id=\"consumer\" style=\"position:relative;\"><a href=\"#consumer\" aria-label=\"consumer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>consumer</h4>\n<ol>\n<li>\n<p>single<em>process</em>consumer.py</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token keyword\">import</span> pika\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> json\n\nconnection <span class=\"token operator\">=</span> pika<span class=\"token punctuation\">.</span>BlockingConnection<span class=\"token punctuation\">(</span>\n   pika<span class=\"token punctuation\">.</span>ConnectionParameters<span class=\"token punctuation\">(</span>\n       host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n       port<span class=\"token operator\">=</span><span class=\"token number\">5672</span><span class=\"token punctuation\">,</span>\n       virtual_host<span class=\"token operator\">=</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n       credentials<span class=\"token operator\">=</span>pika<span class=\"token punctuation\">.</span>PlainCredentials<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'p@ssWord'</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\nchannel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nchannel<span class=\"token punctuation\">.</span>queue_declare<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">,</span> durable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">' [*] Waiting for messages. To exit press CTRL+C'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> properties<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [x] Received %r\"</span> <span class=\"token operator\">%</span> body<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   d <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [x] Done {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">[</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   ch<span class=\"token punctuation\">.</span>basic_ack<span class=\"token punctuation\">(</span>delivery_tag<span class=\"token operator\">=</span>method<span class=\"token punctuation\">.</span>delivery_tag<span class=\"token punctuation\">)</span>\n\n\nchannel<span class=\"token punctuation\">.</span>basic_qos<span class=\"token punctuation\">(</span>prefetch_count<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nchannel<span class=\"token punctuation\">.</span>basic_consume<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">,</span> on_message_callback<span class=\"token operator\">=</span>callback<span class=\"token punctuation\">)</span>\n\nchannel<span class=\"token punctuation\">.</span>start_consuming<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>multi<em>process</em>consumer.py</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> logging\n<span class=\"token keyword\">import</span> logging<span class=\"token punctuation\">.</span>handlers\n<span class=\"token keyword\">import</span> multiprocessing\n<span class=\"token keyword\">from</span> threading <span class=\"token keyword\">import</span> Thread\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> choice<span class=\"token punctuation\">,</span> random\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> platform\n<span class=\"token keyword\">import</span> pika\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> requests\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       self<span class=\"token punctuation\">.</span>th <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">get_logger</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       <span class=\"token keyword\">return</span> logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">listener_start</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> file_path<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       self<span class=\"token punctuation\">.</span>th <span class=\"token operator\">=</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>_proc_log_queue<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n       self<span class=\"token punctuation\">.</span>th<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">listener_end</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       queue<span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n       self<span class=\"token punctuation\">.</span>th<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'log listener end...'</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">_proc_log_queue</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> file_path<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       self<span class=\"token punctuation\">.</span>config_log<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n       logger <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_logger<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n           <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n               record <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n               <span class=\"token keyword\">if</span> record <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                   <span class=\"token keyword\">break</span>\n               logger<span class=\"token punctuation\">.</span>handle<span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span>\n           <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span>\n               <span class=\"token keyword\">import</span> sys<span class=\"token punctuation\">,</span> traceback\n               <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'listener problem'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token operator\">=</span>sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">)</span>\n               traceback<span class=\"token punctuation\">.</span>print_exc<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token operator\">=</span>sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">config_queue_log</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       qh <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>handlers<span class=\"token punctuation\">.</span>QueueHandler<span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span>\n       logger <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>qh<span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">return</span> logger\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">config_log</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> file_path<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       formatter <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>Formatter<span class=\"token punctuation\">(</span><span class=\"token string\">'[%(asctime)s] [%(pathname)s:%(lineno)d] [%(processName)s] %(levelname)s - %(message)s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%Y-%m-%d %H:%M:%S'</span><span class=\"token punctuation\">)</span>\n\n       <span class=\"token comment\"># err file handler</span>\n       fileHander_error <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>handlers<span class=\"token punctuation\">.</span>TimedRotatingFileHandler<span class=\"token punctuation\">(</span>filename<span class=\"token operator\">=</span>file_path <span class=\"token operator\">+</span> <span class=\"token string\">'/consumer.error.log'</span><span class=\"token punctuation\">,</span> when<span class=\"token operator\">=</span><span class=\"token string\">'midnight'</span><span class=\"token punctuation\">,</span> interval<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n       fileHander_error<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>WARNING<span class=\"token punctuation\">)</span>\n       <span class=\"token comment\"># file handler</span>\n       fileHander_debug <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>handlers<span class=\"token punctuation\">.</span>TimedRotatingFileHandler<span class=\"token punctuation\">(</span>filename<span class=\"token operator\">=</span>file_path <span class=\"token operator\">+</span> <span class=\"token string\">'/consumer.debug.log'</span><span class=\"token punctuation\">,</span> when<span class=\"token operator\">=</span><span class=\"token string\">'midnight'</span><span class=\"token punctuation\">,</span> interval<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n       fileHander_debug<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\n       <span class=\"token comment\"># console handler</span>\n       streamHander_info <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>StreamHandler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n       streamHander_info<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">)</span>\n       <span class=\"token comment\"># logging format setting</span>\n       fileHander_error<span class=\"token punctuation\">.</span>setFormatter<span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">)</span>\n       fileHander_error<span class=\"token punctuation\">.</span>suffix <span class=\"token operator\">=</span> <span class=\"token string\">'%Y-%m-%d'</span>\n       fileHander_debug<span class=\"token punctuation\">.</span>setFormatter<span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">)</span>\n       fileHander_debug<span class=\"token punctuation\">.</span>suffix <span class=\"token operator\">=</span> <span class=\"token string\">'%Y-%m-%d'</span>\n       streamHander_info<span class=\"token punctuation\">.</span>setFormatter<span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">if</span> platform<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'Windows'</span><span class=\"token punctuation\">:</span>\n           <span class=\"token keyword\">import</span> msvcrt\n           <span class=\"token keyword\">import</span> win32api\n           <span class=\"token keyword\">import</span> win32con\n           win32api<span class=\"token punctuation\">.</span>SetHandleInformation<span class=\"token punctuation\">(</span>msvcrt<span class=\"token punctuation\">.</span>get_osfhandle<span class=\"token punctuation\">(</span>fileHander_debug<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                       win32con<span class=\"token punctuation\">.</span>HANDLE_FLAG_INHERIT<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n           win32api<span class=\"token punctuation\">.</span>SetHandleInformation<span class=\"token punctuation\">(</span>msvcrt<span class=\"token punctuation\">.</span>get_osfhandle<span class=\"token punctuation\">(</span>fileHander_error<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                       win32con<span class=\"token punctuation\">.</span>HANDLE_FLAG_INHERIT<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n       <span class=\"token comment\"># create logger, assign handler</span>\n       logger <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>fileHander_error<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>fileHander_debug<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>streamHander_info<span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">return</span> logger\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> properties<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">,</span> logger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n   logger<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n       d <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n       <span class=\"token comment\"># print(\" [x] to {}\".format(d['to']))</span>\n       <span class=\"token comment\"># print(\" [x] from {}\".format(d['from']))</span>\n       <span class=\"token comment\"># print(\" [x] content {}\".format(d['content']))</span>\n\n       logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'{} - {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'headers [{}] - {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n       <span class=\"token keyword\">if</span> response<span class=\"token punctuation\">.</span>status_code <span class=\"token operator\">!=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span>\n           logger<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>ERROR<span class=\"token punctuation\">,</span> <span class=\"token string\">'{} - {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n       logger<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>ERROR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%r caught exception %r\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>multiprocessing<span class=\"token punctuation\">.</span>current_process<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n   ch<span class=\"token punctuation\">.</span>basic_ack<span class=\"token punctuation\">(</span>delivery_tag<span class=\"token operator\">=</span>method<span class=\"token punctuation\">.</span>delivery_tag<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">consume</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n   name <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span>current_process<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name\n   logger <span class=\"token operator\">=</span> Log<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>config_queue_log<span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">,</span> <span class=\"token string\">'mp'</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Worker started: %s'</span> <span class=\"token operator\">%</span> name<span class=\"token punctuation\">)</span>\n\n   connection <span class=\"token operator\">=</span> pika<span class=\"token punctuation\">.</span>BlockingConnection<span class=\"token punctuation\">(</span>\n       pika<span class=\"token punctuation\">.</span>ConnectionParameters<span class=\"token punctuation\">(</span>\n           host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n           port<span class=\"token operator\">=</span><span class=\"token number\">5672</span><span class=\"token punctuation\">,</span>\n           virtual_host<span class=\"token operator\">=</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n           credentials<span class=\"token operator\">=</span>pika<span class=\"token punctuation\">.</span>PlainCredentials<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'p@ssWord'</span><span class=\"token punctuation\">)</span>\n       <span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">)</span>\n   channel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   channel<span class=\"token punctuation\">.</span>queue_declare<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">)</span>\n\n   channel<span class=\"token punctuation\">.</span>basic_qos<span class=\"token punctuation\">(</span>prefetch_count<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n   channel<span class=\"token punctuation\">.</span>basic_consume<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">,</span> on_message_callback<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> ch<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> properties<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">:</span> callback<span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> properties<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">,</span> logger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token comment\"># print (' [*] Waiting for messages. To exit press CTRL+C')</span>\n   channel<span class=\"token punctuation\">.</span>start_consuming<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Worker finished: %s'</span> <span class=\"token operator\">%</span> name<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   queue <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span>Queue<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n   listener <span class=\"token operator\">=</span> Log<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   listener<span class=\"token punctuation\">.</span>listener_start<span class=\"token punctuation\">(</span><span class=\"token string\">'/logs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'listener'</span><span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># log consumer thread start</span>\n\n   workers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n   <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># multiprocess loop</span>\n       w <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span>Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>consume<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n       workers<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n       w<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> workers<span class=\"token punctuation\">:</span>\n       w<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n   listener<span class=\"token punctuation\">.</span>listener_end<span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># log consumer thread end</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n   main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ol>\n<h4 id=\"producer-테스트용\" style=\"position:relative;\"><a href=\"#producer-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9A%A9\" aria-label=\"producer 테스트용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Producer (테스트용)</h4>\n<ol>\n<li>\n<p>producer.py</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token keyword\">import</span> pika\n<span class=\"token keyword\">import</span> sys\n\nconnection <span class=\"token operator\">=</span> pika<span class=\"token punctuation\">.</span>BlockingConnection<span class=\"token punctuation\">(</span>\n   pika<span class=\"token punctuation\">.</span>ConnectionParameters<span class=\"token punctuation\">(</span>\n       host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n       port<span class=\"token operator\">=</span><span class=\"token number\">5672</span><span class=\"token punctuation\">,</span>\n       virtual_host<span class=\"token operator\">=</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n       credentials<span class=\"token operator\">=</span>pika<span class=\"token punctuation\">.</span>PlainCredentials<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'p@ssWord'</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\nchannel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nchannel<span class=\"token punctuation\">.</span>queue_declare<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">,</span> durable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\nmessage <span class=\"token operator\">=</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token string\">'{\"from\":123, \"to\": \"email\", \"content\": \"aaa\\\\nbbb\\\\nccc\"}'</span>\nchannel<span class=\"token punctuation\">.</span>basic_publish<span class=\"token punctuation\">(</span>\n   exchange<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n   routing_key<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">,</span>\n   body<span class=\"token operator\">=</span>message<span class=\"token punctuation\">,</span>\n   properties<span class=\"token operator\">=</span>pika<span class=\"token punctuation\">.</span>BasicProperties<span class=\"token punctuation\">(</span>\n       delivery_mode<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># make message persistent</span>\n   <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [x] Sent %r\"</span> <span class=\"token operator\">%</span> message<span class=\"token punctuation\">)</span>\nconnection<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ol>\n<h2 id=\"systemd-등록\" style=\"position:relative;\"><a href=\"#systemd-%EB%93%B1%EB%A1%9D\" aria-label=\"systemd 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>systemd 등록</h2>\n<h3 id=\"service-file-생성\" style=\"position:relative;\"><a href=\"#service-file-%EC%83%9D%EC%84%B1\" aria-label=\"service file 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>service file 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/systemd/system/<span class=\"token operator\">&lt;</span>project_name<span class=\"token operator\">></span>.consumer.service\n\n<span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>project_name<span class=\"token operator\">></span> consumer\n<span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target\n\n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">User</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>user_name<span class=\"token operator\">></span>\n<span class=\"token assign-left variable\">Group</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>user_name<span class=\"token operator\">></span>\n<span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/usr/bin/python3 /home/<span class=\"token operator\">&lt;</span>user_name<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>project_name<span class=\"token operator\">></span>/consumer/multi_process_consumer.py\n<span class=\"token assign-left variable\">Environment</span><span class=\"token operator\">=</span>PYTHONUNBUFFERED<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n\n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</code></pre></div>\n<h3 id=\"systemd-명령어\" style=\"position:relative;\"><a href=\"#systemd-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"systemd 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>systemd 명령어</h3>\n<ul>\n<li>\n<p>수정 반영</p>\n<ul>\n<li><code class=\"language-text\">sudo systemctl daemon-reload</code></li>\n</ul>\n</li>\n<li>\n<p>시작</p>\n<ul>\n<li><code class=\"language-text\">sudo systemctl start &lt;project_name>.consumer.service</code></li>\n</ul>\n</li>\n<li>\n<p>상태</p>\n<ul>\n<li><code class=\"language-text\">sudo systemctl status &lt;project_name>.consumer.service</code></li>\n</ul>\n</li>\n<li>\n<p>정지</p>\n<ul>\n<li><code class=\"language-text\">sudo systemctl stop &lt;project_name>.consumer.service</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"참고-사이트\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-label=\"참고 사이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 사이트</h2>\n<ul>\n<li><a href=\"https://www.rabbitmq.com/\">https://www.rabbitmq.com/</a></li>\n<li><a href=\"https://jonnung.dev/rabbitmq/2019/02/06/about-amqp-implementtation-of-rabbitmq/\">https://jonnung.dev/rabbitmq/2019/02/06/about-amqp-implementtation-of-rabbitmq/</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#install\">install</a></p>\n<ul>\n<li><a href=\"#window\">window</a></li>\n<li><a href=\"#ubuntu-16\">Ubuntu 16</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B0%9C%EB%85%90\">개념</a></p>\n<ul>\n<li><a href=\"#rabbitmq%EB%9E%80\">RabbitMQ란</a></li>\n<li><a href=\"#ampq\">AMPQ</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%98%88%EC%A0%9C-%EC%86%8C%EC%8A%A4\">예제 소스</a></p>\n<ul>\n<li>\n<p><a href=\"#spring-boot\">Spring-boot</a></p>\n<ul>\n<li><a href=\"#producer\">Producer</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#python-36\">Python 3.6</a></p>\n<ul>\n<li><a href=\"#consumer\">consumer</a></li>\n<li><a href=\"#producer-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9A%A9\">Producer (테스트용)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#systemd-%EB%93%B1%EB%A1%9D\">systemd 등록</a></p>\n<ul>\n<li><a href=\"#service-file-%EC%83%9D%EC%84%B1\">service file 생성</a></li>\n<li><a href=\"#systemd-%EB%AA%85%EB%A0%B9%EC%96%B4\">systemd 명령어</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%82%AC%EC%9D%B4%ED%8A%B8\">참고 사이트</a></li>\n</ul>\n</div>","frontmatter":{"date":"March 25, 2021","title":"[RabbitMQ] Install RabbitMQ on windows and linux","categories":"Message Queue","author":"TMM","emoji":null},"fields":{"slug":"/2021-03-25-messagequeue-rabbitmq-springboot/"}},"prev":{"id":"fe260168-beb9-5d77-9505-83d50f600b4d","html":"<p><em>프랙티스 없이 빈약한 원리는 빈 껍데기와 같고, 원리를 이해하지 못하고 수행하는 프랙티스는 판단 없는 암기에 불과하다</em>\n<br />\n애자일이 좋은건 아는데 설명하려면 머리가 복잡해집니다. 그래서 크게 <strong>사상</strong>, <strong>계획</strong>, <strong>실행</strong>, <strong>효과</strong> 로 나누어 정리하고 대상과 상황에 따라 전달하려고 합니다</p>\n<h2 id=\"사상\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%83%81\" aria-label=\"사상 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사상</h2>\n<h3 id=\"선언문\" style=\"position:relative;\"><a href=\"#%EC%84%A0%EC%96%B8%EB%AC%B8\" aria-label=\"선언문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>선언문</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">우리는 소프트웨어를 개발하는 더 나은 방법을 찾는 과정에서 다음과 같이 생각했다.\n1. 프로세스와 도구보다는 개인과 개인 간의 상호작용에 더 큰 가치를 둔다.\n2. 포괄적 문서화보다는 동작하는 소프트웨어에 더 큰 가치를 둔다.\n3. 계약 협상보다는 고객과 협력에 더 큰 가치를 둔다.\n4. 계획을 따르기보다는 변화에 대응하는 것에 더 큰 가치를 둔다.</code></pre></div>\n<h3 id=\"애자일-소프트웨어의-개발-원칙-열두-가지\" style=\"position:relative;\"><a href=\"#%EC%95%A0%EC%9E%90%EC%9D%BC-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EC%9D%98-%EA%B0%9C%EB%B0%9C-%EC%9B%90%EC%B9%99-%EC%97%B4%EB%91%90-%EA%B0%80%EC%A7%80\" aria-label=\"애자일 소프트웨어의 개발 원칙 열두 가지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애자일 소프트웨어의 개발 원칙 열두 가지</h3>\n<p>애자일 소프트웨어 개발 선언문의 문장 4개에 기술된 애자일 개발 철학을 실제 제품 개발에 적용하려면 좀 더 구체적인 지침이 필요하다. 다음 열두 가지 원칙은 애자일 소프트웨어 개발 선언문에 있는 내용으로 애자일 개발을 실무에 적용할 때 기준이 되는 지침이라고 할 수 있다.</p>\n<ol>\n<li>\n<p>소프트웨어 개발을 수행하는 최우선 목표는 빠르고 지속적으로 가치 있는 소프트웨어를 전달하여 고객을 만족시키는 것이다</p>\n<ul>\n<li>프로젝트 고객 요구사항에는 여러 개의 업무 시스템이 개발에 포함될 수 있으며, 고객은 이 중 일부를 현업에 먼저 활요하고 싶을 수도 있다. 폭포수 개발 방식은 이런 요구사항을 한꺼번에 모아서 개발하기에 고객은 원하는 시스템을 빨리 전달받기가 어렵다. 점진적, 반복적으로 개발하면서 고객에게 지속적으로 가치를 주는 개발 방식이 고객을 훨씬 만족 시킬 수 있다.</li>\n</ul>\n</li>\n<li>애자일 프로세스는 고객의 경쟁력을 위해서라면 비록 개발 후반일지라도 요구사항의 변경을 환영한다</li>\n<li>\n<p>동작하는 소프트웨어를 2주일에서 2개월까지 짧은 간격으로 자주 전달하라</p>\n<ul>\n<li>요구사항을 문장이나 표, 그래프 등 다양한 문서 형태로 작성하여 고객과 소통하는 데는 한계가 있다. 그동안 소프트웨어 공학에서 요구사항을 분석하는 방법을 다양하게 연구해 왔지만 고객에게 직접 보여 주는 것만큼 확실한 방법은 없다. 어떤 식으로든 고객에게 자주 피드백을 받으면 좋다. 개발팀은 피드백으로 기능을 완성하고 고객은 피드백 과정을 거치면서 제품에 신뢰를 갖게 된다.</li>\n</ul>\n</li>\n<li>요구사항을 내는 고객과 개발자는 전체 프로젝트에서 매일 함께 일해야 한다</li>\n<li>동기가 부여된 개인들 중심으로 프로젝트를 구성하고, 그들에게 필요한 환경과 지원을 제공하고, 일을 잘 끝낼 수 있도록 신뢰하라</li>\n<li>개발팀 내부에서 정보를 전하는 가장 효율적인 방법은 서로가 얼굴을 마주 보면서 대화하는 것이다</li>\n<li>작동하는 소프트웨어는 진척의 주된 척도다</li>\n<li>애자일 프로세스는 지속 가능한 개발을 장려하며 스폰서, 개발자, 사용자는 일정한 개발 속도를 유지해야 한다</li>\n<li>기술적 탁월성과 좋은 설게에 갖는 지속적 관심이 민첩성을 높인다</li>\n<li>간단함, 즉 하지 않은 일의 양을 최대화하는 기술이 필수적이다\n전통적 개발 방식에서는 업무를 완벽하게 분석하고 설계할 것을 권장하다 보니 어떤 프로젝트에서는 초기 분석 · 설계 산출물의 50~60% 이상을 변경하기도 한다. 과도한 분석 · 설계는 바람직하지 않으며 해당 요구사항이 분명하고 명확할 때 개발에 착수하는 것이 효과적이다.</li>\n<li>\n<p>최고의 아키텍처, 요구사항, 설계는 자기 조직화된 팀에서 창발한다</p>\n<ul>\n<li>자기 조직화된 팀이란 복잡계 이론에서 파생된 용어다. 구성원이 누군가의 지시가 없어도 자기 주도적으로 업무를 수행하고 유기적으로 협력하는 팀을 의미한다.</li>\n</ul>\n</li>\n<li>정기적으로 어떤 방법이 팀에 더 효과적일지 숙고하며 이에 따라 팀의 행동을 조율하고 조정한다</li>\n</ol>\n<h2 id=\"계획\" style=\"position:relative;\"><a href=\"#%EA%B3%84%ED%9A%8D\" aria-label=\"계획 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계획</h2>\n<h3 id=\"애자일-개발의-생명주기\" style=\"position:relative;\"><a href=\"#%EC%95%A0%EC%9E%90%EC%9D%BC-%EA%B0%9C%EB%B0%9C%EC%9D%98-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0\" aria-label=\"애자일 개발의 생명주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애자일 개발의 생명주기</h3>\n<ul>\n<li>애자일 개발은 점진적 개발의 장점을 살리면서 요구사항의 변화를 주기적으로 수용하는 반복적 개발이라고 할 수 있는데 <strong>기존 점진적 개발과는 몇 가지 차이</strong>가 있다.</li>\n<li>첫째, 점진적 개발에서는 요구사항을 빌드별로 미리 할당해서 개발하지만 애자일 개발에서는 스프린트 단위로 요구사항의 변화를 수용하면서 개발한다. 즉 <strong>스프린트를 계획할 때 기존에 계획한 요구사항과 전 스프린트에서 나온 변경사항을 비교하고, 구성원 간의 검토를 거쳐서 우선순위화하여 반영한다</strong>. 전통적 개발 방식에서는 프로젝트 중간에 요구사항을 변경하면 변경 영향을 평가하여 프로젝트에 반영할지 여부를 판단하지만 애자일 개발에서는 중간에 요구사항을 변경해도 다음 스프린트에 언제든지 반영할 수 있다. 이렇게 변경되는 요구사항을 스프린트 단위로 반영하다 보면 <strong>결과적으로 우선순위가 떨어지는 기능들은 해당 프로젝트에 반영되지 못하게 된다</strong>.</li>\n<li>둘째, 점진적 개발에서는 하나의 빌드 안에서 미니 폭포수 개발 형태로 진행하지만 애자일 개발에서는 스프린트에서 폭포수 방식으로 개발하지 않는다. 즉, 스프린트 안에서 분석, 설계, 구현, 테스트 같은 공정은 발생하나, 공식적으로 산출물을 만들고 다음 단계로 넘어가는 형태가 아니라는 말이다. 그보다는 동시공항적으로 접근하여 어떻게 <strong>중간 산출물을 최소화하면서 품질 높은 제품을 만들 수 있는지에 초점을 맞춘다</strong>. 고객에게 가치 있는 것은 동작하는 시스템이지 중간 산출물이 아니기 때문이다.</li>\n<li>셋째, 점진적 개발에서 빌드 주기는 개발 범위에 따라 주기가 불규칙하지만 <strong>애자일 개발에서는 특별한 경우가 아니면 개발 주기가 규칙적이다. 애자일 개발에서는 이를 타임 박싱이라고 표현한다</strong>. 점진적 개발에서는 개발 범위에 따라 빌드 주기가 1개월 또는 2개월 등 기간이 달라진다. 하지만 애자일 개발에서는 개발 범위와 상관없이 스프린트 기간(2~4주일)이 규칙적이다. 타임 박싱은 프로젝트에 규칙적인 리듬감을 주어 업무를 예측하는데 도움을 줄 수 있다.</li>\n</ul>\n<h3 id=\"이해관계자-식별\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%ED%95%B4%EA%B4%80%EA%B3%84%EC%9E%90-%EC%8B%9D%EB%B3%84\" aria-label=\"이해관계자 식별 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이해관계자 식별</h3>\n<ul>\n<li>\n<p>전통적인 개발 방법과 마찬가지로 애자일 또한 이해관계자 식별, 관리가 중요하다. 다만 전동적인 개발 방법의 이해관계자는 다양하게 분류하여 관리하고 긍부정 수치를 적용, 일정 수준 이상의 만족을 주기위해 계획하고 관리하는 대상이였다면 애자일에서는 사용자와 이해관계자를 대표하여 해당 업무 요구사항을 책임지고 의사결정할수 있는 대표를 이해관계자로 정하고 제품 책임자 또는 PO(Product Owner)라고 한다. 제품 책임자는 보통 다음 역할을 수행한다.</p>\n<ul>\n<li>제품을 사용할 고객과 사용자의 니즈를 수렴하여 최종 요구사항을 결정</li>\n<li>업계의 동향, 경쟁사의 움직임, 새로운 아이디어 등을 지속적으로 관찰하여 제품에 반영</li>\n<li>각종 계획과 리뷰 미팅에 참석하여 개발팀에 피드백 제공</li>\n<li>주기적으로 요구사항의 우선순위를 갱신하고 제품 테스트 수행</li>\n<li>제품의 완료 조건을 작성하고 최종 제품 인수</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"요구사항-도출\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EB%8F%84%EC%B6%9C\" aria-label=\"요구사항 도출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요구사항 도출</h3>\n<ul>\n<li>애자일 개발에서 요구사항을 도출하는 방법은 전통적 방법과 크게 다르지 않으나 두가지 면에서 차이가 있다</li>\n<li>첫째, 요구사항 도출 과정을 프로젝트 초기에만 국한하지 않고 주기적으로 고객의 패드백을 받아 요구사항을 정제하는 과정을 거친다.</li>\n<li>요구사항을 도출할 때 고객과 다양한 개발팀워이 함께 참여함으로써 고객이 인지하지 못하는 문제를 도출하는 데 좀 더 많은 시간을 할애한다.</li>\n<li>\n<p>린 스타트업: 린 스타트업은 최소한의 요건만 갖춘 제품을 신속하게 개발하여 시장에 출시한다. 즉, 초기 투자의 낭비를 줄이고 고객의 피드백을 받아 제품을 개선해 나가는 방식으로 개발한다.</p>\n<ul>\n<li>요구사항 도출 -> <code class=\"language-text\">최소 요건 제품 출시</code> -> 고객 반응 확인 -> 요구사항 도출 및 정제 -> <code class=\"language-text\">제품 출시</code> -> 고객 반응 확인 -> 요구사항 도출 및 정제 -> <code class=\"language-text\">제품 출시</code> - 고객 반응 확인 …</li>\n</ul>\n</li>\n<li>\n<p>디자인 씽킹: 요구사항을 도출할 때 ‘공감’ 이라는 활동을 추가하여 사용자와 고객의 본질적인 문제를 파악하는 데 더욱 중점을 둔다. 공감 활동은 관찰이나 체험, 인터뷰로 진행되지만 기존 방법과는 다르게 고객의 상황을 깊이 이해하고 유대감을 갖는 상태를 말한다. 고객의 상황을 깊이 있게 이해해야 고객에게 진정으로 필요한 문제를 찾을 수 있기 때문이다.</p>\n<ol>\n<li>공감: 사용자를 경청, 관찰하여 공감 형성</li>\n<li>문제 정의: 통찰로 사용자의 문제나 니즈 정의</li>\n<li>아이디어 도출: 문제를 해결하는 아이디어 도출</li>\n<li>프로토타입 만들기: 검증을 위한 간단한 프로토타입 작성</li>\n<li>사용자 검증: 고객에게 보여서 반응 확인</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"요구사항-정의와-제품-백로드\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EC%A0%95%EC%9D%98%EC%99%80-%EC%A0%9C%ED%92%88-%EB%B0%B1%EB%A1%9C%EB%93%9C\" aria-label=\"요구사항 정의와 제품 백로드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요구사항 정의와 제품 백로드</h3>\n<ul>\n<li>제품 백로그는 제품 개발에 필요한 모든 업무를 우선순위화한 목록이라고 정의할 수 있는데 요구사항 정의서와 작업 분류 체계 개념을 합쳐 놓은 형태다.</li>\n<li>제품 백로그에는 소프트웨어와 하드웨어 등 각 업무 파트에서 수행해야 할 요구 기능을 중심으로 기술하고, 해당 기능을 수행하는 세부 작업(상세 분석과 설계, 구현, 단위 테스트 등)은 포함하지 않는다(이런 작업들은 주기적으로 수행되는 스프린트 계획에서 도출된다.) 대신 프로젝트의 전체 요구사항을 구현하는 데 필요하거나 선행해야 하는 작업(프로젝트 관리와 지원, 요구 분석 등)은 기술한다.</li>\n</ul>\n<table>\n    <thead>\n        <tr>\n            <th>업무 구분</th>\n            <th>상위 기능</th>\n            <th>사용자 스토리</th>\n            <th>완료 조건</th>\n            <th>중요도</th>\n            <th>추정치\u001e</th>\n            <th>기술 스토리</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>인터넷 서점 V1.0</td>\n            <td>사용자 로그인</td>\n            <td>사용자는 회원 ID와 비밀번호를 입력하여 로그인 할 수 있다.</td>\n            <td>회원 ID와 비밀번호가 불일치할 때는 메시지를 표시하여 다시 입력하게 한다</td>\n            <td>30</td>\n            <td>5</td>\n            <td>\n                <li>mysql 사용</li>\n                <li>rsa 암호화 사용</li>\n                <li>기존 로그인 모듈 리팩토링</li>\n                <li>사용성 개선을 위해 sso 연동</li>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">-   사용자 스토리\n    -   백로그에서 제품 기능을 명사 형태가 아니라 문장 형태로 기술했는데 이런 기술 방식을 사용자 스토리라고 한다. 즉, 사용자 스토리는 제품 백로그에서 기능 요구사항을 기술할 때 사용하는 방식으로, 고객과 사용자에게 가치를 줄 수 있는 기능을 서술한 것이다.\n-   완료 조건\n    -   완료 조건은 사용자 스토리의 완성 여부를 객관적으로 확인할 수 있는 조건을 기술한 것으로, 구현 결과가 제품 책임자의 기대사항과 달라지는 것을 예방하는 효과가 있다. 고객과 아무리 많은 대화를 나누었어도 완료 조건이 명확하지 않으면 서로가 다른 생각을 할 수 있기 때문이다. 초기 제품 백로그에서는 개략적으로 기술하더라도 해당 스토리를 본격적으로 개발하는 스프린트 계획 미팅에서는 상세히 구체화해야 한다. 구체화한 완료 조건을 기반으로 상세 테스트 케이스를 작성할 수 있기 때문이다.\n-   중요도\n    -   제품 책임자가 생각하는 스토리의 중요도. 숫자가 클수록 더 중요하다. 책임자외 다른 사람은 이 항목을 편집할 수 없다.\n-   최초 추정치\n    -   이 스토리를 구현하는데 드는 노력에 대한 팀의 최초 추정치. 추정치의 단위는 스토리 점수이며 '이상적인 man-day'에 해당한다. 또한 이 추정치는 다른 스토리와 비교한 값이므로 상대적인 수치로 표시된다.\n-   기술 스토리\n    -   기술 스토리는 제품 백로그 항목 중의 하나로 사용자 스토리를 지원하는 기술적 · 관리적 업무를 서술할 때 사용한다. 형식은 따로 없지만 고객이 이해할 수 있는 수준으로 작성한다. 보통 다음과 같은 활동을 포함 할 수 있다.\n        -   요구 분석과 아키텍처, 도구 셋업 등 기술적인 활동\n        -   비기능 요구사항과 인프라 시스템 개선 활동\n        -   코드 리뷰, 리팩토링, 인스펙션 등 품질 개선 활동\n        -   버그 수정, 모듈 안정화, 사용성 개선 활동</code></pre></div>\n<h3 id=\"제품-백로그-작성-지침\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%92%88-%EB%B0%B1%EB%A1%9C%EA%B7%B8-%EC%9E%91%EC%84%B1-%EC%A7%80%EC%B9%A8\" aria-label=\"제품 백로그 작성 지침 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제품 백로그 작성 지침</h3>\n<ol>\n<li>\n<p>상호 독립적이어야 한다</p>\n<ul>\n<li>스토리 간에 의존성이 있으면 추정이나 우선순위를 선정할 때 문제가 될 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>변경이 가능해야 한다</p>\n<ul>\n<li>사용자 스토리는 요구사항 정의처럼 필수 구현사항을 기록한 것이 아니므로 개발 과정에서 얼마든지 변경이 가능해야 한다.</li>\n</ul>\n</li>\n<li>\n<p>사용자와 고객에게 가치가 있어야 한다</p>\n<ul>\n<li>고객이 이해할 수 있는 언어로 작성해야 한다. 개발팀만 아는 용어로 작성한 사용자 스토리는 고객이 이해하기 어렵다. 예를 들어 ‘공통 클래스를 이용하여 모든 에러를 처리하고 로그를 생성해야 한다’는 스토리에 어떤 가이가 있는지 사용자는 파악하기 어렵다. 이 때는 일관된 형태로 모든 에러 메시지를 확인할 수 있다’는 형태로 바꾸는 것이 좋다.</li>\n</ul>\n</li>\n<li>\n<p>추정이 가능해야 한다</p>\n<ul>\n<li>에픽이나 피처처럼 덩어리가 큰 요구사항은 추정이 어려울 수 있으므로 좀 더 분할해야 한다. 개발팀원의 경험이 부족하여 추정하기가 어렵다면 경험이 많은 다른 팀이나 외부 인력을 추정에 참여시키는 것이 좋다.</li>\n</ul>\n</li>\n<li>\n<p>크기가 적절해야 한다</p>\n<ul>\n<li>스프린트 기간 안에 완료할 수 있는 수준으로 쪼개거나 합하는 것이 좋다. 프로젝트 상황에 따라 다를 수 있지만 1~2주일 이내에 수행할 수 있는 크기로 나누는 것을 권장한다.</li>\n</ul>\n</li>\n<li>\n<p>테스트가 가능해야 한다</p>\n<ul>\n<li>스토리를 너무 개념적으로 기술하면 테스트 케이스를 작성할 수 없으므로 테스트가 가능한 수준으로 기술해야 한다. 예를 들어 ‘사용자는 도서를 쉽게 주문할 수 있어야 한다’는 스토리로 기술했을 때는 테스트가 곤란하다. 이때는 ‘단골 고객은 2분 이내에 원하는 책을 한 권 찾아서 주문을 완료할 수 있어야 한다’는 형태로 작성하는 것이 좋다.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"제품-백로그-vs-작업-분류-제계wbs\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%92%88-%EB%B0%B1%EB%A1%9C%EA%B7%B8-vs-%EC%9E%91%EC%97%85-%EB%B6%84%EB%A5%98-%EC%A0%9C%EA%B3%84wbs\" aria-label=\"제품 백로그 vs 작업 분류 제계wbs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제품 백로그 vs 작업 분류 제계(WBS)</h3>\n<h3 id=\"개발-규모-추정과-스토리-점수\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EA%B7%9C%EB%AA%A8-%EC%B6%94%EC%A0%95%EA%B3%BC-%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%A0%90%EC%88%98\" aria-label=\"개발 규모 추정과 스토리 점수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 규모 추정과 스토리 점수</h3>\n<h3 id=\"애자일-추정-기법과-플래닝-포커\" style=\"position:relative;\"><a href=\"#%EC%95%A0%EC%9E%90%EC%9D%BC-%EC%B6%94%EC%A0%95-%EA%B8%B0%EB%B2%95%EA%B3%BC-%ED%94%8C%EB%9E%98%EB%8B%9D-%ED%8F%AC%EC%BB%A4\" aria-label=\"애자일 추정 기법과 플래닝 포커 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애자일 추정 기법과 플래닝 포커</h3>\n<h3 id=\"가치-점수와-요구사항-우선순위\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%B9%98-%EC%A0%90%EC%88%98%EC%99%80-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\" aria-label=\"가치 점수와 요구사항 우선순위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가치 점수와 요구사항 우선순위</h3>\n<h3 id=\"요구사항-관리-전략\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5\" aria-label=\"요구사항 관리 전략 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요구사항 관리 전략</h3>\n<h3 id=\"릴리스-계획을-이용한-전체-일정-수립\" style=\"position:relative;\"><a href=\"#%EB%A6%B4%EB%A6%AC%EC%8A%A4-%EA%B3%84%ED%9A%8D%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%A0%84%EC%B2%B4-%EC%9D%BC%EC%A0%95-%EC%88%98%EB%A6%BD\" aria-label=\"릴리스 계획을 이용한 전체 일정 수립 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>릴리스 계획을 이용한 전체 일정 수립</h3>\n<h3 id=\"스프린트-계획을-이용한-단기-일정-수립\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A6%B0%ED%8A%B8-%EA%B3%84%ED%9A%8D%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%8B%A8%EA%B8%B0-%EC%9D%BC%EC%A0%95-%EC%88%98%EB%A6%BD\" aria-label=\"스프린트 계획을 이용한 단기 일정 수립 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프린트 계획을 이용한 단기 일정 수립</h3>\n<h3 id=\"프로젝트-계확-검토\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B3%84%ED%99%95-%EA%B2%80%ED%86%A0\" aria-label=\"프로젝트 계확 검토 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 계확 검토</h3>\n<h3 id=\"프로젝트-킥오프\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%ED%82%A5%EC%98%A4%ED%94%84\" aria-label=\"프로젝트 킥오프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 킥오프</h3>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%82%AC%EC%83%81\">사상</a></p>\n<ul>\n<li><a href=\"#%EC%84%A0%EC%96%B8%EB%AC%B8\">선언문</a></li>\n<li><a href=\"#%EC%95%A0%EC%9E%90%EC%9D%BC-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EC%9D%98-%EA%B0%9C%EB%B0%9C-%EC%9B%90%EC%B9%99-%EC%97%B4%EB%91%90-%EA%B0%80%EC%A7%80\">애자일 소프트웨어의 개발 원칙 열두 가지</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B3%84%ED%9A%8D\">계획</a></p>\n<ul>\n<li><a href=\"#%EC%95%A0%EC%9E%90%EC%9D%BC-%EA%B0%9C%EB%B0%9C%EC%9D%98-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0\">애자일 개발의 생명주기</a></li>\n<li><a href=\"#%EC%9D%B4%ED%95%B4%EA%B4%80%EA%B3%84%EC%9E%90-%EC%8B%9D%EB%B3%84\">이해관계자 식별</a></li>\n<li><a href=\"#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EB%8F%84%EC%B6%9C\">요구사항 도출</a></li>\n<li><a href=\"#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EC%A0%95%EC%9D%98%EC%99%80-%EC%A0%9C%ED%92%88-%EB%B0%B1%EB%A1%9C%EB%93%9C\">요구사항 정의와 제품 백로드</a></li>\n<li><a href=\"#%EC%A0%9C%ED%92%88-%EB%B0%B1%EB%A1%9C%EA%B7%B8-%EC%9E%91%EC%84%B1-%EC%A7%80%EC%B9%A8\">제품 백로그 작성 지침</a></li>\n<li><a href=\"#%EC%A0%9C%ED%92%88-%EB%B0%B1%EB%A1%9C%EA%B7%B8-vs-%EC%9E%91%EC%97%85-%EB%B6%84%EB%A5%98-%EC%A0%9C%EA%B3%84wbs\">제품 백로그 vs 작업 분류 제계(WBS)</a></li>\n<li><a href=\"#%EA%B0%9C%EB%B0%9C-%EA%B7%9C%EB%AA%A8-%EC%B6%94%EC%A0%95%EA%B3%BC-%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%A0%90%EC%88%98\">개발 규모 추정과 스토리 점수</a></li>\n<li><a href=\"#%EC%95%A0%EC%9E%90%EC%9D%BC-%EC%B6%94%EC%A0%95-%EA%B8%B0%EB%B2%95%EA%B3%BC-%ED%94%8C%EB%9E%98%EB%8B%9D-%ED%8F%AC%EC%BB%A4\">애자일 추정 기법과 플래닝 포커</a></li>\n<li><a href=\"#%EA%B0%80%EC%B9%98-%EC%A0%90%EC%88%98%EC%99%80-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\">가치 점수와 요구사항 우선순위</a></li>\n<li><a href=\"#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5\">요구사항 관리 전략</a></li>\n<li><a href=\"#%EB%A6%B4%EB%A6%AC%EC%8A%A4-%EA%B3%84%ED%9A%8D%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%A0%84%EC%B2%B4-%EC%9D%BC%EC%A0%95-%EC%88%98%EB%A6%BD\">릴리스 계획을 이용한 전체 일정 수립</a></li>\n<li><a href=\"#%EC%8A%A4%ED%94%84%EB%A6%B0%ED%8A%B8-%EA%B3%84%ED%9A%8D%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%8B%A8%EA%B8%B0-%EC%9D%BC%EC%A0%95-%EC%88%98%EB%A6%BD\">스프린트 계획을 이용한 단기 일정 수립</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B3%84%ED%99%95-%EA%B2%80%ED%86%A0\">프로젝트 계확 검토</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%ED%82%A5%EC%98%A4%ED%94%84\">프로젝트 킥오프</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 07, 2021","title":"[작성중][Agile] 애자일 & 스크럼 프로젝트 관리","categories":"Certification","author":"TMM","emoji":null},"fields":{"slug":"/2021-06-07-certification-amp/"}},"site":{"siteMetadata":{"siteUrl":"https://whitexozu.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/2021-05-24-certification-pmp/","nextSlug":"/2021-03-25-messagequeue-rabbitmq-springboot/","prevSlug":"/2021-06-07-certification-amp/"}},"staticQueryHashes":["1073350324","2938748437"]}