{"componentChunkName":"component---src-templates-blog-template-js","path":"/2020-02-26-language-java-lambda-stream/","result":{"data":{"cur":{"id":"e35ed2ff-6002-5ae0-862e-dca9c735e5d3","html":"<h3 id=\"정의\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%9D%98\" aria-label=\"정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정의</h3>\n<ul>\n<li>식별자 없이 실행 가능한 함수 표현식입니다.</li>\n<li>익명 클래스와 비슷합니다.</li>\n<li>자바로 함수형 프로그래밍 개발을 할 수 있습니다.</li>\n</ul>\n<h3 id=\"관련-지식\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A0%A8-%EC%A7%80%EC%8B%9D\" aria-label=\"관련 지식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관련 지식</h3>\n<ul>\n<li>함수형 인터페이스: 하나의 메소드만 선언되어 있는 인터페이스를 함수형 인터페이스라고 부릅니다.</li>\n<li>익명 클래스: 이름이 없는 객체입니다. 인터페이스를 구현하기 위해 해당 인터페이스를 구현한 클래스를 생성해야 하는데 일회성이고 재사용할 필요가 없다면 굳이 클래스 파일을 만들 필요가 없습니다.</li>\n</ul>\n<h3 id=\"기본-예제\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%98%88%EC%A0%9C\" aria-label=\"기본 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 예제</h3>\n<ul>\n<li>\n<p>Calculator.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">lambda</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@FunctionalInterface</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Calculator</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>BasicUsage.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">lambda</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BasicUsage</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">final</span> <span class=\"token class-name\">Calculator</span> cal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      cal<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"어노테이션\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\"어노테이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어노테이션</h3>\n<ul>\n<li>어노테이션 <code class=\"language-text\">@FunctionalInterface</code> 을 사용하면 이 인터페이스는 함수형 인터페이스이며 메소드가 두개 이상 만들면 문법 오류가 나게되어 이후에 수정을 방지할 수 있습니다.</li>\n</ul>\n<h3 id=\"lambda의-다양한-함수형-인터페이스\" style=\"position:relative;\"><a href=\"#lambda%EC%9D%98-%EB%8B%A4%EC%96%91%ED%95%9C-%ED%95%A8%EC%88%98%ED%98%95-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4\" aria-label=\"lambda의 다양한 함수형 인터페이스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lambda의 다양한 함수형 인터페이스</h3>\n<blockquote>\n<p><a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/package-summary.html\">https://docs.oracle.com/javase/8/docs/api/java/util/function/package-summary.html</a></p>\n</blockquote>\n<ul>\n<li>\n<p>LambdaTest.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">lambda</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>function<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Predicate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>function<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Consumer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LambdaTest</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/*\n      * Predicate\n      * 문자열을 받아서 해당 문자열이 빈 문자열인지를 반환\n      */</span>\n      <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">lambdaIsEqual</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>p<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n  * boolean Predicate&lt;T>\n  */</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">lambdaIsEqual</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> predicate<span class=\"token punctuation\">,</span><span class=\"token class-name\">T</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> predicate<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"stream-api\" style=\"position:relative;\"><a href=\"#stream-api\" aria-label=\"stream api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Stream API</h3>\n<ul>\n<li>Lambda 를 소개할때 <em>Stream API</em>는 필수인거 같습니다. <em>Stream API</em> 이란 컬렉션, 배열등의 저장 요소를 하나씩 참조하며 함수형 인터페이스(람다식)를 적용하며 반복적으로 처리할 수 있도록 해주는 기능입니다.</li>\n<li>\n<p>꼭 알아둘 사항입니다.</p>\n<ul>\n<li>Stream 은 재사용 불가</li>\n<li>병렬 스트림으로 멀티 쓰레드 사용이 가능</li>\n<li>중개 연산이 아닌 지연 연산 사용</li>\n</ul>\n</li>\n<li>\n<p>연산자 설명은 하기 링크로 대처하겠습니다. 너무 많아요.</p>\n<blockquote>\n<p><a href=\"https://jeong-pro.tistory.com/165\">https://jeong-pro.tistory.com/165</a></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"anonymous-class\" style=\"position:relative;\"><a href=\"#anonymous-class\" aria-label=\"anonymous class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>anonymous class</h3>\n<ul>\n<li>\n<p>AnonymousClassTest.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">anonymous</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AnonymousClassTest</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">Test</span> test <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n              <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\" GO! GO!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      test<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aaa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"참고-사이트\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-label=\"참고 사이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 사이트</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">lambda</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//coding<span class=\"token punctuation\">-</span>factory.tistory.com/265\n  https<span class=\"token punctuation\">:</span>//jdm.kr/blog/181\n  http<span class=\"token punctuation\">:</span>//tcpschool.com/java/java_lambda_concept\n  https<span class=\"token punctuation\">:</span>//coding<span class=\"token punctuation\">-</span>start.tistory.com/131\n\n<span class=\"token key atrule\">anonymous class</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//yulsfamily.tistory.com/112\n\n<span class=\"token key atrule\">stream</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//jeong<span class=\"token punctuation\">-</span>pro.tistory.com/165</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%A0%95%EC%9D%98\">정의</a></li>\n<li><a href=\"#%EA%B4%80%EB%A0%A8-%EC%A7%80%EC%8B%9D\">관련 지식</a></li>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%98%88%EC%A0%9C\">기본 예제</a></li>\n<li><a href=\"#%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\">어노테이션</a></li>\n<li><a href=\"#lambda%EC%9D%98-%EB%8B%A4%EC%96%91%ED%95%9C-%ED%95%A8%EC%88%98%ED%98%95-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4\">Lambda의 다양한 함수형 인터페이스</a></li>\n<li><a href=\"#stream-api\">Stream API</a></li>\n<li><a href=\"#anonymous-class\">anonymous class</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%82%AC%EC%9D%B4%ED%8A%B8\">참고 사이트</a></li>\n</ul>\n</div>","excerpt":"정의 식별자 없이 실행 가능한 함수 표현식입니다. 익명 클래스와 비슷합니다. 자바로 함수형 프로그래밍 개발을 할 수 있습니다. 관련 지식 함수형 인터페이스: 하나의 메소드만 선언되어 있는 인터페이스를 함수형 인터페이스라고 부릅니다. 익명 클래스: 이름이 없는 객체입니다. 인터페이스를 구현하기 위해 해당 인터페이스를 구현한 클래스를 생성해야 하는데 일회성이고 재사용할 필요가 없다면 굳이 클래스 파일을 만들 필요가 없습니다. 기본 예제 Calculator.java BasicUsage.java 어노테이션 어노테이션  을 사용하면 이 인터페이스는 함수형 인터페이스이며 메소드가 두개 이상 만들면 문법 오류가 나게되어 이후에 수정을 방지할 수 있습니다. Lambda의 다양한 함수형 인터페이스 https://docs.oracle.com/javase/8/docs/api/java/util/function/package-summary.html LambdaTest.java Stream API Lamb…","frontmatter":{"date":"February 26, 2020","title":"[JAVA] Lambda + Stream API ","categories":"Language","author":"TMM","emoji":null},"fields":{"slug":"/2020-02-26-language-java-lambda-stream/"}},"next":{"id":"30749887-67a5-5149-b332-306550276253","html":"<p>Tistory 에서 블로그 관리가 편하지 않네요. 미루고 미루던 일을 이제 해볼까 합니다. GitHub에 Jekyll과 minimal-mistakes 테마를 활용하여 블러그를 만들도록 하겠습니다.</p>\n<h2 id=\"os--app\" style=\"position:relative;\"><a href=\"#os--app\" aria-label=\"os  app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OS &#x26; App</h2>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">macOS Catalina 10.15.3\nRuby 2.6.3: 루비는 마츠모토 유키히로가 개발한 동적 객체 지향 스크립트 프로그래밍 언어입니다.\ngem 3.0.8: RubyGems는 Ruby 프로그램 및 라이브러리 배포를위한 표준 형식, gem 설치를 쉽게 관리하도록 설계된 도구 및 배포 용 서버를 제공하는 Ruby 프로그래밍 언어의 패키지 관리자입니다.\njekyll 4.0.0: Jekyll은 개인, 프로젝트 또는 조직 사이트를위한 간단한 블로그 인식 정적 사이트 생성기입니다.</code></pre></div>\n<h2 id=\"install\" style=\"position:relative;\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<ol>\n<li>\n<p>GitHub 에 Repository 생성 및 Clone</p>\n<ol>\n<li>github 에서 New Repository 클릭</li>\n<li>Repository name : [username].github.io</li>\n<li>Public 으로 생성</li>\n<li>git clone <a href=\"https://github.com/%5Busername%5D/%5Busername%5D.github.io.git\">https://github.com/[username]/[username].github.io.git</a></li>\n</ol>\n</li>\n<li>\n<p>Ruby Version Manager 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -sSL https://get.rvm.io <span class=\"token operator\">|</span> <span class=\"token function\">bash</span> -s stable --ruby</code></pre></div>\n</li>\n<li>Teminal 재실행</li>\n<li>\n<p>Ruby 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ rvm list\n<span class=\"token operator\">=</span> ruby-2.6.3 <span class=\"token punctuation\">[</span> x86_64 <span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># => - current</span>\n<span class=\"token comment\"># =* - current &amp;&amp; default</span>\n<span class=\"token comment\">#  * - default</span>\n\n$ rvm use <span class=\"token number\">2.6</span>.3 --default\n$ ruby -v\nruby <span class=\"token number\">2.6</span>.3p62 <span class=\"token punctuation\">(</span><span class=\"token number\">2019</span>-04-16 revision <span class=\"token number\">67580</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>x86_64-darwin19<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p>Jekyll 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ gem <span class=\"token function\">install</span> jekyll bundler\n$ jekyll -v\njekyll <span class=\"token number\">4.0</span>.0</code></pre></div>\n</li>\n<li>\n<p>Jekyll default site 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io.git\n$ jekyll new ./\n$ bundle\n$ bundle <span class=\"token builtin class-name\">exec</span> jekyll serve\n<span class=\"token punctuation\">..</span>.\nServer address: http://127.0.0.1:4000/\nServer running<span class=\"token punctuation\">..</span>. press ctrl-c to stop.\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n</li>\n<li>\n<p>GitHub 에 반영</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"first commit\"</span>\n$ <span class=\"token function\">git</span> push origin master</code></pre></div>\n</li>\n<li>\n<p>web site 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://[username].github.io/</code></pre></div>\n</li>\n</ol>\n<p><strong>Note:</strong><br />\n위의 내용으로 <code class=\"language-text\">GitHub [username].github.io</code> 에 반영하면 깔끔하게 잘 나옵니다.<br />\n그러나 이후 테마가 적용된 소스를 GitHub 에 커밋하면 404 페이지가 나옵니다.<br />\n원인은 불확실하나 처리 방법은 테마 적용후 Jekyll 서버를 기동하면 컴파일된 소스들이 <code class=\"language-text\">_site</code> 폴더에 생성되는데 생성된 파일을 <code class=\"language-text\">GitHub [username].github.io master</code> 에 올리면 정상적으로 페이지가 나옵니다.<br />\n그래서 소스 파일 관리는 <code class=\"language-text\">GitHub [username].github.source</code> Repository 에서, 배포는 <code class=\"language-text\">GitHub [username].github.io</code> Repository 에 하도록 하겠습니다.\n{: .notice—info}</p>\n<h2 id=\"apply-theme\" style=\"position:relative;\"><a href=\"#apply-theme\" aria-label=\"apply theme permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Apply theme</h2>\n<ol>\n<li>\n<p>GitHub 에 Repository 생성 및 Clone</p>\n<ol>\n<li>github 에서 New Repository 클릭</li>\n<li>Repository name : [username].github.source</li>\n<li>git clone <a href=\"https://github.com/%5Busername%5D/%5Busername%5D.github.source.git\">https://github.com/[username]/[username].github.source.git</a></li>\n</ol>\n</li>\n<li>\n<p>GitHub 에서 테마 다운로드</p>\n<ul>\n<li>Jekyll theme 중 가장 많이 다운받는 <a href=\"https://github.com/mmistakes/minimal-mistakes\">minimal-mistakes</a> 에서 압축파일을 다운받아 풀고 <strong>[username].github.source</strong> 폴더에 복사합니다.</li>\n</ul>\n</li>\n<li>\n<p>커스터마이징</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">_config.yml: 파일에는 테마 스킨, locale 선택, 블로그 정보, 사용자 정보, 검색 등의 정보를 설정 합니다.\n_data/navigation.yml: 네이게이션, 사이드바 정보를 설정 합니다.\n_posts: 블로그 게시글들 입니다.</code></pre></div>\n</li>\n<li>\n<p>중요 폴더 복사</p>\n<ul>\n<li><code class=\"language-text\">docs/_pages</code> 폴더를 최상위 폴더로 복사합니다. 그럼 게시글들을 year, categorise, tags 단위로 그룹지어서 볼수있습니다.</li>\n<li><code class=\"language-text\">docs/_posts</code> 에 글들을 참고하여 최상위 폴더인 <code class=\"language-text\">_posts</code> 에 파일을 생성합니다. 파일 생성시에는 규칙이 있으며 생성된 파일들이 블로그의 게시글들이 됩니다. 자세한 내용은 링크를 참고바랍니다. 설명할게 너무 많아요.</li>\n</ul>\n</li>\n<li>\n<p>불필요한 폴더 목록</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/docs\n/test</code></pre></div>\n</li>\n<li>\n<p>자동 배포</p>\n<ul>\n<li><code class=\"language-text\">[username].github.source</code> 의 <code class=\"language-text\">_site</code> 파일들을 <code class=\"language-text\">[username].github.io</code> 폴더로 복사후 GitHub 에 커밋까지 하려면 명령어를 조금 많이 입력해야 합니다. 귀찮습니다. 그래서 shell 파일을 만들려 합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.source\n\n$ bundle <span class=\"token builtin class-name\">exec</span> jekyll serve\nCtrl + c\n\n$ <span class=\"token function\">vi</span> publish.sh\n\n   <span class=\"token comment\">#!/bin/bash</span>\n\n   <span class=\"token function\">rm</span> -rf <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/*\n   <span class=\"token function\">cp</span> -r _site/* <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/\n   <span class=\"token function\">git</span> --git-dir <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/.git --work-tree<span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io status\n   <span class=\"token function\">git</span> --git-dir <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/.git --work-tree<span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n   <span class=\"token function\">git</span> --git-dir <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/.git --work-tree<span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io commit -m <span class=\"token string\">\"...\"</span>\n   <span class=\"token function\">git</span> --git-dir <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io/.git --work-tree<span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>.github.io push origin master\n\n$ <span class=\"token function\">chmod</span> <span class=\"token number\">755</span> publish.sh\n$ ./publish.sh</code></pre></div>\n</li>\n<li>\n<p>web site 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://[username].github.io/</code></pre></div>\n</li>\n</ol>\n<p><strong>Note:</strong><br />\n<code class=\"language-text\">git filter-branch --subdirectory-filter _site/ -f</code> 명령어로 하나의 Repository 에서 관리를 할 수 있다고하는데 저는 잘 적용되지 않았습니다.<br />\n혹시 이글을 보시는 분이 있다면 한번 도전해 보시기 바랍니다.<br />\n참고했던 링크는 <a href=\"https://rainsound-k.github.io/jekyll-blog/2018/05/02/apply-custom-plugin.html\">여기</a>입니다.\n{: .notice—info}</p>\n<blockquote>\n<p><a href=\"https://poiemaweb.com/jekyll-basics\">https://poiemaweb.com/jekyll-basics</a> > <a href=\"https://junhobaik.github.io/jekyll-apply-theme/\">https://junhobaik.github.io/jekyll-apply-theme/</a> > <a href=\"https://rainsound-k.github.io/jekyll-blog/2018/05/02/apply-custom-plugin.html\">https://rainsound-k.github.io/jekyll-blog/2018/05/02/apply-custom-plugin.html</a> > <a href=\"https://jetalog.net/86\">https://jetalog.net/86</a></p>\n</blockquote>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#os--app\">OS &#x26; App</a></li>\n<li><a href=\"#install\">Install</a></li>\n<li><a href=\"#apply-theme\">Apply theme</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 25, 2020","title":"[Blog] GitHub에 blog 생성","categories":"SCM","author":"TMM","emoji":null},"fields":{"slug":"/2020-02-25-scm-create-github-blog/"}},"prev":{"id":"28d774f9-e303-5178-9a00-804a0bcf8a3a","html":"<p>VSCode에서 Springboot Gradle 프로젝트를 생성 후 관련 명령어들을 실행 하도록 하겠습니다.</p>\n<h3 id=\"프로젝트-생성\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 생성</h3>\n<p>vscode extensions 중 <em>Java Extension Pack (Microsoft)</em>, <em>Spring Boot Extension Pack (Pivotal)</em> 를 추가하면 생성이 가능합니다.\n<em>command + shift + p</em> 를 누르고 <em>Spring Initalizr: Generate a Gradle Project</em> 선택 후 추가 정보를 입력 및 선택합니다.\n그럼 bulid.gradle, gradlew 등 관련 파일들이 생성된것을 확인 할 수 있습니다.</p>\n<h3 id=\"tasks-실행-명령어\" style=\"position:relative;\"><a href=\"#tasks-%EC%8B%A4%ED%96%89-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"tasks 실행 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tasks 실행 명령어</h3>\n<ul>\n<li>\n<p>별 설명이 없어도 이해할 수 있는 명령들 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./gradlew clean\n$ ./gradlew compileJava\n$ ./gradlew jar</code></pre></div>\n</li>\n</ul>\n<h3 id=\"application-실행\" style=\"position:relative;\"><a href=\"#application-%EC%8B%A4%ED%96%89\" aria-label=\"application 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>application 실행</h3>\n<p>gradle 프로젝트 생성시 타입을 java-applicaiton 주면 자동 셋팅 되지만 그렇지 않을경우 몇가지를 추가해야 메인 클레스를 실행 할 수 있습니다. 물론 스프링 메인 함수도 실행 가능 합니다.</p>\n<ul>\n<li>\n<p>build.gradle 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">plugins {\nid 'org.springframework.boot' version '2.2.5.RELEASE'\nid 'io.spring.dependency-management' version '1.0.9.RELEASE'\nid 'java'\nid \"application\"\n}\n\nmainClassName = \"com.example.test.DemoApplication\"</code></pre></div>\n</li>\n<li>\n<p>실행 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./gradlew run</code></pre></div>\n</li>\n</ul>\n<h3 id=\"spring-boot-run\" style=\"position:relative;\"><a href=\"#spring-boot-run\" aria-label=\"spring boot run permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>spring boot run</h3>\n<ul>\n<li>\n<p>실행 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./gradlew bootrun</code></pre></div>\n</li>\n</ul>\n<h3 id=\"dependencies-추가\" style=\"position:relative;\"><a href=\"#dependencies-%EC%B6%94%EA%B0%80\" aria-label=\"dependencies 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dependencies 추가</h3>\n<ul>\n<li>\n<p>build.gradle 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">dependencies {\nimplementation 'org.springframework.boot:spring-boot-starter-thymeleaf'\n}</code></pre></div>\n</li>\n</ul>\n<h3 id=\"war-파일-생성\" style=\"position:relative;\"><a href=\"#war-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"war 파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>war 파일 생성</h3>\n<ul>\n<li>\n<p>build.gradle 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">plugins {\nid \"war\"\n}\n\ndependencies {\nprovidedCompile 'org.springframework.boot:spring-boot-starter-tomcat'\n}\n\nbootWar {\n  baseName = 'spring-boot-war'\n  archiveVersion = \"0.0.0\"\n  // archiveFileName = '-.war'\n}</code></pre></div>\n</li>\n<li>\n<p>실행 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./gradlew bootwar</code></pre></div>\n</li>\n<li>tomcat 서버에 추가해서 실행</li>\n</ul>\n<h3 id=\"jar-파일-생성\" style=\"position:relative;\"><a href=\"#jar-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"jar 파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jar 파일 생성</h3>\n<ul>\n<li>\n<p>build.gradle 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">bootJar {\n  archiveBaseName = 'spring-boot-jar'\n  // archiveFileName = '-.jar'\n  archiveVersion = \"0.0.0\"\n}</code></pre></div>\n</li>\n<li>\n<p>실행 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./gradlew bootjar\n\n$ java -jar build/libs/spring-boot-jar-0.0.0.jar</code></pre></div>\n</li>\n</ul>\n<h3 id=\"참고사이트\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-label=\"참고사이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고사이트</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">war</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//gigas<span class=\"token punctuation\">-</span>blog.tistory.com/115\n<span class=\"token key atrule\">jar</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//gigas<span class=\"token punctuation\">-</span>blog.tistory.com/114\n<span class=\"token key atrule\">build type</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//www.devkuma.com/books/pages/1069\n<span class=\"token key atrule\">step-by-step test</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//yookeun.github.io/java/2015/02/09/java<span class=\"token punctuation\">-</span>gradle/</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\">프로젝트 생성</a></li>\n<li><a href=\"#tasks-%EC%8B%A4%ED%96%89-%EB%AA%85%EB%A0%B9%EC%96%B4\">tasks 실행 명령어</a></li>\n<li><a href=\"#application-%EC%8B%A4%ED%96%89\">application 실행</a></li>\n<li><a href=\"#spring-boot-run\">spring boot run</a></li>\n<li><a href=\"#dependencies-%EC%B6%94%EA%B0%80\">dependencies 추가</a></li>\n<li><a href=\"#war-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\">war 파일 생성</a></li>\n<li><a href=\"#jar-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\">jar 파일 생성</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EC%82%AC%EC%9D%B4%ED%8A%B8\">참고사이트</a></li>\n</ul>\n</div>","frontmatter":{"date":"March 02, 2020","title":"[Gradle] Springboot + Gradle","categories":"Framework","author":"TMM","emoji":null},"fields":{"slug":"/2020-03-02-framework-springboot-gradle/"}},"site":{"siteMetadata":{"siteUrl":"https://whitexozu.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/2020-02-26-language-java-lambda-stream/","nextSlug":"/2020-02-25-scm-create-github-blog/","prevSlug":"/2020-03-02-framework-springboot-gradle/"}},"staticQueryHashes":["1073350324","2938748437"]}