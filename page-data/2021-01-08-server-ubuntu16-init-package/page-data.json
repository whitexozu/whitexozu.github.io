{"componentChunkName":"component---src-templates-blog-template-js","path":"/2021-01-08-server-ubuntu16-init-package/","result":{"data":{"cur":{"id":"3ccf425f-53f5-5947-b45d-e2ee88224c5c","html":"<p>ubuntu 16을 개인 노트북에 설치 후 ssh와 mysql 설치 그리고 gunicorn + flask와 pm2 + nodejs 조합으로 웹서비스를 구성 해보겠습니다. 추가로 nginx + certbot 조합으로 https서비스도 구성하겠습니다.</p>\n<h3 id=\"apt\" style=\"position:relative;\"><a href=\"#apt\" aria-label=\"apt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>apt</h3>\n<ol>\n<li>\n<p>source list 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/apt/source.list</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">deb http://kr.archive.ubuntu.com/ubuntu xenial main restricted universe multiverse\ndeb http://kr.archive.ubuntu.com/ubuntu xenial-updates main restricted universe multiverse\ndeb http://kr.archive.ubuntu.com/ubuntu xenial-backports main restricted universe multiverse\ndeb http://kr.archive.ubuntu.com/ubuntu xenial-proposed main restricted universe multiverse\ndeb http://kr.archive.ubuntu.com/ubuntu xenial-security main restricted universe multiverse\n\ndeb-src http://kr.archive.ubuntu.com/ubuntu xenial main restricted universe multiverse\ndeb-src http://kr.archive.ubuntu.com/ubuntu xenial-updates main restricted universe multiverse\ndeb-src http://kr.archive.ubuntu.com/ubuntu xenial-backports main restricted universe multiverse</code></pre></div>\n</li>\n</ol>\n<h3 id=\"openssh-server\" style=\"position:relative;\"><a href=\"#openssh-server\" aria-label=\"openssh server permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>openssh-server</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> upgrade\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> openssh-server</code></pre></div>\n</li>\n</ol>\n<h3 id=\"노트북-전원-유지\" style=\"position:relative;\"><a href=\"#%EB%85%B8%ED%8A%B8%EB%B6%81-%EC%A0%84%EC%9B%90-%EC%9C%A0%EC%A7%80\" aria-label=\"노트북 전원 유지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>노트북 전원 유지</h3>\n<ol>\n<li>\n<p>설정</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/systemd/logind.conf</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\"><span class=\"token operator\">.</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span>\n#HandleLidSwitch<span class=\"token operator\">=</span><span class=\"token keyword\">suspend</span>\n# 위 내용을 아래 내용으로 변경\nHandleLidSwitch<span class=\"token operator\">=</span>ignore\n<span class=\"token operator\">.</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span></code></pre></div>\n</li>\n<li>\n<p>서비스 재실행</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ systemctl restart systemd-logind</code></pre></div>\n</li>\n</ol>\n<h3 id=\"git-설치\" style=\"position:relative;\"><a href=\"#git-%EC%84%A4%EC%B9%98\" aria-label=\"git 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>git 설치</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">git</span></code></pre></div>\n</li>\n</ol>\n<h3 id=\"python36\" style=\"position:relative;\"><a href=\"#python36\" aria-label=\"python36 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>python3.6</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> add-apt-repository ppa:deadsnakes/ppa\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> python3.6\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> python3.6-gdbm</code></pre></div>\n</li>\n<li>\n<p>파이선 버젼 변경 등록</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.5 <span class=\"token number\">1</span>\n$ <span class=\"token function\">sudo</span> update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 <span class=\"token number\">2</span></code></pre></div>\n</li>\n<li>\n<p>파이선 버젼 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> update-alternatives --config python3</code></pre></div>\n</li>\n<li>\n<p>확인</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> /usr/bin\n$ ll <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> python3</code></pre></div>\n</li>\n</ol>\n<h3 id=\"pip3\" style=\"position:relative;\"><a href=\"#pip3\" aria-label=\"pip3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pip3</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> python3-pip\n$ python3 -m pip <span class=\"token function\">install</span> --upgrade pip</code></pre></div>\n</li>\n<li>\n<p>확인</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> /usr/bin\n$ ll <span class=\"token operator\">|</span> gerp pip3</code></pre></div>\n</li>\n</ol>\n<h3 id=\"mysql-8\" style=\"position:relative;\"><a href=\"#mysql-8\" aria-label=\"mysql 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mysql 8</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> ~/download\n$ <span class=\"token builtin class-name\">cd</span> ~/download\n$ <span class=\"token function\">wget</span> https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb\n$ <span class=\"token function\">sudo</span> dpkg -i mysql-apt-config_0.8.12-1_all.deb\n   <span class=\"token operator\">></span> MySQL Server <span class=\"token operator\">&amp;</span> Cluster 선택\n   <span class=\"token operator\">></span> MySQL <span class=\"token number\">8</span> 선택\n   <span class=\"token operator\">></span> OK 선택\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> mysql-server\n   <span class=\"token operator\">></span> root 비밀번호 입력\n   <span class=\"token operator\">></span> root 비밀번호 재입력\n   <span class=\"token operator\">></span> Use Strong Pasword Encryption 암호방식 선택\n$ mysql --version\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">service</span> mysql start\n$ mysql -u root -p</code></pre></div>\n</li>\n<li>\n<p>db 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">mysql<span class=\"token operator\">></span> create database nlp<span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">></span> create user <span class=\"token string\">'admin'</span>@<span class=\"token string\">'%'</span> identified by <span class=\"token string\">'password'</span><span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">></span> grant all on nlp.* to <span class=\"token string\">'admin'</span>@<span class=\"token string\">'%'</span><span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">></span> flush privileges<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>삭제</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">service</span> mysql stop\n\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> remove --purge mysql-server -y\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> remove --purge mysql-server* -y\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> remove --purge mysql-common -y\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> autoremove\n\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> -rf /var/log/mysql\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> -rf /var/log/mysql.*\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> -rf /var/lib/mysql\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> -rf /etc/mysql</code></pre></div>\n</li>\n</ol>\n<h3 id=\"flask\" style=\"position:relative;\"><a href=\"#flask\" aria-label=\"flask permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flask</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip3 <span class=\"token function\">install</span> <span class=\"token assign-left variable\">Flask</span><span class=\"token operator\">==</span><span class=\"token number\">1.1</span>.2</code></pre></div>\n</li>\n<li>\n<p>flask app 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> ~/dev\n$ <span class=\"token function\">mkdir</span> ~/dev/project\n$ <span class=\"token function\">mkdir</span> ~/dev/project/thesaurus\n$ <span class=\"token function\">vi</span> ~/dev/project/thesaurus/app.py</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">return</span> <span class=\"token string\">\"&lt;h1 style='color:blue'>Hello Thesaurus&lt;/h1>\"</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n   app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">5000</span><span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>실행</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python3 ~/dev/project/thesaurus/app.py</code></pre></div>\n</li>\n<li>\n<p>테스트</p>\n<ul>\n<li>해당 서버 <strong>IP:5000</strong>로 브라우저 접속 테스트</li>\n<li><em>ctrl + c</em> 로 종료</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"gunicorn\" style=\"position:relative;\"><a href=\"#gunicorn\" aria-label=\"gunicorn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gunicorn</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip3 <span class=\"token function\">install</span> gunicorn</code></pre></div>\n</li>\n<li>\n<p>flask 연결 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">vi</span> ~/dev/project/thesaurus/wsgi.py</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> app <span class=\"token keyword\">import</span> app\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n   app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>테스트</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> ~/dev/project/thesaurus/\n$ gunicorn --bind <span class=\"token number\">0.0</span>.0.0:5000 wsgi:app</code></pre></div>\n<ul>\n<li>해당 서버 <strong>IP:5000</strong>로 브라우저 접속 테스트</li>\n<li><em>ctrl + c</em> 로 종료</li>\n</ul>\n</li>\n<li>\n<p>데몬 서비스 등록</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/systemd/system/thesaurus.service</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\"><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\nDescription<span class=\"token operator\">=</span>Gunicorn instance <span class=\"token keyword\">to</span> serve <span class=\"token builtin\">thesaurus</span>\nAfter<span class=\"token operator\">=</span>network<span class=\"token operator\">.</span>target\n\n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\nUser<span class=\"token operator\">=</span>sin\nGroup<span class=\"token operator\">=</span>www<span class=\"token operator\">-</span>data\nWorkingDirectory<span class=\"token operator\">=</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>sin<span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>project<span class=\"token operator\">/</span><span class=\"token builtin\">thesaurus</span>\nExecStart<span class=\"token operator\">=</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>sin<span class=\"token operator\">/</span><span class=\"token operator\">.</span>local<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>gunicorn <span class=\"token operator\">-</span><span class=\"token operator\">-</span>workers <span class=\"token number\">1</span> <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token builtin\">timeout</span> <span class=\"token number\">300</span> <span class=\"token operator\">-</span><span class=\"token operator\">-</span>bind unix<span class=\"token punctuation\">:</span><span class=\"token builtin\">thesaurus</span><span class=\"token operator\">.</span>sock <span class=\"token operator\">-</span><span class=\"token operator\">-</span>error<span class=\"token operator\">-</span>logfile <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>gunicorn<span class=\"token operator\">/</span>error<span class=\"token operator\">.</span>log <span class=\"token operator\">-</span><span class=\"token operator\">-</span>access<span class=\"token operator\">-</span>logfile <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>gunicorn<span class=\"token operator\">/</span>access<span class=\"token operator\">.</span>log <span class=\"token operator\">-</span><span class=\"token operator\">-</span>capture<span class=\"token operator\">-</span>output <span class=\"token operator\">-</span><span class=\"token operator\">-</span>log<span class=\"token operator\">-</span>level <span class=\"token builtin\">debug</span> <span class=\"token operator\">-</span><span class=\"token keyword\">m</span> <span class=\"token number\">007</span> wsgi<span class=\"token punctuation\">:</span>app\nEnvironment<span class=\"token operator\">=</span>PYTHONUNBUFFERED<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n\n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\nWantedBy<span class=\"token operator\">=</span>multi<span class=\"token operator\">-</span>user<span class=\"token operator\">.</span>target</code></pre></div>\n<p><em>ExecStart의 gunicorn 경로는 which 명령으로 확인</em></p>\n</li>\n<li>\n<p>로그 폴더 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> /var/log/gunicorn\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> <span class=\"token number\">777</span> /var/log/gunicorn</code></pre></div>\n</li>\n<li>\n<p>서비스 실행</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> systemctl start thesaurus\n$ <span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> thesaurus\n$ <span class=\"token function\">sudo</span> systemctl status thesaurus</code></pre></div>\n</li>\n<li>\n<p>확인</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ll /home/sin/dev/project/thesaurus/thesaurus.sock</code></pre></div>\n</li>\n</ol>\n<h3 id=\"nginx\" style=\"position:relative;\"><a href=\"#nginx\" aria-label=\"nginx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nginx</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> nginx\n$ nginx -v</code></pre></div>\n</li>\n<li>\n<p>설치 확인</p>\n<ul>\n<li>해당 서버 <strong>IP</strong>로 브라우저 접속 테스트</li>\n</ul>\n</li>\n<li>\n<p>sites-available에 wsgi 등록</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> /etc/nginx/sites-available/default\n<span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/nginx/sites-available/default</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\">server <span class=\"token punctuation\">{</span>\n   listen <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n   server_name localhost<span class=\"token punctuation\">;</span>\n\n   location <span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token builtin\">include</span> proxy_params<span class=\"token punctuation\">;</span>\n       proxy_pass http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>unix<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>sin<span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>project<span class=\"token operator\">/</span><span class=\"token builtin\">thesaurus</span><span class=\"token operator\">/</span><span class=\"token builtin\">thesaurus</span><span class=\"token operator\">.</span>sock<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>sites-enabled에 링크 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled</code></pre></div>\n</li>\n<li>\n<p>nginx 테스트</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> nginx -t</code></pre></div>\n</li>\n<li>\n<p>nginx reload</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> nginx -s reload</code></pre></div>\n</li>\n<li>\n<p>테스트</p>\n<ul>\n<li>해당 서버 <strong>IP</strong>로 브라우저 접속 테스트</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"curl-설치\" style=\"position:relative;\"><a href=\"#curl-%EC%84%A4%EC%B9%98\" aria-label=\"curl 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>curl 설치</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">curl</span></code></pre></div>\n</li>\n</ol>\n<h3 id=\"nvm-설치\" style=\"position:relative;\"><a href=\"#nvm-%EC%84%A4%EC%B9%98\" aria-label=\"nvm 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nvm 설치</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span>\n\n$ <span class=\"token builtin class-name\">source</span> ~/.bashrc</code></pre></div>\n</li>\n<li>\n<p>명령어 참고</p>\n<ul>\n<li>nvm ls-remote : nvm이 지원하는 버전 확인</li>\n<li>nvm install [버전] : nvm에서 지원 버전 install</li>\n<li>ex) $ nvm install v13</li>\n<li>nvm ls => 설치된 node 버전 확인</li>\n<li>nvm use v12.18.2 => v12.18.2 버전의 node를 사용</li>\n<li>nvm alias default [버전] => default 버전을 변경 및 유지</li>\n</ul>\n</li>\n</ol>\n<p><em>32bit 에서는 nvm install 이 안돼요</em></p>\n<h3 id=\"koa\" style=\"position:relative;\"><a href=\"#koa\" aria-label=\"koa permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>koa</h3>\n<ol>\n<li>\n<p>설치</p>\n<p>생략</p>\n</li>\n<li>\n<p>koa app 생성</p>\n<p>생략</p>\n</li>\n<li>\n<p>실행</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node src</code></pre></div>\n</li>\n<li>\n<p>테스트</p>\n<ul>\n<li>해당 서버 <strong>IP:4000</strong>로 브라우저 접속 테스트</li>\n<li><em>ctrl + c</em> 로 종료</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"pm2\" style=\"position:relative;\"><a href=\"#pm2\" aria-label=\"pm2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pm2</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> pm2 -g\n$ pm2 -v</code></pre></div>\n</li>\n<li>\n<p>실행</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pm2 start src</code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">vi</span> ecosystem.config.js\n\nmodule.exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\napps: <span class=\"token punctuation\">[</span>\n       <span class=\"token punctuation\">{</span>\n           name: <span class=\"token string\">'app'</span>,\n           script: <span class=\"token string\">'./src'</span>,\n           instances: <span class=\"token number\">1</span>,\n           exec_mode: <span class=\"token string\">'cluster'</span>,\n       <span class=\"token punctuation\">}</span>,\n   <span class=\"token punctuation\">]</span>,\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n$ pm2 start ecosystem.config.js</code></pre></div>\n</li>\n<li>\n<p>종료</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pm2 <span class=\"token function\">kill</span></code></pre></div>\n</li>\n<li>\n<p>명령어 참고</p>\n<ul>\n<li>목록 : pm2 list</li>\n<li>중지 : pm2 stop 0, pm2 stop all</li>\n<li>삭제 : pm2 delete 0</li>\n<li>모니터 : pm2 monit</li>\n<li>아이디 저장 : pm2 start server.js —name “API”</li>\n<li>상세 보기 : pm2 show API</li>\n<li>로그 : pm2 log</li>\n<li>파일 위치 : ~/.pm2/logs</li>\n<li>stdout : pm2 delete API &#x26;&#x26; pm2 start server.js —name “API” -o ./api.log</li>\n<li>stderr : pm2 delete API &#x26;&#x26; pm2 start server.js —name “API” -o ./api.log -e ./api.log —merge-logs</li>\n<li>스케일 조정 : pm2 scale API 5</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"무료-도메인-생성\" style=\"position:relative;\"><a href=\"#%EB%AC%B4%EB%A3%8C-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%83%9D%EC%84%B1\" aria-label=\"무료 도메인 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>무료 도메인 생성</h3>\n<ol>\n<li>\n<p>회원 가입\u001f</p>\n<ol>\n<li><a href=\"https://www.freenom.com/en/index.html?lang=en\">프리놈</a> 이동</li>\n<li>Sign in > Google login</li>\n<li>Services > Register New Domain</li>\n<li>도메인 키워드 입력 후 검색 > 선택</li>\n<li>Services > My Domains > Manage Domain > Manage Freenom DNS > IP 등록 > 서비스 기간 선택</li>\n<li>등록이 완료되면 5분정도 후에 사용 가능 합니다. 만약 오래 기다려도 사용이 안되면 재등록을 추천 합니다.</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"nginx-수정\" style=\"position:relative;\"><a href=\"#nginx-%EC%88%98%EC%A0%95\" aria-label=\"nginx 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nginx 수정</h3>\n<ol>\n<li>\n<p>pm2 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ sodu <span class=\"token function\">vi</span> /etc/nginx/sites-available/default</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\">server <span class=\"token punctuation\">{</span>\n   listen <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n   server_name  <span class=\"token punctuation\">[</span>도메인<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n   location <span class=\"token operator\">/</span><span class=\"token builtin\">thesaurus</span><span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n       add_header Access<span class=\"token operator\">-</span>Control<span class=\"token operator\">-</span>Allow<span class=\"token operator\">-</span>Origin <span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n       proxy_set_header <span class=\"token keyword\">X</span><span class=\"token operator\">-</span>Real<span class=\"token operator\">-</span>IP $remote_addr<span class=\"token punctuation\">;</span>\n\n       rewrite ^<span class=\"token operator\">/</span><span class=\"token function\">thesaurus</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>$ $<span class=\"token number\">1</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n       proxy_pass http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token builtin\">thesaurus</span><span class=\"token punctuation\">;</span>\n       proxy_redirect off<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   location <span class=\"token operator\">/</span>pwapush<span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n       add_header Access<span class=\"token operator\">-</span>Control<span class=\"token operator\">-</span>Allow<span class=\"token operator\">-</span>Origin <span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n       proxy_set_header <span class=\"token keyword\">X</span><span class=\"token operator\">-</span>Real<span class=\"token operator\">-</span>IP $remote_addr<span class=\"token punctuation\">;</span>\n\n       rewrite ^<span class=\"token operator\">/</span><span class=\"token function\">pwapush</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>$ $<span class=\"token number\">1</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n       proxy_pass http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>pwapush<span class=\"token punctuation\">;</span>\n       proxy_redirect off<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nupstream <span class=\"token builtin\">thesaurus</span> <span class=\"token punctuation\">{</span>\n   server unix<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>sin<span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>project<span class=\"token operator\">/</span>Flask<span class=\"token operator\">-</span>Scaffold<span class=\"token operator\">/</span><span class=\"token builtin\">thesaurus</span><span class=\"token operator\">/</span><span class=\"token builtin\">thesaurus</span><span class=\"token operator\">.</span>sock<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nupstream pwapush <span class=\"token punctuation\">{</span>\n   server localhost<span class=\"token punctuation\">:</span><span class=\"token number\">4000</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<h3 id=\"certbot\" style=\"position:relative;\"><a href=\"#certbot\" aria-label=\"certbot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>certbot</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> snap <span class=\"token function\">install</span> core<span class=\"token punctuation\">;</span> <span class=\"token function\">sudo</span> snap refresh core\n$ <span class=\"token function\">sudo</span> snap <span class=\"token function\">install</span> --classic certbot\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> -s /snap/bin/certbot /usr/bin/certbot</code></pre></div>\n</li>\n<li>\n<p>실행</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> certbot --nginx</code></pre></div>\n</li>\n<li>\n<p>확인</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> certbot certificates</code></pre></div>\n</li>\n<li>\n<p>갱신 테스트</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo certbot renew --dry-run</code></pre></div>\n</li>\n<li>\n<p>자동 갱신 등록</p>\n<ol>\n<li>root 비밀번호 설정</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">passwd</span></code></pre></div>\n<ol>\n<li>root 권한으로 crontab 등록</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ su\n$ crontab -e\n\n15 3 * * 0 certbot renew</code></pre></div>\n</li>\n<li>\n<p>결과 확인 및 자동 https 변경 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\">server <span class=\"token punctuation\">{</span>\n   listen <span class=\"token number\">443</span> <span class=\"token builtin\">ssl</span><span class=\"token punctuation\">;</span> # managed by Certbot\n   server_name  <span class=\"token punctuation\">[</span>domain name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n   location <span class=\"token operator\">/</span><span class=\"token builtin\">thesaurus</span><span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n       add_header Access<span class=\"token operator\">-</span>Control<span class=\"token operator\">-</span>Allow<span class=\"token operator\">-</span>Origin <span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n       proxy_set_header <span class=\"token keyword\">X</span><span class=\"token operator\">-</span>Real<span class=\"token operator\">-</span>IP $remote_addr<span class=\"token punctuation\">;</span>\n\n       rewrite ^<span class=\"token operator\">/</span><span class=\"token function\">thesaurus</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>$ $<span class=\"token number\">1</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n       proxy_pass http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token builtin\">thesaurus</span><span class=\"token punctuation\">;</span>\n       proxy_redirect off<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   location <span class=\"token operator\">/</span>pwapush<span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n       add_header Access<span class=\"token operator\">-</span>Control<span class=\"token operator\">-</span>Allow<span class=\"token operator\">-</span>Origin <span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n       proxy_set_header <span class=\"token keyword\">X</span><span class=\"token operator\">-</span>Real<span class=\"token operator\">-</span>IP $remote_addr<span class=\"token punctuation\">;</span>\n\n       rewrite ^<span class=\"token operator\">/</span><span class=\"token function\">pwapush</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>$ $<span class=\"token number\">1</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n       proxy_pass http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>pwapush<span class=\"token punctuation\">;</span>\n       proxy_redirect off<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   ssl_certificate <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>letsencrypt<span class=\"token operator\">/</span>live<span class=\"token operator\">/</span><span class=\"token punctuation\">[</span>도메인<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>fullchain<span class=\"token operator\">.</span>pem<span class=\"token punctuation\">;</span> # managed by Certbot\n   ssl_certificate_key <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>letsencrypt<span class=\"token operator\">/</span>live<span class=\"token operator\">/</span><span class=\"token punctuation\">[</span>도메인<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>privkey<span class=\"token operator\">.</span>pem<span class=\"token punctuation\">;</span> # managed by Certbot\n   <span class=\"token builtin\">include</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>letsencrypt<span class=\"token operator\">/</span><span class=\"token keyword\">options</span><span class=\"token operator\">-</span><span class=\"token builtin\">ssl</span><span class=\"token operator\">-</span>nginx<span class=\"token operator\">.</span><span class=\"token keyword\">conf</span><span class=\"token punctuation\">;</span> # managed by Certbot\n   ssl_dhparam <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>letsencrypt<span class=\"token operator\">/</span><span class=\"token builtin\">ssl</span><span class=\"token operator\">-</span>dhparams<span class=\"token operator\">.</span>pem<span class=\"token punctuation\">;</span> # managed by Certbot\n\n<span class=\"token punctuation\">}</span>\n\nupstream <span class=\"token builtin\">thesaurus</span> <span class=\"token punctuation\">{</span>\n   server unix<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>sin<span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>project<span class=\"token operator\">/</span>Flask<span class=\"token operator\">-</span>Scaffold<span class=\"token operator\">/</span><span class=\"token builtin\">thesaurus</span><span class=\"token operator\">/</span><span class=\"token builtin\">thesaurus</span><span class=\"token operator\">.</span>sock<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nupstream pwapush <span class=\"token punctuation\">{</span>\n   server localhost<span class=\"token punctuation\">:</span><span class=\"token number\">4000</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nserver <span class=\"token punctuation\">{</span>\n   #<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$host <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>도메인<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   #    <span class=\"token keyword\">return</span> <span class=\"token number\">301</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>$host$request_uri<span class=\"token punctuation\">;</span>\n   #<span class=\"token punctuation\">}</span>\n\n   listen       <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n   server_name  <span class=\"token punctuation\">[</span>도메인<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   #<span class=\"token keyword\">return</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span> # managed by Certbot\n\n   location <span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">return</span> <span class=\"token number\">301</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>$server_name$request_uri<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#apt\">apt</a></li>\n<li><a href=\"#openssh-server\">openssh-server</a></li>\n<li><a href=\"#%EB%85%B8%ED%8A%B8%EB%B6%81-%EC%A0%84%EC%9B%90-%EC%9C%A0%EC%A7%80\">노트북 전원 유지</a></li>\n<li><a href=\"#git-%EC%84%A4%EC%B9%98\">git 설치</a></li>\n<li><a href=\"#python36\">python3.6</a></li>\n<li><a href=\"#pip3\">pip3</a></li>\n<li><a href=\"#mysql-8\">mysql 8</a></li>\n<li><a href=\"#flask\">flask</a></li>\n<li><a href=\"#gunicorn\">gunicorn</a></li>\n<li><a href=\"#nginx\">nginx</a></li>\n<li><a href=\"#curl-%EC%84%A4%EC%B9%98\">curl 설치</a></li>\n<li><a href=\"#nvm-%EC%84%A4%EC%B9%98\">nvm 설치</a></li>\n<li><a href=\"#koa\">koa</a></li>\n<li><a href=\"#pm2\">pm2</a></li>\n<li><a href=\"#%EB%AC%B4%EB%A3%8C-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%83%9D%EC%84%B1\">무료 도메인 생성</a></li>\n<li><a href=\"#nginx-%EC%88%98%EC%A0%95\">nginx 수정</a></li>\n<li><a href=\"#certbot\">certbot</a></li>\n</ul>\n</div>","excerpt":"ubuntu 16을 개인 노트북에 설치 후 ssh와 mysql 설치 그리고 gunicorn + flask와 pm2 + nodejs 조합으로 웹서비스를 구성 해보겠습니다. 추가로 nginx + certbot 조합으로 https서비스도 구성하겠습니다. apt source list 변경 openssh-server 설치 노트북 전원 유지 설정 서비스 재실행 git 설치 설치 python3.6 설치 파이선 버젼 변경 등록 파이선 버젼 변경 확인 pip3 설치 확인 mysql 8 설치 db 생성 삭제 flask 설치 flask app 생성 실행 테스트 해당 서버 IP:5000로 브라우저 접속 테스트 ctrl + c 로 종료 gunicorn 설치 flask 연결 설정 테스트 해당 서버 IP:5000로 브라우저 접속 테스트 ctrl + c 로 종료 데몬 서비스 등록 ExecStart의 gunicorn 경로는 which 명령으로 확인 로그 폴더 생성 서비스 실행 확인 nginx 설치 설치 확인 해…","frontmatter":{"date":"January 08, 2021","title":"[Ubuntu 16] Initial install package + nginx + gunicorn + flask + pm2 + nodejs + certbot","categories":"SERVER","author":"TMM","emoji":null},"fields":{"slug":"/2021-01-08-server-ubuntu16-init-package/"}},"next":{"id":"c73a72a2-baaa-53d5-a18c-66bc3f0b1e85","html":"<p>작성 예정입니다.</p>\n<h2 id=\"테스트\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트</h2>\n<h3 id=\"환경\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD\" aria-label=\"환경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경</h3>\n<ul>\n<li>vue 기반으로 테스트 했습니다.</li>\n</ul>\n<h3 id=\"예제-소스\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%86%8C%EC%8A%A4\" aria-label=\"예제 소스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 소스</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"></code></pre></div>\n<h3 id=\"설정-정보\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%A0%95-%EC%A0%95%EB%B3%B4\" aria-label=\"설정 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정 정보</h3>\n<h2 id=\"참고사이트\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-label=\"참고사이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고사이트</h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Navigator\">https://developer.mozilla.org/ko/docs/Web/API/Navigator</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8\">테스트</a></p>\n<ul>\n<li><a href=\"#%ED%99%98%EA%B2%BD\">환경</a></li>\n<li><a href=\"#%EC%98%88%EC%A0%9C-%EC%86%8C%EC%8A%A4\">예제 소스</a></li>\n<li><a href=\"#%EC%84%A4%EC%A0%95-%EC%A0%95%EB%B3%B4\">설정 정보</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EC%82%AC%EC%9D%B4%ED%8A%B8\">참고사이트</a></li>\n</ul>\n</div>","frontmatter":{"date":"January 04, 2021","title":"[작성중][Javascript] Navigator","categories":"Javascript","author":"TMM","emoji":null},"fields":{"slug":"/2021-01-04-language-javascript-navigator/"}},"prev":{"id":"8ac46fb8-1c8b-56fb-bd2c-fa7b5068fddc","html":"<p>spring-boot으로 서비스 중인 서버에 대량의 메시지 발송 API 연동이 필요하게 되었습니다. 그래서 RabbitMQ를 사용해 보기로 했습니다.\n<br />\n최종 목적은 spring-boot으로 메시지 큐에 등록 후 python daemon으로 처리되도록 하겠습니다.</p>\n<h2 id=\"install\" style=\"position:relative;\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>install</h2>\n<h3 id=\"window\" style=\"position:relative;\"><a href=\"#window\" aria-label=\"window permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>window</h3>\n<ol>\n<li>\n<p>설치</p>\n<ol>\n<li><a href=\"https://www.rabbitmq.com/install-windows.html\">https://www.rabbitmq.com/install-windows.html</a> 이동</li>\n<li>Direct Download 에 있는 링크를 클릭하여 다운로드</li>\n<li>저는 <em>rabbitmq-server-3.8.14.exe</em> 으로 받았습니다.</li>\n<li>다운받은 파일을 실행하면 <strong>Erlang could not be detected</strong> 라는 메시지가 나옵니다. PC에 Erlang을 설치해야 합니다. “예(Y)” 를 눌러줍니다.</li>\n<li>Erlang 다운로드 페이지에서 <em>OTP 23.1 windowns 64-bit Binary Fil</em>을 다운받아 설치합니다.</li>\n<li>다시 RabbitMQ Install File을 눌러 설치합니다.</li>\n</ol>\n</li>\n<li>\n<p>시스템 변수 확인</p>\n<ul>\n<li>ERLANG_HOME: :\\Program Files\\erl-23.3</li>\n</ul>\n</li>\n<li>\n<p>시스템 변수 등록</p>\n<ul>\n<li>환경 변수 등록 창의 사용자 변수 Path에 <em>C:\\Program Files\\RabbitMQ Server\\rabbitmq</em>server-3.8.14\\sbin_ 추가합니다.</li>\n</ul>\n</li>\n<li>\n<p>명령어</p>\n<ul>\n<li>상태 확인</li>\n<li><code class=\"language-text\">rabbitmqctl status</code></li>\n<li>Port 확인</li>\n<li><code class=\"language-text\">netstat -ano | findstr 5672</code></li>\n<li>플러그인 설치</li>\n<li><code class=\"language-text\">rabbitmq-plugins enable rabbitmq_management</code></li>\n<li>플러그인 설치 확인</li>\n<li><code class=\"language-text\">rabbitmq-plugins list</code></li>\n<li>사용자 추가</li>\n<li><code class=\"language-text\">rabbitmqctl add_user admin p@ssWord</code></li>\n<li>사용자 태그 설정</li>\n<li><code class=\"language-text\">rabbitmqctl set_user_tags admin administrator</code></li>\n<li>사용자 목록 확인</li>\n<li><code class=\"language-text\">rabbitmqctl list_users</code></li>\n<li>사용자 삭제</li>\n<li><code class=\"language-text\">rabbitmqctl delete_user rabbitmq</code></li>\n<li>사용자 권한 설정</li>\n<li><code class=\"language-text\">rabbitmqctl set_permissions [-p &lt;vhostpath>] &lt;user> &lt;conf> &lt;write> &lt;read></code></li>\n<li><code class=\"language-text\">rabbitmqctl set_permissions -p / \"admin\" \".*\" \".*\" \".*\"</code></li>\n<li>사용자 권한 목록 확인</li>\n<li><code class=\"language-text\">rabbitmqctl list_permissions</code></li>\n</ul>\n</li>\n<li>\n<p>관리 페이지 접속</p>\n<ul>\n<li><a href=\"http://localhost:15672/\">http://localhost:15672/</a></li>\n<li>admin/p@ssWord</li>\n</ul>\n</li>\n<li>\n<p>config 및 log 파일 위치</p>\n<ul>\n<li>C:\\Users&#x3C;사용자명>\\AppData\\Roaming\\RabbitMQ</li>\n</ul>\n</li>\n<li>\n<p>사용자 변수 등록 (confing 및 log 파일 위치 변경)</p>\n<ul>\n<li>RABBITMQ_BASE : D:\\dev\\application\\rabbitmq</li>\n</ul>\n</li>\n<li>\n<p>설치 후 에러 발생시</p>\n<ul>\n<li>서비스 삭제</li>\n<li><code class=\"language-text\">rabbitmq-service.bat remove</code></li>\n<li>서비스 생성</li>\n<li><code class=\"language-text\">rabbitmq-service.bat install</code></li>\n<li>실행</li>\n<li><code class=\"language-text\">rabbitmq-server.bat -detached</code></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"ubuntu-16\" style=\"position:relative;\"><a href=\"#ubuntu-16\" aria-label=\"ubuntu 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ubuntu 16</h3>\n<ol>\n<li>\n<p>설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ apt-key adv --keyserver <span class=\"token string\">\"hkps.pool.sks-keyservers.net\"</span> --recv-keys <span class=\"token string\">\"0x6B73A36E6026DFCA\"</span>\n<span class=\"token punctuation\">..</span>.\n\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/bintray.rabbitmq.list <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\ndeb &lt;https://dl.bintray.com/rabbitmq-erlang/debian> xenial erlang\ndeb &lt;https://dl.bintray.com/rabbitmq/debian> xenial main\nEOF</span>\n\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token punctuation\">..</span>.\n\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> rabbitmq-server\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n</li>\n<li>\n<p>서버 시작</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">service</span> rabbitmq-server start\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span> AUTHENTICATING FOR org.freedesktop.systemd1.manage-units <span class=\"token operator\">==</span><span class=\"token operator\">=</span>\nAuthentication is required to start <span class=\"token string\">'rabbitmq-server.service'</span><span class=\"token builtin class-name\">.</span>\nAuthenticating as: root\nPassword:\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n</li>\n<li>\n<p>플러그인 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> rabbitmq-plugins <span class=\"token builtin class-name\">enable</span> rabbitmq_management\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n</li>\n<li>\n<p>사용자 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> rabbitmqctl add_user admin password\n$ <span class=\"token function\">sudo</span> rabbitmqctl set_user_tags admin administrator\n$ <span class=\"token function\">sudo</span> rabbitmqctl set_permissions -p / <span class=\"token string\">\"admin\"</span> <span class=\"token string\">\".*\"</span> <span class=\"token string\">\".*\"</span> <span class=\"token string\">\".*\"</span>\n$ <span class=\"token function\">sudo</span> rabbitmqctl list_users\n$ <span class=\"token function\">sudo</span> rabbitmqctl list_permissions</code></pre></div>\n</li>\n<li>\n<p>관리 페이지 접속</p>\n<ul>\n<li><a href=\"http://localhost:15672/\">http://localhost:15672/</a></li>\n<li>admin/p@ssWord</li>\n</ul>\n</li>\n<li>\n<p>로그위치</p>\n<ul>\n<li>/var/log/rabbitmq</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"개념\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%85%90\" aria-label=\"개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개념</h2>\n<h3 id=\"rabbitmq란\" style=\"position:relative;\"><a href=\"#rabbitmq%EB%9E%80\" aria-label=\"rabbitmq란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RabbitMQ란</h3>\n<ul>\n<li>RabbitMQ 는 얼랭(Erlang)으로 AMQP를 구현한 메시지 브로커 시스템입니다.</li>\n</ul>\n<h3 id=\"ampq\" style=\"position:relative;\"><a href=\"#ampq\" aria-label=\"ampq permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AMPQ</h3>\n<ul>\n<li>클라이언트가 메시지 미들웨어 브로커와 통신할 수 있게 해주는 메세징 프로토콜입니다.</li>\n<li>Producers -> Broker [Exchange -> Binding -> Queue] -> Consumers</li>\n<li>메시지를 발행하는 Producer에서 Broker의 Exchange로 메시지를 전달하면, Binding 이라는 규칙에 의해 연결된 Queue로 메시지가 참조 복사됩니다.</li>\n<li>메시지를 받아가는 Consumer에서는 브로커의 Queue를 통해 메시지를 받아가서 처리합니다.</li>\n</ul>\n<h2 id=\"예제-소스\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%86%8C%EC%8A%A4\" aria-label=\"예제 소스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 소스</h2>\n<h3 id=\"spring-boot\" style=\"position:relative;\"><a href=\"#spring-boot\" aria-label=\"spring boot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring-boot</h3>\n<h4 id=\"producer\" style=\"position:relative;\"><a href=\"#producer\" aria-label=\"producer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Producer</h4>\n<ol>\n<li>\n<p>pom.xml</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-amqp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.amqp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-rabbit-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n...</code></pre></div>\n</li>\n<li>\n<p>application.yml</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span>\n   <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> localhost\n   <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> admin\n   <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> p@ssWord</code></pre></div>\n</li>\n<li>\n<p>Sender.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RabbitMessagingTemplate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Sender</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token annotation punctuation\">@Autowired</span>\n   <span class=\"token class-name\">RabbitMessagingTemplate</span> template<span class=\"token punctuation\">;</span>\n\n   <span class=\"token annotation punctuation\">@Bean</span>\n   <span class=\"token class-name\">Queue</span> <span class=\"token function\">queue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello_queue\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       template<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello_queue\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>Controller.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n   <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/send\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sendNaverworks</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">MsgDTO</span> userDomain<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n           sender<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>userDomain<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token keyword\">return</span> <span class=\"token string\">\"success\"</span>\n       <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n           <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token keyword\">return</span> <span class=\"token string\">\"fail\"</span>\n       <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n</ol>\n<h3 id=\"python-36\" style=\"position:relative;\"><a href=\"#python-36\" aria-label=\"python 36 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python 3.6</h3>\n<h4 id=\"consumer\" style=\"position:relative;\"><a href=\"#consumer\" aria-label=\"consumer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>consumer</h4>\n<ol>\n<li>\n<p>single<em>process</em>consumer.py</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token keyword\">import</span> pika\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> json\n\nconnection <span class=\"token operator\">=</span> pika<span class=\"token punctuation\">.</span>BlockingConnection<span class=\"token punctuation\">(</span>\n   pika<span class=\"token punctuation\">.</span>ConnectionParameters<span class=\"token punctuation\">(</span>\n       host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n       port<span class=\"token operator\">=</span><span class=\"token number\">5672</span><span class=\"token punctuation\">,</span>\n       virtual_host<span class=\"token operator\">=</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n       credentials<span class=\"token operator\">=</span>pika<span class=\"token punctuation\">.</span>PlainCredentials<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'p@ssWord'</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\nchannel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nchannel<span class=\"token punctuation\">.</span>queue_declare<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">,</span> durable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">' [*] Waiting for messages. To exit press CTRL+C'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> properties<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [x] Received %r\"</span> <span class=\"token operator\">%</span> body<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   d <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [x] Done {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">[</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   ch<span class=\"token punctuation\">.</span>basic_ack<span class=\"token punctuation\">(</span>delivery_tag<span class=\"token operator\">=</span>method<span class=\"token punctuation\">.</span>delivery_tag<span class=\"token punctuation\">)</span>\n\n\nchannel<span class=\"token punctuation\">.</span>basic_qos<span class=\"token punctuation\">(</span>prefetch_count<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nchannel<span class=\"token punctuation\">.</span>basic_consume<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">,</span> on_message_callback<span class=\"token operator\">=</span>callback<span class=\"token punctuation\">)</span>\n\nchannel<span class=\"token punctuation\">.</span>start_consuming<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>multi<em>process</em>consumer.py</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> logging\n<span class=\"token keyword\">import</span> logging<span class=\"token punctuation\">.</span>handlers\n<span class=\"token keyword\">import</span> multiprocessing\n<span class=\"token keyword\">from</span> threading <span class=\"token keyword\">import</span> Thread\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> choice<span class=\"token punctuation\">,</span> random\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> platform\n<span class=\"token keyword\">import</span> pika\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> requests\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       self<span class=\"token punctuation\">.</span>th <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">get_logger</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       <span class=\"token keyword\">return</span> logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">listener_start</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> file_path<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       self<span class=\"token punctuation\">.</span>th <span class=\"token operator\">=</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>_proc_log_queue<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n       self<span class=\"token punctuation\">.</span>th<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">listener_end</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       queue<span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n       self<span class=\"token punctuation\">.</span>th<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'log listener end...'</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">_proc_log_queue</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> file_path<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       self<span class=\"token punctuation\">.</span>config_log<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n       logger <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_logger<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n           <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n               record <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n               <span class=\"token keyword\">if</span> record <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                   <span class=\"token keyword\">break</span>\n               logger<span class=\"token punctuation\">.</span>handle<span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span>\n           <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span>\n               <span class=\"token keyword\">import</span> sys<span class=\"token punctuation\">,</span> traceback\n               <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'listener problem'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token operator\">=</span>sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">)</span>\n               traceback<span class=\"token punctuation\">.</span>print_exc<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token operator\">=</span>sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">config_queue_log</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       qh <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>handlers<span class=\"token punctuation\">.</span>QueueHandler<span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span>\n       logger <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>qh<span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">return</span> logger\n\n   <span class=\"token keyword\">def</span> <span class=\"token function\">config_log</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> file_path<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       formatter <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>Formatter<span class=\"token punctuation\">(</span><span class=\"token string\">'[%(asctime)s] [%(pathname)s:%(lineno)d] [%(processName)s] %(levelname)s - %(message)s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%Y-%m-%d %H:%M:%S'</span><span class=\"token punctuation\">)</span>\n\n       <span class=\"token comment\"># err file handler</span>\n       fileHander_error <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>handlers<span class=\"token punctuation\">.</span>TimedRotatingFileHandler<span class=\"token punctuation\">(</span>filename<span class=\"token operator\">=</span>file_path <span class=\"token operator\">+</span> <span class=\"token string\">'/consumer.error.log'</span><span class=\"token punctuation\">,</span> when<span class=\"token operator\">=</span><span class=\"token string\">'midnight'</span><span class=\"token punctuation\">,</span> interval<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n       fileHander_error<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>WARNING<span class=\"token punctuation\">)</span>\n       <span class=\"token comment\"># file handler</span>\n       fileHander_debug <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>handlers<span class=\"token punctuation\">.</span>TimedRotatingFileHandler<span class=\"token punctuation\">(</span>filename<span class=\"token operator\">=</span>file_path <span class=\"token operator\">+</span> <span class=\"token string\">'/consumer.debug.log'</span><span class=\"token punctuation\">,</span> when<span class=\"token operator\">=</span><span class=\"token string\">'midnight'</span><span class=\"token punctuation\">,</span> interval<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n       fileHander_debug<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\n       <span class=\"token comment\"># console handler</span>\n       streamHander_info <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>StreamHandler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n       streamHander_info<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">)</span>\n       <span class=\"token comment\"># logging format setting</span>\n       fileHander_error<span class=\"token punctuation\">.</span>setFormatter<span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">)</span>\n       fileHander_error<span class=\"token punctuation\">.</span>suffix <span class=\"token operator\">=</span> <span class=\"token string\">'%Y-%m-%d'</span>\n       fileHander_debug<span class=\"token punctuation\">.</span>setFormatter<span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">)</span>\n       fileHander_debug<span class=\"token punctuation\">.</span>suffix <span class=\"token operator\">=</span> <span class=\"token string\">'%Y-%m-%d'</span>\n       streamHander_info<span class=\"token punctuation\">.</span>setFormatter<span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">if</span> platform<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'Windows'</span><span class=\"token punctuation\">:</span>\n           <span class=\"token keyword\">import</span> msvcrt\n           <span class=\"token keyword\">import</span> win32api\n           <span class=\"token keyword\">import</span> win32con\n           win32api<span class=\"token punctuation\">.</span>SetHandleInformation<span class=\"token punctuation\">(</span>msvcrt<span class=\"token punctuation\">.</span>get_osfhandle<span class=\"token punctuation\">(</span>fileHander_debug<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                       win32con<span class=\"token punctuation\">.</span>HANDLE_FLAG_INHERIT<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n           win32api<span class=\"token punctuation\">.</span>SetHandleInformation<span class=\"token punctuation\">(</span>msvcrt<span class=\"token punctuation\">.</span>get_osfhandle<span class=\"token punctuation\">(</span>fileHander_error<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                       win32con<span class=\"token punctuation\">.</span>HANDLE_FLAG_INHERIT<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n       <span class=\"token comment\"># create logger, assign handler</span>\n       logger <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>fileHander_error<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>fileHander_debug<span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>streamHander_info<span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">return</span> logger\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> properties<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">,</span> logger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n   logger<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n       d <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n       <span class=\"token comment\"># print(\" [x] to {}\".format(d['to']))</span>\n       <span class=\"token comment\"># print(\" [x] from {}\".format(d['from']))</span>\n       <span class=\"token comment\"># print(\" [x] content {}\".format(d['content']))</span>\n\n       logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'{} - {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n       logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'headers [{}] - {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n       <span class=\"token keyword\">if</span> response<span class=\"token punctuation\">.</span>status_code <span class=\"token operator\">!=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span>\n           logger<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>ERROR<span class=\"token punctuation\">,</span> <span class=\"token string\">'{} - {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n       logger<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>ERROR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%r caught exception %r\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>multiprocessing<span class=\"token punctuation\">.</span>current_process<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n   ch<span class=\"token punctuation\">.</span>basic_ack<span class=\"token punctuation\">(</span>delivery_tag<span class=\"token operator\">=</span>method<span class=\"token punctuation\">.</span>delivery_tag<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">consume</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n   name <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span>current_process<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name\n   logger <span class=\"token operator\">=</span> Log<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>config_queue_log<span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">,</span> <span class=\"token string\">'mp'</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Worker started: %s'</span> <span class=\"token operator\">%</span> name<span class=\"token punctuation\">)</span>\n\n   connection <span class=\"token operator\">=</span> pika<span class=\"token punctuation\">.</span>BlockingConnection<span class=\"token punctuation\">(</span>\n       pika<span class=\"token punctuation\">.</span>ConnectionParameters<span class=\"token punctuation\">(</span>\n           host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n           port<span class=\"token operator\">=</span><span class=\"token number\">5672</span><span class=\"token punctuation\">,</span>\n           virtual_host<span class=\"token operator\">=</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n           credentials<span class=\"token operator\">=</span>pika<span class=\"token punctuation\">.</span>PlainCredentials<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'p@ssWord'</span><span class=\"token punctuation\">)</span>\n       <span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">)</span>\n   channel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   channel<span class=\"token punctuation\">.</span>queue_declare<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">)</span>\n\n   channel<span class=\"token punctuation\">.</span>basic_qos<span class=\"token punctuation\">(</span>prefetch_count<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n   channel<span class=\"token punctuation\">.</span>basic_consume<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">,</span> on_message_callback<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> ch<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> properties<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">:</span> callback<span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> properties<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">,</span> logger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token comment\"># print (' [*] Waiting for messages. To exit press CTRL+C')</span>\n   channel<span class=\"token punctuation\">.</span>start_consuming<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Worker finished: %s'</span> <span class=\"token operator\">%</span> name<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   queue <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span>Queue<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n   listener <span class=\"token operator\">=</span> Log<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   listener<span class=\"token punctuation\">.</span>listener_start<span class=\"token punctuation\">(</span><span class=\"token string\">'/logs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'listener'</span><span class=\"token punctuation\">,</span> queue<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># log consumer thread start</span>\n\n   workers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n   <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># multiprocess loop</span>\n       w <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span>Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>consume<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n       workers<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n       w<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> workers<span class=\"token punctuation\">:</span>\n       w<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n   listener<span class=\"token punctuation\">.</span>listener_end<span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># log consumer thread end</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n   main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ol>\n<h4 id=\"producer-테스트용\" style=\"position:relative;\"><a href=\"#producer-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9A%A9\" aria-label=\"producer 테스트용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Producer (테스트용)</h4>\n<ol>\n<li>\n<p>producer.py</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token keyword\">import</span> pika\n<span class=\"token keyword\">import</span> sys\n\nconnection <span class=\"token operator\">=</span> pika<span class=\"token punctuation\">.</span>BlockingConnection<span class=\"token punctuation\">(</span>\n   pika<span class=\"token punctuation\">.</span>ConnectionParameters<span class=\"token punctuation\">(</span>\n       host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n       port<span class=\"token operator\">=</span><span class=\"token number\">5672</span><span class=\"token punctuation\">,</span>\n       virtual_host<span class=\"token operator\">=</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n       credentials<span class=\"token operator\">=</span>pika<span class=\"token punctuation\">.</span>PlainCredentials<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'p@ssWord'</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\nchannel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nchannel<span class=\"token punctuation\">.</span>queue_declare<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">,</span> durable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\nmessage <span class=\"token operator\">=</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token string\">'{\"from\":123, \"to\": \"email\", \"content\": \"aaa\\\\nbbb\\\\nccc\"}'</span>\nchannel<span class=\"token punctuation\">.</span>basic_publish<span class=\"token punctuation\">(</span>\n   exchange<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n   routing_key<span class=\"token operator\">=</span><span class=\"token string\">'hello_queue'</span><span class=\"token punctuation\">,</span>\n   body<span class=\"token operator\">=</span>message<span class=\"token punctuation\">,</span>\n   properties<span class=\"token operator\">=</span>pika<span class=\"token punctuation\">.</span>BasicProperties<span class=\"token punctuation\">(</span>\n       delivery_mode<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># make message persistent</span>\n   <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [x] Sent %r\"</span> <span class=\"token operator\">%</span> message<span class=\"token punctuation\">)</span>\nconnection<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ol>\n<h2 id=\"systemd-등록\" style=\"position:relative;\"><a href=\"#systemd-%EB%93%B1%EB%A1%9D\" aria-label=\"systemd 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>systemd 등록</h2>\n<h3 id=\"service-file-생성\" style=\"position:relative;\"><a href=\"#service-file-%EC%83%9D%EC%84%B1\" aria-label=\"service file 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>service file 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/systemd/system/<span class=\"token operator\">&lt;</span>project_name<span class=\"token operator\">></span>.consumer.service\n\n<span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>project_name<span class=\"token operator\">></span> consumer\n<span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target\n\n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">User</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>user_name<span class=\"token operator\">></span>\n<span class=\"token assign-left variable\">Group</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>user_name<span class=\"token operator\">></span>\n<span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/usr/bin/python3 /home/<span class=\"token operator\">&lt;</span>user_name<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>project_name<span class=\"token operator\">></span>/consumer/multi_process_consumer.py\n<span class=\"token assign-left variable\">Environment</span><span class=\"token operator\">=</span>PYTHONUNBUFFERED<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n\n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</code></pre></div>\n<h3 id=\"systemd-명령어\" style=\"position:relative;\"><a href=\"#systemd-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"systemd 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>systemd 명령어</h3>\n<ul>\n<li>\n<p>수정 반영</p>\n<ul>\n<li><code class=\"language-text\">sudo systemctl daemon-reload</code></li>\n</ul>\n</li>\n<li>\n<p>시작</p>\n<ul>\n<li><code class=\"language-text\">sudo systemctl start &lt;project_name>.consumer.service</code></li>\n</ul>\n</li>\n<li>\n<p>상태</p>\n<ul>\n<li><code class=\"language-text\">sudo systemctl status &lt;project_name>.consumer.service</code></li>\n</ul>\n</li>\n<li>\n<p>정지</p>\n<ul>\n<li><code class=\"language-text\">sudo systemctl stop &lt;project_name>.consumer.service</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"참고-사이트\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-label=\"참고 사이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 사이트</h2>\n<ul>\n<li><a href=\"https://www.rabbitmq.com/\">https://www.rabbitmq.com/</a></li>\n<li><a href=\"https://jonnung.dev/rabbitmq/2019/02/06/about-amqp-implementtation-of-rabbitmq/\">https://jonnung.dev/rabbitmq/2019/02/06/about-amqp-implementtation-of-rabbitmq/</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#install\">install</a></p>\n<ul>\n<li><a href=\"#window\">window</a></li>\n<li><a href=\"#ubuntu-16\">Ubuntu 16</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B0%9C%EB%85%90\">개념</a></p>\n<ul>\n<li><a href=\"#rabbitmq%EB%9E%80\">RabbitMQ란</a></li>\n<li><a href=\"#ampq\">AMPQ</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%98%88%EC%A0%9C-%EC%86%8C%EC%8A%A4\">예제 소스</a></p>\n<ul>\n<li>\n<p><a href=\"#spring-boot\">Spring-boot</a></p>\n<ul>\n<li><a href=\"#producer\">Producer</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#python-36\">Python 3.6</a></p>\n<ul>\n<li><a href=\"#consumer\">consumer</a></li>\n<li><a href=\"#producer-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9A%A9\">Producer (테스트용)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#systemd-%EB%93%B1%EB%A1%9D\">systemd 등록</a></p>\n<ul>\n<li><a href=\"#service-file-%EC%83%9D%EC%84%B1\">service file 생성</a></li>\n<li><a href=\"#systemd-%EB%AA%85%EB%A0%B9%EC%96%B4\">systemd 명령어</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%82%AC%EC%9D%B4%ED%8A%B8\">참고 사이트</a></li>\n</ul>\n</div>","frontmatter":{"date":"March 25, 2021","title":"[RabbitMQ] Install RabbitMQ on windows and linux","categories":"Message Queue","author":"TMM","emoji":null},"fields":{"slug":"/2021-03-25-messagequeue-rabbitmq-springboot/"}},"site":{"siteMetadata":{"siteUrl":"https://whitexozu.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/2021-01-08-server-ubuntu16-init-package/","nextSlug":"/2021-01-04-language-javascript-navigator/","prevSlug":"/2021-03-25-messagequeue-rabbitmq-springboot/"}},"staticQueryHashes":["1073350324","2938748437"]}